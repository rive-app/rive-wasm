{"version":3,"sources":["webpack://rive/webpack/bootstrap","webpack://rive/webpack/runtime/define property getters","webpack://rive/webpack/runtime/hasOwnProperty shorthand","webpack://rive/webpack/runtime/make namespace object","webpack://rive/../wasm/publish/rive.mjs","webpack://rive/./src/rive.ts"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_scriptDir","document","currentScript","src","undefined","__filename","Rive","readyPromiseResolve","readyPromiseReject","Module","Promise","resolve","reject","moduleOverrides","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","read_","readAsync","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","require","dirname","__dirname","filename","binary","ret","tryParseAsDataURI","toString","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","f","data","intArrayToString","readbuffer","scriptArgs","arguments","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","err","responseType","response","onload","onerror","status","out","bind","wasmBinary","wasmMemory","setTempRet0","WebAssembly","ABORT","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","alignUp","x","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","addOnInit","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","e","RuntimeError","hasPrefix","prefix","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","wasmBinaryFile","getBinary","file","getBinaryPromise","fetch","credentials","then","catch","createWasm","info","asmLibraryArg","receiveInstance","instance","module","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","callbacks","func","arg","char_0","char_9","makeLegalFunctionName","name","createNamedFunction","body","Function","emval_free_list","emval_handle_array","count_emval_handles","count","get_first_emval","init_emval","__emval_register","handle","pop","refcount","extendError","baseErrorType","errorName","errorClass","message","this","stack","Error","create","constructor","PureVirtualError","embind_init_charCodes","codes","Array","embind_charCodes","readLatin1String","c","getInheritedInstanceCount","keys","registeredInstances","getLiveInheritedInstances","rv","k","push","deletionQueue","flushPendingDeletes","$$","deleteScheduled","delayFunction","setDelayFunction","fn","init_embind","BindingError","throwBindingError","getBasestPointer","class_","baseClass","upcast","registerInheritedInstance","requireHandle","registeredTypes","getTypeName","type","___getTypeName","_free","requireRegisteredType","rawType","humanName","impl","unregisterInheritedInstance","detachFinalizer","finalizationGroup","runDestructor","smartPtr","smartPtrType","rawDestructor","ptrType","registeredClass","releaseClassHandle","attachFinalizer","FinalizationGroup","iter","result","next","done","unregister","register","__embind_create_inheriting_constructor","constructorName","wrapperType","properties","arraySlice","wrapperPrototype","instancePrototype","baseClassPrototype","baseConstructor","ctor","pureVirtualFunctions","forEach","apply","p","inner","concat","preservePointerOnDelete","defineProperties","structRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","typeDependencies","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","__embind_finalize_value_object","structType","reg","rawConstructor","fieldRecords","fields","map","field","getterReturnType","setterArgumentType","fieldTypes","fieldName","getter","getterContext","setter","setterContext","write","TypeError","destructorFunction","getShiftFromSize","size","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","wt","ClassHandle_isAliasOf","other","ClassHandle","leftClass","left","rightClass","right","shallowCopyInternalPointer","throwInstanceAlreadyDeleted","ClassHandle_clone","clone","getPrototypeOf","ClassHandle_delete","ClassHandle_isDeleted","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","getActualType","downcast","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","isConst","sharingPolicy","clonedHandle","rawShare","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstance","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","destructor","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","replacePublicSymbol","dynCallLegacy","sig","args","dynCall","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","fp","UnboundTypeError","throwUnboundTypeError","types","unboundTypes","seen","visit","join","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","new_","argumentList","dummy","r","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","heap32VectorToArray","firstElement","array","__embind_register_class_class_function","rawClassType","rawArgTypesAddr","invokerSignature","rawInvoker","rawArgTypes","unboundTypesHandler","invokerArgsArray","validateThis","this_","__embind_register_class_class_property","rawFieldType","rawFieldPtr","getterSignature","setterSignature","desc","configurable","set","v","fieldType","__embind_register_class_constructor","invoker","__embind_register_class_function","context","isPureVirtual","method","className","memberFunction","__embind_register_class_property","__emval_decref","__embind_register_emval","enumReadValueFromPointer","signed","__embind_register_enum","isSigned","values","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","t","floatReadValueFromPointer","__embind_register_float","__embind_register_function","integerReadValueFromPointer","__embind_register_integer","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","a","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","_malloc","charCode","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","__embind_register_value_object","constructorSignature","__embind_register_value_object_field","__embind_register_void","isVoid","__emval_as","returnType","destructorsRef","rd","__emval_allocateDestructors","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","__emval_call_method","caller","__emval_call_void_method","__emval_addMethodCaller","__emval_lookupTypes","__emval_get_method_caller","retType","signatureName","params","functionBody","offset","__emval_get_module_property","__emval_get_property","__emval_incref","__emval_new_cstring","__emval_run_destructors","__emval_take_value","argv","_abort","emscripten_realloc_buffer","grow","byteLength","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","Math","min","max","SYSCALLS","mappings","buffers","printChar","stream","curr","varargs","getStr","get64","low","high","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","num","j","_setTempRet0","$i","ASSERTIONS","chr","decodeBase64","atob","input","chr1","chr2","chr3","enc2","enc3","enc4","keyStr","charAt","intArrayFromBase64","s","Buffer","from","_","decoded","bytes","calledRun","run","doRun","setTimeout","runCaller","makeMatrix","m2d","m","DOMMatrix","xx","b","xy","yx","d","yy","tx","ty","onRuntimeInitialized","RenderPaintStyle","FillRule","RenderPath","RenderPaint","Renderer","StrokeCap","StrokeJoin","BlendMode","fill","stroke","evenOdd","nonZero","CanvasRenderPath","extend","__construct","__parent","_path2D","Path2D","reset","addPath","fillRule","_fillRule","moveTo","y","lineTo","cubicTo","ox","oy","ix","iy","bezierCurveTo","close","closePath","_colorStyle","CanvasRenderPaint","color","_value","thickness","_thickness","miter","_join","round","bevel","cap","butt","_cap","square","style","_style","blendMode","srcOver","_blend","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","multiply","hue","saturation","luminosity","linearGradient","sx","sy","ey","_gradient","stops","radialGradient","isRadial","addStop","stop","completeGradient","draw","ctx","globalCompositeOperation","dx","dy","radius","sqrt","createRadialGradient","createLinearGradient","addColorStop","strokeStyle","lineWidth","lineCap","lineJoin","fillStyle","CanvasRenderer","_ctx","save","restore","transform","matrix","drawPath","paint","clipPath","clip","renderFactory","makeRenderPaint","makeRenderPath","ready","PlaybackState","Fit","Alignment","StateMachineInputType","fit","Contain","alignment","Center","minX","minY","maxX","maxY","new","Layout","copyWith","runtimeFit","rive","cachedRuntimeFit","Cover","cover","contain","Fill","FitWidth","fitWidth","FitHeight","fitHeight","ScaleDown","scaleDown","none","runtimeAlignment","cachedRuntimeAlignment","TopLeft","topLeft","TopCenter","topCenter","TopRight","topRight","CenterLeft","centerLeft","CenterRight","centerRight","BottomLeft","bottomLeft","BottomCenter","bottomCenter","BottomRight","bottomRight","center","loadRuntime","RuntimeLoader","wasmURL","runtime","callBackQueue","getInstance","isLoading","awaitInstance","setWasmUrl","animation","playing","loopCount","scrubTo","LinearAnimationInstance","time","loopValue","advance","cleanup","delete","EventType","LoopType","runtimeInput","fire","Trigger","stateMachine","inputs","StateMachineInstance","initInputs","names","stateChangedCount","stateChangedNameByIndex","inputCount","mapRuntimeInput","SMIInput","bool","StateMachineInput","Boolean","asBool","number","Number","asNumber","trigger","asTrigger","artboard","eventManager","animations","stateMachines","add","animatables","fireEvent","mapToStringArray","instancedAnimationNames","instancedMachineNames","aIndex","mIndex","anim","animationByName","Animation","sm","stateMachineByName","StateMachine","Play","Pause","paused","play","pause","scrub","forScrubbing","filter","includes","removedNames","splice","animationsToRemove","machinesToRemove","Stop","reduce","acc","isPlaying","atLeastOne","instancedName","animationCount","animationByIndex","stateMachineCount","stateMachineByIndex","handleLooping","Loop","PingPong","handleStateChanges","statesChanged","StateChange","listeners","getListeners","listener","remove","currentListener","removeAll","l","event","queue","task","action","_updateLayout","isRendererActive","loaded","readyForPlaying","renderSecondTimer","canvas","layout","getContext","EventManager","on","Load","onloaderror","LoadError","onplay","onpause","onstop","onloop","onstatechange","taskQueue","TaskQueueManager","init","autoplay","missingErrorMessage","startingAnimationNames","startingStateMachineNames","initData","artboardName","animationNames","stateMachineNames","loadRiveFile","load","initArtboard","drawFrame","msg","instanceNames","rootArtboard","artboardByName","defaultArtboard","animator","Animator","renderer","startRendering","onSecond","frameRequestId","lastRenderTime","elapsedTime","needsScrub","sort","first","second","didLoop","alignRenderer","bounds","clearRect","isPaused","isStopped","width","height","align","_layout","artBoardName","resizeToCanvas","stateMachineInputs","find","unsubscribe","unsubscribeAll","stopRendering","cancelAnimationFrame","requestAnimationFrame","riveContents","artboards","artboardCount","artboardByIndex","artboardContents","inputContents","req","Request","arrayBuffer","Testing"],"mappings":"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","file":"rive.min.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nvar Rive = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(Rive) {\n  Rive = Rive || {};\n\nnull;\n\nvar Module = typeof Rive !== \"undefined\" ? Rive : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise(function(resolve, reject) {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\nvar moduleOverrides = {};\n\nvar key;\n\nfor (key in Module) {\n if (Module.hasOwnProperty(key)) {\n  moduleOverrides[key] = Module[key];\n }\n}\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = function(status, toThrow) {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = false;\n\nvar ENVIRONMENT_IS_WORKER = false;\n\nvar ENVIRONMENT_IS_NODE = false;\n\nvar ENVIRONMENT_IS_SHELL = false;\n\nENVIRONMENT_IS_WEB = typeof window === \"object\";\n\nENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n\nENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nvar nodeFS;\n\nvar nodePath;\n\nif (ENVIRONMENT_IS_NODE) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = require(\"path\").dirname(scriptDirectory) + \"/\";\n } else {\n  scriptDirectory = __dirname + \"/\";\n }\n read_ = function shell_read(filename, binary) {\n  var ret = tryParseAsDataURI(filename);\n  if (ret) {\n   return binary ? ret : ret.toString();\n  }\n  if (!nodeFS) nodeFS = require(\"fs\");\n  if (!nodePath) nodePath = require(\"path\");\n  filename = nodePath[\"normalize\"](filename);\n  return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n };\n readBinary = function readBinary(filename) {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n   ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n };\n if (process[\"argv\"].length > 1) {\n  thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n }\n arguments_ = process[\"argv\"].slice(2);\n process[\"on\"](\"uncaughtException\", function(ex) {\n  if (!(ex instanceof ExitStatus)) {\n   throw ex;\n  }\n });\n process[\"on\"](\"unhandledRejection\", abort);\n quit_ = function(status) {\n  process[\"exit\"](status);\n };\n Module[\"inspect\"] = function() {\n  return \"[Emscripten Module object]\";\n };\n} else if (ENVIRONMENT_IS_SHELL) {\n if (typeof read != \"undefined\") {\n  read_ = function shell_read(f) {\n   var data = tryParseAsDataURI(f);\n   if (data) {\n    return intArrayToString(data);\n   }\n   return read(f);\n  };\n }\n readBinary = function readBinary(f) {\n  var data;\n  data = tryParseAsDataURI(f);\n  if (data) {\n   return data;\n  }\n  if (typeof readbuffer === \"function\") {\n   return new Uint8Array(readbuffer(f));\n  }\n  data = read(f, \"binary\");\n  assert(typeof data === \"object\");\n  return data;\n };\n if (typeof scriptArgs != \"undefined\") {\n  arguments_ = scriptArgs;\n } else if (typeof arguments != \"undefined\") {\n  arguments_ = arguments;\n }\n if (typeof quit === \"function\") {\n  quit_ = function(status) {\n   quit(status);\n  };\n }\n if (typeof print !== \"undefined\") {\n  if (typeof console === \"undefined\") console = {};\n  console.log = print;\n  console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n }\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document !== \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n {\n  read_ = function(url) {\n   try {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.send(null);\n    return xhr.responseText;\n   } catch (err) {\n    var data = tryParseAsDataURI(url);\n    if (data) {\n     return intArrayToString(data);\n    }\n    throw err;\n   }\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = function(url) {\n    try {\n     var xhr = new XMLHttpRequest();\n     xhr.open(\"GET\", url, false);\n     xhr.responseType = \"arraybuffer\";\n     xhr.send(null);\n     return new Uint8Array(xhr.response);\n    } catch (err) {\n     var data = tryParseAsDataURI(url);\n     if (data) {\n      return data;\n     }\n     throw err;\n    }\n   };\n  }\n  readAsync = function(url, onload, onerror) {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = function() {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    var data = tryParseAsDataURI(url);\n    if (data) {\n     onload(data.buffer);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = function(title) {\n  document.title = title;\n };\n} else {}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.warn.bind(console);\n\nfor (key in moduleOverrides) {\n if (moduleOverrides.hasOwnProperty(key)) {\n  Module[key] = moduleOverrides[key];\n }\n}\n\nmoduleOverrides = null;\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nvar tempRet0 = 0;\n\nvar setTempRet0 = function(value) {\n tempRet0 = value;\n};\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\nif (typeof WebAssembly !== \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(\"Assertion failed: \" + text);\n }\n}\n\nvar UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heap, idx, maxBytesToRead) {\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n  return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n } else {\n  var str = \"\";\n  while (idx < endPtr) {\n   var u0 = heap[idx++];\n   if (!(u0 & 128)) {\n    str += String.fromCharCode(u0);\n    continue;\n   }\n   var u1 = heap[idx++] & 63;\n   if ((u0 & 224) == 192) {\n    str += String.fromCharCode((u0 & 31) << 6 | u1);\n    continue;\n   }\n   var u2 = heap[idx++] & 63;\n   if ((u0 & 240) == 224) {\n    u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n   } else {\n    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n   }\n   if (u0 < 65536) {\n    str += String.fromCharCode(u0);\n   } else {\n    var ch = u0 - 65536;\n    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n   }\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++] = 192 | u >> 6;\n   heap[outIdx++] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++] = 224 | u >> 12;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   heap[outIdx++] = 240 | u >> 18;\n   heap[outIdx++] = 128 | u >> 12 & 63;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  }\n }\n heap[outIdx] = 0;\n return outIdx - startIdx;\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n\nfunction lengthBytesUTF8(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n  if (u <= 127) ++len; else if (u <= 2047) len += 2; else if (u <= 65535) len += 3; else len += 4;\n }\n return len;\n}\n\nvar UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n var endPtr = ptr;\n var idx = endPtr >> 1;\n var maxIdx = idx + maxBytesToRead / 2;\n while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n endPtr = idx << 1;\n if (endPtr - ptr > 32 && UTF16Decoder) {\n  return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n } else {\n  var str = \"\";\n  for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n   var codeUnit = HEAP16[ptr + i * 2 >> 1];\n   if (codeUnit == 0) break;\n   str += String.fromCharCode(codeUnit);\n  }\n  return str;\n }\n}\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 2) return 0;\n maxBytesToWrite -= 2;\n var startPtr = outPtr;\n var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n for (var i = 0; i < numCharsToWrite; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  HEAP16[outPtr >> 1] = codeUnit;\n  outPtr += 2;\n }\n HEAP16[outPtr >> 1] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF16(str) {\n return str.length * 2;\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n var i = 0;\n var str = \"\";\n while (!(i >= maxBytesToRead / 4)) {\n  var utf32 = HEAP32[ptr + i * 4 >> 2];\n  if (utf32 == 0) break;\n  ++i;\n  if (utf32 >= 65536) {\n   var ch = utf32 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  } else {\n   str += String.fromCharCode(utf32);\n  }\n }\n return str;\n}\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 4) return 0;\n var startPtr = outPtr;\n var endPtr = startPtr + maxBytesToWrite - 4;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\n   var trailSurrogate = str.charCodeAt(++i);\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n  }\n  HEAP32[outPtr >> 2] = codeUnit;\n  outPtr += 4;\n  if (outPtr + 4 > endPtr) break;\n }\n HEAP32[outPtr >> 2] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF32(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n  len += 4;\n }\n return len;\n}\n\nfunction alignUp(x, multiple) {\n if (x % multiple > 0) {\n  x += multiple - x % multiple;\n }\n return x;\n}\n\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n buffer = buf;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n}\n\nvar INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n\nvar wasmTable;\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATMAIN__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n runtimeInitialized = true;\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction postRun() {\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nModule[\"preloadedImages\"] = {};\n\nModule[\"preloadedAudios\"] = {};\n\nfunction abort(what) {\n if (Module[\"onAbort\"]) {\n  Module[\"onAbort\"](what);\n }\n what += \"\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nfunction hasPrefix(str, prefix) {\n return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return hasPrefix(filename, dataURIPrefix);\n}\n\nvar fileURIPrefix = \"file://\";\n\nfunction isFileURI(filename) {\n return hasPrefix(filename, fileURIPrefix);\n}\n\nvar wasmBinaryFile = \"data:application/octet-stream;base64,\";\n\nif (!isDataURI(wasmBinaryFile)) {\n wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary(file) {\n try {\n  if (file == wasmBinaryFile && wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  var binary = tryParseAsDataURI(file);\n  if (binary) {\n   return binary;\n  }\n  if (readBinary) {\n   return readBinary(file);\n  } else {\n   throw \"both async and sync fetching of the wasm failed\";\n  }\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise() {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    if (!response[\"ok\"]) {\n     throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(function() {\n    return getBinary(wasmBinaryFile);\n   });\n  } else {\n   if (readAsync) {\n    return new Promise(function(resolve, reject) {\n     readAsync(wasmBinaryFile, function(response) {\n      resolve(new Uint8Array(response));\n     }, reject);\n    });\n   }\n  }\n }\n return Promise.resolve().then(function() {\n  return getBinary(wasmBinaryFile);\n });\n}\n\nfunction createWasm() {\n var info = {\n  \"a\": asmLibraryArg\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  Module[\"asm\"] = exports;\n  wasmMemory = Module[\"asm\"][\"M\"];\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  wasmTable = Module[\"asm\"][\"O\"];\n  addOnInit(Module[\"asm\"][\"N\"]);\n  removeRunDependency(\"wasm-instantiate\");\n }\n addRunDependency(\"wasm-instantiate\");\n function receiveInstantiatedSource(output) {\n  receiveInstance(output[\"instance\"]);\n }\n function instantiateArrayBuffer(receiver) {\n  return getBinaryPromise().then(function(binary) {\n   var result = WebAssembly.instantiate(binary, info);\n   return result;\n  }).then(receiver, function(reason) {\n   err(\"failed to asynchronously prepare wasm: \" + reason);\n   abort(reason);\n  });\n }\n function instantiateAsync() {\n  if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    var result = WebAssembly.instantiateStreaming(response, info);\n    return result.then(receiveInstantiatedSource, function(reason) {\n     err(\"wasm streaming compile failed: \" + reason);\n     err(\"falling back to ArrayBuffer instantiation\");\n     return instantiateArrayBuffer(receiveInstantiatedSource);\n    });\n   });\n  } else {\n   return instantiateArrayBuffer(receiveInstantiatedSource);\n  }\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n   return exports;\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   return false;\n  }\n }\n instantiateAsync().catch(readyPromiseReject);\n return {};\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  var callback = callbacks.shift();\n  if (typeof callback == \"function\") {\n   callback(Module);\n   continue;\n  }\n  var func = callback.func;\n  if (typeof func === \"number\") {\n   if (callback.arg === undefined) {\n    wasmTable.get(func)();\n   } else {\n    wasmTable.get(func)(callback.arg);\n   }\n  } else {\n   func(callback.arg === undefined ? null : callback.arg);\n  }\n }\n}\n\nvar char_0 = 48;\n\nvar char_9 = 57;\n\nfunction makeLegalFunctionName(name) {\n if (undefined === name) {\n  return \"_unknown\";\n }\n name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n var f = name.charCodeAt(0);\n if (f >= char_0 && f <= char_9) {\n  return \"_\" + name;\n } else {\n  return name;\n }\n}\n\nfunction createNamedFunction(name, body) {\n name = makeLegalFunctionName(name);\n return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\n}\n\nvar emval_free_list = [];\n\nvar emval_handle_array = [ {}, {\n value: undefined\n}, {\n value: null\n}, {\n value: true\n}, {\n value: false\n} ];\n\nfunction count_emval_handles() {\n var count = 0;\n for (var i = 5; i < emval_handle_array.length; ++i) {\n  if (emval_handle_array[i] !== undefined) {\n   ++count;\n  }\n }\n return count;\n}\n\nfunction get_first_emval() {\n for (var i = 5; i < emval_handle_array.length; ++i) {\n  if (emval_handle_array[i] !== undefined) {\n   return emval_handle_array[i];\n  }\n }\n return null;\n}\n\nfunction init_emval() {\n Module[\"count_emval_handles\"] = count_emval_handles;\n Module[\"get_first_emval\"] = get_first_emval;\n}\n\nfunction __emval_register(value) {\n switch (value) {\n case undefined:\n  {\n   return 1;\n  }\n\n case null:\n  {\n   return 2;\n  }\n\n case true:\n  {\n   return 3;\n  }\n\n case false:\n  {\n   return 4;\n  }\n\n default:\n  {\n   var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n   emval_handle_array[handle] = {\n    refcount: 1,\n    value: value\n   };\n   return handle;\n  }\n }\n}\n\nfunction extendError(baseErrorType, errorName) {\n var errorClass = createNamedFunction(errorName, function(message) {\n  this.name = errorName;\n  this.message = message;\n  var stack = new Error(message).stack;\n  if (stack !== undefined) {\n   this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n  }\n });\n errorClass.prototype = Object.create(baseErrorType.prototype);\n errorClass.prototype.constructor = errorClass;\n errorClass.prototype.toString = function() {\n  if (this.message === undefined) {\n   return this.name;\n  } else {\n   return this.name + \": \" + this.message;\n  }\n };\n return errorClass;\n}\n\nvar PureVirtualError = undefined;\n\nfunction embind_init_charCodes() {\n var codes = new Array(256);\n for (var i = 0; i < 256; ++i) {\n  codes[i] = String.fromCharCode(i);\n }\n embind_charCodes = codes;\n}\n\nvar embind_charCodes = undefined;\n\nfunction readLatin1String(ptr) {\n var ret = \"\";\n var c = ptr;\n while (HEAPU8[c]) {\n  ret += embind_charCodes[HEAPU8[c++]];\n }\n return ret;\n}\n\nfunction getInheritedInstanceCount() {\n return Object.keys(registeredInstances).length;\n}\n\nfunction getLiveInheritedInstances() {\n var rv = [];\n for (var k in registeredInstances) {\n  if (registeredInstances.hasOwnProperty(k)) {\n   rv.push(registeredInstances[k]);\n  }\n }\n return rv;\n}\n\nvar deletionQueue = [];\n\nfunction flushPendingDeletes() {\n while (deletionQueue.length) {\n  var obj = deletionQueue.pop();\n  obj.$$.deleteScheduled = false;\n  obj[\"delete\"]();\n }\n}\n\nvar delayFunction = undefined;\n\nfunction setDelayFunction(fn) {\n delayFunction = fn;\n if (deletionQueue.length && delayFunction) {\n  delayFunction(flushPendingDeletes);\n }\n}\n\nfunction init_embind() {\n Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n Module[\"setDelayFunction\"] = setDelayFunction;\n}\n\nvar registeredInstances = {};\n\nvar BindingError = undefined;\n\nfunction throwBindingError(message) {\n throw new BindingError(message);\n}\n\nfunction getBasestPointer(class_, ptr) {\n if (ptr === undefined) {\n  throwBindingError(\"ptr should not be undefined\");\n }\n while (class_.baseClass) {\n  ptr = class_.upcast(ptr);\n  class_ = class_.baseClass;\n }\n return ptr;\n}\n\nfunction registerInheritedInstance(class_, ptr, instance) {\n ptr = getBasestPointer(class_, ptr);\n if (registeredInstances.hasOwnProperty(ptr)) {\n  throwBindingError(\"Tried to register registered instance: \" + ptr);\n } else {\n  registeredInstances[ptr] = instance;\n }\n}\n\nfunction requireHandle(handle) {\n if (!handle) {\n  throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n }\n return emval_handle_array[handle].value;\n}\n\nvar registeredTypes = {};\n\nfunction getTypeName(type) {\n var ptr = ___getTypeName(type);\n var rv = readLatin1String(ptr);\n _free(ptr);\n return rv;\n}\n\nfunction requireRegisteredType(rawType, humanName) {\n var impl = registeredTypes[rawType];\n if (undefined === impl) {\n  throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n }\n return impl;\n}\n\nfunction unregisterInheritedInstance(class_, ptr) {\n ptr = getBasestPointer(class_, ptr);\n if (registeredInstances.hasOwnProperty(ptr)) {\n  delete registeredInstances[ptr];\n } else {\n  throwBindingError(\"Tried to unregister unregistered instance: \" + ptr);\n }\n}\n\nfunction detachFinalizer(handle) {}\n\nvar finalizationGroup = false;\n\nfunction runDestructor($$) {\n if ($$.smartPtr) {\n  $$.smartPtrType.rawDestructor($$.smartPtr);\n } else {\n  $$.ptrType.registeredClass.rawDestructor($$.ptr);\n }\n}\n\nfunction releaseClassHandle($$) {\n $$.count.value -= 1;\n var toDelete = 0 === $$.count.value;\n if (toDelete) {\n  runDestructor($$);\n }\n}\n\nfunction attachFinalizer(handle) {\n if (\"undefined\" === typeof FinalizationGroup) {\n  attachFinalizer = function(handle) {\n   return handle;\n  };\n  return handle;\n }\n finalizationGroup = new FinalizationGroup(function(iter) {\n  for (var result = iter.next(); !result.done; result = iter.next()) {\n   var $$ = result.value;\n   if (!$$.ptr) {\n    console.warn(\"object already deleted: \" + $$.ptr);\n   } else {\n    releaseClassHandle($$);\n   }\n  }\n });\n attachFinalizer = function(handle) {\n  finalizationGroup.register(handle, handle.$$, handle.$$);\n  return handle;\n };\n detachFinalizer = function(handle) {\n  finalizationGroup.unregister(handle.$$);\n };\n return attachFinalizer(handle);\n}\n\nfunction __embind_create_inheriting_constructor(constructorName, wrapperType, properties) {\n constructorName = readLatin1String(constructorName);\n wrapperType = requireRegisteredType(wrapperType, \"wrapper\");\n properties = requireHandle(properties);\n var arraySlice = [].slice;\n var registeredClass = wrapperType.registeredClass;\n var wrapperPrototype = registeredClass.instancePrototype;\n var baseClass = registeredClass.baseClass;\n var baseClassPrototype = baseClass.instancePrototype;\n var baseConstructor = registeredClass.baseClass.constructor;\n var ctor = createNamedFunction(constructorName, function() {\n  registeredClass.baseClass.pureVirtualFunctions.forEach(function(name) {\n   if (this[name] === baseClassPrototype[name]) {\n    throw new PureVirtualError(\"Pure virtual function \" + name + \" must be implemented in JavaScript\");\n   }\n  }.bind(this));\n  Object.defineProperty(this, \"__parent\", {\n   value: wrapperPrototype\n  });\n  this[\"__construct\"].apply(this, arraySlice.call(arguments));\n });\n wrapperPrototype[\"__construct\"] = function __construct() {\n  if (this === wrapperPrototype) {\n   throwBindingError(\"Pass correct 'this' to __construct\");\n  }\n  var inner = baseConstructor[\"implement\"].apply(undefined, [ this ].concat(arraySlice.call(arguments)));\n  detachFinalizer(inner);\n  var $$ = inner.$$;\n  inner[\"notifyOnDestruction\"]();\n  $$.preservePointerOnDelete = true;\n  Object.defineProperties(this, {\n   $$: {\n    value: $$\n   }\n  });\n  attachFinalizer(this);\n  registerInheritedInstance(registeredClass, $$.ptr, this);\n };\n wrapperPrototype[\"__destruct\"] = function __destruct() {\n  if (this === wrapperPrototype) {\n   throwBindingError(\"Pass correct 'this' to __destruct\");\n  }\n  detachFinalizer(this);\n  unregisterInheritedInstance(registeredClass, this.$$.ptr);\n };\n ctor.prototype = Object.create(wrapperPrototype);\n for (var p in properties) {\n  ctor.prototype[p] = properties[p];\n }\n return __emval_register(ctor);\n}\n\nvar structRegistrations = {};\n\nfunction runDestructors(destructors) {\n while (destructors.length) {\n  var ptr = destructors.pop();\n  var del = destructors.pop();\n  del(ptr);\n }\n}\n\nfunction simpleReadValueFromPointer(pointer) {\n return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n}\n\nvar awaitingDependencies = {};\n\nvar typeDependencies = {};\n\nvar InternalError = undefined;\n\nfunction throwInternalError(message) {\n throw new InternalError(message);\n}\n\nfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n myTypes.forEach(function(type) {\n  typeDependencies[type] = dependentTypes;\n });\n function onComplete(typeConverters) {\n  var myTypeConverters = getTypeConverters(typeConverters);\n  if (myTypeConverters.length !== myTypes.length) {\n   throwInternalError(\"Mismatched type converter count\");\n  }\n  for (var i = 0; i < myTypes.length; ++i) {\n   registerType(myTypes[i], myTypeConverters[i]);\n  }\n }\n var typeConverters = new Array(dependentTypes.length);\n var unregisteredTypes = [];\n var registered = 0;\n dependentTypes.forEach(function(dt, i) {\n  if (registeredTypes.hasOwnProperty(dt)) {\n   typeConverters[i] = registeredTypes[dt];\n  } else {\n   unregisteredTypes.push(dt);\n   if (!awaitingDependencies.hasOwnProperty(dt)) {\n    awaitingDependencies[dt] = [];\n   }\n   awaitingDependencies[dt].push(function() {\n    typeConverters[i] = registeredTypes[dt];\n    ++registered;\n    if (registered === unregisteredTypes.length) {\n     onComplete(typeConverters);\n    }\n   });\n  }\n });\n if (0 === unregisteredTypes.length) {\n  onComplete(typeConverters);\n }\n}\n\nfunction __embind_finalize_value_object(structType) {\n var reg = structRegistrations[structType];\n delete structRegistrations[structType];\n var rawConstructor = reg.rawConstructor;\n var rawDestructor = reg.rawDestructor;\n var fieldRecords = reg.fields;\n var fieldTypes = fieldRecords.map(function(field) {\n  return field.getterReturnType;\n }).concat(fieldRecords.map(function(field) {\n  return field.setterArgumentType;\n }));\n whenDependentTypesAreResolved([ structType ], fieldTypes, function(fieldTypes) {\n  var fields = {};\n  fieldRecords.forEach(function(field, i) {\n   var fieldName = field.fieldName;\n   var getterReturnType = fieldTypes[i];\n   var getter = field.getter;\n   var getterContext = field.getterContext;\n   var setterArgumentType = fieldTypes[i + fieldRecords.length];\n   var setter = field.setter;\n   var setterContext = field.setterContext;\n   fields[fieldName] = {\n    read: function(ptr) {\n     return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n    },\n    write: function(ptr, o) {\n     var destructors = [];\n     setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n     runDestructors(destructors);\n    }\n   };\n  });\n  return [ {\n   name: reg.name,\n   \"fromWireType\": function(ptr) {\n    var rv = {};\n    for (var i in fields) {\n     rv[i] = fields[i].read(ptr);\n    }\n    rawDestructor(ptr);\n    return rv;\n   },\n   \"toWireType\": function(destructors, o) {\n    for (var fieldName in fields) {\n     if (!(fieldName in o)) {\n      throw new TypeError('Missing field:  \"' + fieldName + '\"');\n     }\n    }\n    var ptr = rawConstructor();\n    for (fieldName in fields) {\n     fields[fieldName].write(ptr, o[fieldName]);\n    }\n    if (destructors !== null) {\n     destructors.push(rawDestructor, ptr);\n    }\n    return ptr;\n   },\n   \"argPackAdvance\": 8,\n   \"readValueFromPointer\": simpleReadValueFromPointer,\n   destructorFunction: rawDestructor\n  } ];\n });\n}\n\nfunction getShiftFromSize(size) {\n switch (size) {\n case 1:\n  return 0;\n\n case 2:\n  return 1;\n\n case 4:\n  return 2;\n\n case 8:\n  return 3;\n\n default:\n  throw new TypeError(\"Unknown type size: \" + size);\n }\n}\n\nfunction registerType(rawType, registeredInstance, options) {\n options = options || {};\n if (!(\"argPackAdvance\" in registeredInstance)) {\n  throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n }\n var name = registeredInstance.name;\n if (!rawType) {\n  throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n }\n if (registeredTypes.hasOwnProperty(rawType)) {\n  if (options.ignoreDuplicateRegistrations) {\n   return;\n  } else {\n   throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n  }\n }\n registeredTypes[rawType] = registeredInstance;\n delete typeDependencies[rawType];\n if (awaitingDependencies.hasOwnProperty(rawType)) {\n  var callbacks = awaitingDependencies[rawType];\n  delete awaitingDependencies[rawType];\n  callbacks.forEach(function(cb) {\n   cb();\n  });\n }\n}\n\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(wt) {\n   return !!wt;\n  },\n  \"toWireType\": function(destructors, o) {\n   return o ? trueValue : falseValue;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": function(pointer) {\n   var heap;\n   if (size === 1) {\n    heap = HEAP8;\n   } else if (size === 2) {\n    heap = HEAP16;\n   } else if (size === 4) {\n    heap = HEAP32;\n   } else {\n    throw new TypeError(\"Unknown boolean type size: \" + name);\n   }\n   return this[\"fromWireType\"](heap[pointer >> shift]);\n  },\n  destructorFunction: null\n });\n}\n\nfunction ClassHandle_isAliasOf(other) {\n if (!(this instanceof ClassHandle)) {\n  return false;\n }\n if (!(other instanceof ClassHandle)) {\n  return false;\n }\n var leftClass = this.$$.ptrType.registeredClass;\n var left = this.$$.ptr;\n var rightClass = other.$$.ptrType.registeredClass;\n var right = other.$$.ptr;\n while (leftClass.baseClass) {\n  left = leftClass.upcast(left);\n  leftClass = leftClass.baseClass;\n }\n while (rightClass.baseClass) {\n  right = rightClass.upcast(right);\n  rightClass = rightClass.baseClass;\n }\n return leftClass === rightClass && left === right;\n}\n\nfunction shallowCopyInternalPointer(o) {\n return {\n  count: o.count,\n  deleteScheduled: o.deleteScheduled,\n  preservePointerOnDelete: o.preservePointerOnDelete,\n  ptr: o.ptr,\n  ptrType: o.ptrType,\n  smartPtr: o.smartPtr,\n  smartPtrType: o.smartPtrType\n };\n}\n\nfunction throwInstanceAlreadyDeleted(obj) {\n function getInstanceTypeName(handle) {\n  return handle.$$.ptrType.registeredClass.name;\n }\n throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n}\n\nfunction ClassHandle_clone() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.preservePointerOnDelete) {\n  this.$$.count.value += 1;\n  return this;\n } else {\n  var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n   $$: {\n    value: shallowCopyInternalPointer(this.$$)\n   }\n  }));\n  clone.$$.count.value += 1;\n  clone.$$.deleteScheduled = false;\n  return clone;\n }\n}\n\nfunction ClassHandle_delete() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n  throwBindingError(\"Object already scheduled for deletion\");\n }\n detachFinalizer(this);\n releaseClassHandle(this.$$);\n if (!this.$$.preservePointerOnDelete) {\n  this.$$.smartPtr = undefined;\n  this.$$.ptr = undefined;\n }\n}\n\nfunction ClassHandle_isDeleted() {\n return !this.$$.ptr;\n}\n\nfunction ClassHandle_deleteLater() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n  throwBindingError(\"Object already scheduled for deletion\");\n }\n deletionQueue.push(this);\n if (deletionQueue.length === 1 && delayFunction) {\n  delayFunction(flushPendingDeletes);\n }\n this.$$.deleteScheduled = true;\n return this;\n}\n\nfunction init_ClassHandle() {\n ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n}\n\nfunction ClassHandle() {}\n\nvar registeredPointers = {};\n\nfunction ensureOverloadTable(proto, methodName, humanName) {\n if (undefined === proto[methodName].overloadTable) {\n  var prevFunc = proto[methodName];\n  proto[methodName] = function() {\n   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n    throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n   }\n   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n  };\n  proto[methodName].overloadTable = [];\n  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n }\n}\n\nfunction exposePublicSymbol(name, value, numArguments) {\n if (Module.hasOwnProperty(name)) {\n  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n   throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n  }\n  ensureOverloadTable(Module, name, name);\n  if (Module.hasOwnProperty(numArguments)) {\n   throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n  }\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  if (undefined !== numArguments) {\n   Module[name].numArguments = numArguments;\n  }\n }\n}\n\nfunction RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n this.name = name;\n this.constructor = constructor;\n this.instancePrototype = instancePrototype;\n this.rawDestructor = rawDestructor;\n this.baseClass = baseClass;\n this.getActualType = getActualType;\n this.upcast = upcast;\n this.downcast = downcast;\n this.pureVirtualFunctions = [];\n}\n\nfunction upcastPointer(ptr, ptrClass, desiredClass) {\n while (ptrClass !== desiredClass) {\n  if (!ptrClass.upcast) {\n   throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n  }\n  ptr = ptrClass.upcast(ptr);\n  ptrClass = ptrClass.baseClass;\n }\n return ptr;\n}\n\nfunction constNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\nfunction genericPointerToWireType(destructors, handle) {\n var ptr;\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  if (this.isSmartPointer) {\n   ptr = this.rawConstructor();\n   if (destructors !== null) {\n    destructors.push(this.rawDestructor, ptr);\n   }\n   return ptr;\n  } else {\n   return 0;\n  }\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n if (!this.isConst && handle.$$.ptrType.isConst) {\n  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n if (this.isSmartPointer) {\n  if (undefined === handle.$$.smartPtr) {\n   throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n  }\n  switch (this.sharingPolicy) {\n  case 0:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n   }\n   break;\n\n  case 1:\n   ptr = handle.$$.smartPtr;\n   break;\n\n  case 2:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    var clonedHandle = handle[\"clone\"]();\n    ptr = this.rawShare(ptr, __emval_register(function() {\n     clonedHandle[\"delete\"]();\n    }));\n    if (destructors !== null) {\n     destructors.push(this.rawDestructor, ptr);\n    }\n   }\n   break;\n\n  default:\n   throwBindingError(\"Unsupporting sharing policy\");\n  }\n }\n return ptr;\n}\n\nfunction nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n if (handle.$$.ptrType.isConst) {\n  throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\nfunction RegisteredPointer_getPointee(ptr) {\n if (this.rawGetPointee) {\n  ptr = this.rawGetPointee(ptr);\n }\n return ptr;\n}\n\nfunction RegisteredPointer_destructor(ptr) {\n if (this.rawDestructor) {\n  this.rawDestructor(ptr);\n }\n}\n\nfunction RegisteredPointer_deleteObject(handle) {\n if (handle !== null) {\n  handle[\"delete\"]();\n }\n}\n\nfunction downcastPointer(ptr, ptrClass, desiredClass) {\n if (ptrClass === desiredClass) {\n  return ptr;\n }\n if (undefined === desiredClass.baseClass) {\n  return null;\n }\n var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n if (rv === null) {\n  return null;\n }\n return desiredClass.downcast(rv);\n}\n\nfunction getInheritedInstance(class_, ptr) {\n ptr = getBasestPointer(class_, ptr);\n return registeredInstances[ptr];\n}\n\nfunction makeClassHandle(prototype, record) {\n if (!record.ptrType || !record.ptr) {\n  throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n }\n var hasSmartPtrType = !!record.smartPtrType;\n var hasSmartPtr = !!record.smartPtr;\n if (hasSmartPtrType !== hasSmartPtr) {\n  throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n }\n record.count = {\n  value: 1\n };\n return attachFinalizer(Object.create(prototype, {\n  $$: {\n   value: record\n  }\n }));\n}\n\nfunction RegisteredPointer_fromWireType(ptr) {\n var rawPointer = this.getPointee(ptr);\n if (!rawPointer) {\n  this.destructor(ptr);\n  return null;\n }\n var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n if (undefined !== registeredInstance) {\n  if (0 === registeredInstance.$$.count.value) {\n   registeredInstance.$$.ptr = rawPointer;\n   registeredInstance.$$.smartPtr = ptr;\n   return registeredInstance[\"clone\"]();\n  } else {\n   var rv = registeredInstance[\"clone\"]();\n   this.destructor(ptr);\n   return rv;\n  }\n }\n function makeDefaultHandle() {\n  if (this.isSmartPointer) {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this.pointeeType,\n    ptr: rawPointer,\n    smartPtrType: this,\n    smartPtr: ptr\n   });\n  } else {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this,\n    ptr: ptr\n   });\n  }\n }\n var actualType = this.registeredClass.getActualType(rawPointer);\n var registeredPointerRecord = registeredPointers[actualType];\n if (!registeredPointerRecord) {\n  return makeDefaultHandle.call(this);\n }\n var toType;\n if (this.isConst) {\n  toType = registeredPointerRecord.constPointerType;\n } else {\n  toType = registeredPointerRecord.pointerType;\n }\n var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n if (dp === null) {\n  return makeDefaultHandle.call(this);\n }\n if (this.isSmartPointer) {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp,\n   smartPtrType: this,\n   smartPtr: ptr\n  });\n } else {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp\n  });\n }\n}\n\nfunction init_RegisteredPointer() {\n RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n}\n\nfunction RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n this.name = name;\n this.registeredClass = registeredClass;\n this.isReference = isReference;\n this.isConst = isConst;\n this.isSmartPointer = isSmartPointer;\n this.pointeeType = pointeeType;\n this.sharingPolicy = sharingPolicy;\n this.rawGetPointee = rawGetPointee;\n this.rawConstructor = rawConstructor;\n this.rawShare = rawShare;\n this.rawDestructor = rawDestructor;\n if (!isSmartPointer && registeredClass.baseClass === undefined) {\n  if (isConst) {\n   this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  } else {\n   this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  }\n } else {\n  this[\"toWireType\"] = genericPointerToWireType;\n }\n}\n\nfunction replacePublicSymbol(name, value, numArguments) {\n if (!Module.hasOwnProperty(name)) {\n  throwInternalError(\"Replacing nonexistant public symbol\");\n }\n if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  Module[name].argCount = numArguments;\n }\n}\n\nfunction dynCallLegacy(sig, ptr, args) {\n var f = Module[\"dynCall_\" + sig];\n return args && args.length ? f.apply(null, [ ptr ].concat(args)) : f.call(null, ptr);\n}\n\nfunction dynCall(sig, ptr, args) {\n if (sig.indexOf(\"j\") != -1) {\n  return dynCallLegacy(sig, ptr, args);\n }\n return wasmTable.get(ptr).apply(null, args);\n}\n\nfunction getDynCaller(sig, ptr) {\n var argCache = [];\n return function() {\n  argCache.length = arguments.length;\n  for (var i = 0; i < arguments.length; i++) {\n   argCache[i] = arguments[i];\n  }\n  return dynCall(sig, ptr, argCache);\n };\n}\n\nfunction embind__requireFunction(signature, rawFunction) {\n signature = readLatin1String(signature);\n function makeDynCaller() {\n  if (signature.indexOf(\"j\") != -1) {\n   return getDynCaller(signature, rawFunction);\n  }\n  return wasmTable.get(rawFunction);\n }\n var fp = makeDynCaller();\n if (typeof fp !== \"function\") {\n  throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n }\n return fp;\n}\n\nvar UnboundTypeError = undefined;\n\nfunction throwUnboundTypeError(message, types) {\n var unboundTypes = [];\n var seen = {};\n function visit(type) {\n  if (seen[type]) {\n   return;\n  }\n  if (registeredTypes[type]) {\n   return;\n  }\n  if (typeDependencies[type]) {\n   typeDependencies[type].forEach(visit);\n   return;\n  }\n  unboundTypes.push(type);\n  seen[type] = true;\n }\n types.forEach(visit);\n throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([ \", \" ]));\n}\n\nfunction __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n name = readLatin1String(name);\n getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n if (upcast) {\n  upcast = embind__requireFunction(upcastSignature, upcast);\n }\n if (downcast) {\n  downcast = embind__requireFunction(downcastSignature, downcast);\n }\n rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n var legalFunctionName = makeLegalFunctionName(name);\n exposePublicSymbol(legalFunctionName, function() {\n  throwUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [ baseClassRawType ]);\n });\n whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], function(base) {\n  base = base[0];\n  var baseClass;\n  var basePrototype;\n  if (baseClassRawType) {\n   baseClass = base.registeredClass;\n   basePrototype = baseClass.instancePrototype;\n  } else {\n   basePrototype = ClassHandle.prototype;\n  }\n  var constructor = createNamedFunction(legalFunctionName, function() {\n   if (Object.getPrototypeOf(this) !== instancePrototype) {\n    throw new BindingError(\"Use 'new' to construct \" + name);\n   }\n   if (undefined === registeredClass.constructor_body) {\n    throw new BindingError(name + \" has no accessible constructor\");\n   }\n   var body = registeredClass.constructor_body[arguments.length];\n   if (undefined === body) {\n    throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n   }\n   return body.apply(this, arguments);\n  });\n  var instancePrototype = Object.create(basePrototype, {\n   constructor: {\n    value: constructor\n   }\n  });\n  constructor.prototype = instancePrototype;\n  var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n  var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n  var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n  var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n  registeredPointers[rawType] = {\n   pointerType: pointerConverter,\n   constPointerType: constPointerConverter\n  };\n  replacePublicSymbol(legalFunctionName, constructor);\n  return [ referenceConverter, pointerConverter, constPointerConverter ];\n });\n}\n\nfunction new_(constructor, argumentList) {\n if (!(constructor instanceof Function)) {\n  throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n }\n var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\n dummy.prototype = constructor.prototype;\n var obj = new dummy();\n var r = constructor.apply(obj, argumentList);\n return r instanceof Object ? r : obj;\n}\n\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n var argCount = argTypes.length;\n if (argCount < 2) {\n  throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n }\n var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n var needsDestructorStack = false;\n for (var i = 1; i < argTypes.length; ++i) {\n  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n   needsDestructorStack = true;\n   break;\n  }\n }\n var returns = argTypes[0].name !== \"void\";\n var argsList = \"\";\n var argsListWired = \"\";\n for (var i = 0; i < argCount - 2; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n }\n var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n if (needsDestructorStack) {\n  invokerFnBody += \"var destructors = [];\\n\";\n }\n var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n var args1 = [ \"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\" ];\n var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];\n if (isClassMethodFunc) {\n  invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n }\n for (var i = 0; i < argCount - 2; ++i) {\n  invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n  args1.push(\"argType\" + i);\n  args2.push(argTypes[i + 2]);\n }\n if (isClassMethodFunc) {\n  argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n }\n invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n if (needsDestructorStack) {\n  invokerFnBody += \"runDestructors(destructors);\\n\";\n } else {\n  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n   var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n   if (argTypes[i].destructorFunction !== null) {\n    invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n    args1.push(paramName + \"_dtor\");\n    args2.push(argTypes[i].destructorFunction);\n   }\n  }\n }\n if (returns) {\n  invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n } else {}\n invokerFnBody += \"}\\n\";\n args1.push(invokerFnBody);\n var invokerFunction = new_(Function, args1).apply(null, args2);\n return invokerFunction;\n}\n\nfunction heap32VectorToArray(count, firstElement) {\n var array = [];\n for (var i = 0; i < count; i++) {\n  array.push(HEAP32[(firstElement >> 2) + i]);\n }\n return array;\n}\n\nfunction __embind_register_class_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, fn) {\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n methodName = readLatin1String(methodName);\n rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + methodName;\n  function unboundTypesHandler() {\n   throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n  }\n  var proto = classType.registeredClass.constructor;\n  if (undefined === proto[methodName]) {\n   unboundTypesHandler.argCount = argCount - 1;\n   proto[methodName] = unboundTypesHandler;\n  } else {\n   ensureOverloadTable(proto, methodName, humanName);\n   proto[methodName].overloadTable[argCount - 1] = unboundTypesHandler;\n  }\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\n   var func = craftInvokerFunction(humanName, invokerArgsArray, null, rawInvoker, fn);\n   if (undefined === proto[methodName].overloadTable) {\n    func.argCount = argCount - 1;\n    proto[methodName] = func;\n   } else {\n    proto[methodName].overloadTable[argCount - 1] = func;\n   }\n   return [];\n  });\n  return [];\n });\n}\n\nfunction validateThis(this_, classType, humanName) {\n if (!(this_ instanceof Object)) {\n  throwBindingError(humanName + ' with invalid \"this\": ' + this_);\n }\n if (!(this_ instanceof classType.registeredClass.constructor)) {\n  throwBindingError(humanName + ' incompatible with \"this\" of type ' + this_.constructor.name);\n }\n if (!this_.$$.ptr) {\n  throwBindingError(\"cannot call emscripten binding method \" + humanName + \" on deleted object\");\n }\n return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);\n}\n\nfunction __embind_register_class_class_property(rawClassType, fieldName, rawFieldType, rawFieldPtr, getterSignature, getter, setterSignature, setter) {\n fieldName = readLatin1String(fieldName);\n getter = embind__requireFunction(getterSignature, getter);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + fieldName;\n  var desc = {\n   get: function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ rawFieldType ]);\n   },\n   enumerable: true,\n   configurable: true\n  };\n  if (setter) {\n   desc.set = function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ rawFieldType ]);\n   };\n  } else {\n   desc.set = function(v) {\n    throwBindingError(humanName + \" is a read-only property\");\n   };\n  }\n  Object.defineProperty(classType.registeredClass.constructor, fieldName, desc);\n  whenDependentTypesAreResolved([], [ rawFieldType ], function(fieldType) {\n   fieldType = fieldType[0];\n   var desc = {\n    get: function() {\n     return fieldType[\"fromWireType\"](getter(rawFieldPtr));\n    },\n    enumerable: true\n   };\n   if (setter) {\n    setter = embind__requireFunction(setterSignature, setter);\n    desc.set = function(v) {\n     var destructors = [];\n     setter(rawFieldPtr, fieldType[\"toWireType\"](destructors, v));\n     runDestructors(destructors);\n    };\n   }\n   Object.defineProperty(classType.registeredClass.constructor, fieldName, desc);\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n assert(argCount > 0);\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n invoker = embind__requireFunction(invokerSignature, invoker);\n var args = [ rawConstructor ];\n var destructors = [];\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = \"constructor \" + classType.name;\n  if (undefined === classType.registeredClass.constructor_body) {\n   classType.registeredClass.constructor_body = [];\n  }\n  if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n   throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n  }\n  classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n   throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n  };\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n    if (arguments.length !== argCount - 1) {\n     throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n    }\n    destructors.length = 0;\n    args.length = argCount;\n    for (var i = 1; i < argCount; ++i) {\n     args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n    }\n    var ptr = invoker.apply(null, args);\n    runDestructors(destructors);\n    return argTypes[0][\"fromWireType\"](ptr);\n   };\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n methodName = readLatin1String(methodName);\n rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + methodName;\n  if (isPureVirtual) {\n   classType.registeredClass.pureVirtualFunctions.push(methodName);\n  }\n  function unboundTypesHandler() {\n   throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n  }\n  var proto = classType.registeredClass.instancePrototype;\n  var method = proto[methodName];\n  if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n   unboundTypesHandler.argCount = argCount - 2;\n   unboundTypesHandler.className = classType.name;\n   proto[methodName] = unboundTypesHandler;\n  } else {\n   ensureOverloadTable(proto, methodName, humanName);\n   proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n  }\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n   if (undefined === proto[methodName].overloadTable) {\n    memberFunction.argCount = argCount - 2;\n    proto[methodName] = memberFunction;\n   } else {\n    proto[methodName].overloadTable[argCount - 2] = memberFunction;\n   }\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_property(classType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n fieldName = readLatin1String(fieldName);\n getter = embind__requireFunction(getterSignature, getter);\n whenDependentTypesAreResolved([], [ classType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + fieldName;\n  var desc = {\n   get: function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ getterReturnType, setterArgumentType ]);\n   },\n   enumerable: true,\n   configurable: true\n  };\n  if (setter) {\n   desc.set = function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ getterReturnType, setterArgumentType ]);\n   };\n  } else {\n   desc.set = function(v) {\n    throwBindingError(humanName + \" is a read-only property\");\n   };\n  }\n  Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n  whenDependentTypesAreResolved([], setter ? [ getterReturnType, setterArgumentType ] : [ getterReturnType ], function(types) {\n   var getterReturnType = types[0];\n   var desc = {\n    get: function() {\n     var ptr = validateThis(this, classType, humanName + \" getter\");\n     return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n    },\n    enumerable: true\n   };\n   if (setter) {\n    setter = embind__requireFunction(setterSignature, setter);\n    var setterArgumentType = types[1];\n    desc.set = function(v) {\n     var ptr = validateThis(this, classType, humanName + \" setter\");\n     var destructors = [];\n     setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, v));\n     runDestructors(destructors);\n    };\n   }\n   Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __emval_decref(handle) {\n if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n  emval_handle_array[handle] = undefined;\n  emval_free_list.push(handle);\n }\n}\n\nfunction __embind_register_emval(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(handle) {\n   var rv = emval_handle_array[handle].value;\n   __emval_decref(handle);\n   return rv;\n  },\n  \"toWireType\": function(destructors, value) {\n   return __emval_register(value);\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: null\n });\n}\n\nfunction enumReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return function(pointer) {\n   var heap = signed ? HEAP8 : HEAPU8;\n   return this[\"fromWireType\"](heap[pointer]);\n  };\n\n case 1:\n  return function(pointer) {\n   var heap = signed ? HEAP16 : HEAPU16;\n   return this[\"fromWireType\"](heap[pointer >> 1]);\n  };\n\n case 2:\n  return function(pointer) {\n   var heap = signed ? HEAP32 : HEAPU32;\n   return this[\"fromWireType\"](heap[pointer >> 2]);\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_enum(rawType, name, size, isSigned) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n function ctor() {}\n ctor.values = {};\n registerType(rawType, {\n  name: name,\n  constructor: ctor,\n  \"fromWireType\": function(c) {\n   return this.constructor.values[c];\n  },\n  \"toWireType\": function(destructors, c) {\n   return c.value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": enumReadValueFromPointer(name, shift, isSigned),\n  destructorFunction: null\n });\n exposePublicSymbol(name, ctor);\n}\n\nfunction __embind_register_enum_value(rawEnumType, name, enumValue) {\n var enumType = requireRegisteredType(rawEnumType, \"enum\");\n name = readLatin1String(name);\n var Enum = enumType.constructor;\n var Value = Object.create(enumType.constructor.prototype, {\n  value: {\n   value: enumValue\n  },\n  constructor: {\n   value: createNamedFunction(enumType.name + \"_\" + name, function() {})\n  }\n });\n Enum.values[enumValue] = Value;\n Enum[name] = Value;\n}\n\nfunction _embind_repr(v) {\n if (v === null) {\n  return \"null\";\n }\n var t = typeof v;\n if (t === \"object\" || t === \"array\" || t === \"function\") {\n  return v.toString();\n } else {\n  return \"\" + v;\n }\n}\n\nfunction floatReadValueFromPointer(name, shift) {\n switch (shift) {\n case 2:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n  };\n\n case 3:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n  };\n\n default:\n  throw new TypeError(\"Unknown float type: \" + name);\n }\n}\n\nfunction __embind_register_float(rawType, name, size) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   return value;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n    throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n   }\n   return value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n name = readLatin1String(name);\n rawInvoker = embind__requireFunction(signature, rawInvoker);\n exposePublicSymbol(name, function() {\n  throwUnboundTypeError(\"Cannot call \" + name + \" due to unbound types\", argTypes);\n }, argCount - 1);\n whenDependentTypesAreResolved([], argTypes, function(argTypes) {\n  var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\n  replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n  return [];\n });\n}\n\nfunction integerReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return signed ? function readS8FromPointer(pointer) {\n   return HEAP8[pointer];\n  } : function readU8FromPointer(pointer) {\n   return HEAPU8[pointer];\n  };\n\n case 1:\n  return signed ? function readS16FromPointer(pointer) {\n   return HEAP16[pointer >> 1];\n  } : function readU16FromPointer(pointer) {\n   return HEAPU16[pointer >> 1];\n  };\n\n case 2:\n  return signed ? function readS32FromPointer(pointer) {\n   return HEAP32[pointer >> 2];\n  } : function readU32FromPointer(pointer) {\n   return HEAPU32[pointer >> 2];\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n name = readLatin1String(name);\n if (maxRange === -1) {\n  maxRange = 4294967295;\n }\n var shift = getShiftFromSize(size);\n var fromWireType = function(value) {\n  return value;\n };\n if (minRange === 0) {\n  var bitshift = 32 - 8 * size;\n  fromWireType = function(value) {\n   return value << bitshift >>> bitshift;\n  };\n }\n var isUnsignedType = name.indexOf(\"unsigned\") != -1;\n registerType(primitiveType, {\n  name: name,\n  \"fromWireType\": fromWireType,\n  \"toWireType\": function(destructors, value) {\n   if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n    throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n   }\n   if (value < minRange || value > maxRange) {\n    throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n   }\n   return isUnsignedType ? value >>> 0 : value | 0;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\n var TA = typeMapping[dataTypeIndex];\n function decodeMemoryView(handle) {\n  handle = handle >> 2;\n  var heap = HEAPU32;\n  var size = heap[handle];\n  var data = heap[handle + 1];\n  return new TA(buffer, data, size);\n }\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": decodeMemoryView,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": decodeMemoryView\n }, {\n  ignoreDuplicateRegistrations: true\n });\n}\n\nfunction __embind_register_std_string(rawType, name) {\n name = readLatin1String(name);\n var stdStringIsUTF8 = name === \"std::string\";\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >> 2];\n   var str;\n   if (stdStringIsUTF8) {\n    var decodeStartPtr = value + 4;\n    for (var i = 0; i <= length; ++i) {\n     var currentBytePtr = value + 4 + i;\n     if (i == length || HEAPU8[currentBytePtr] == 0) {\n      var maxRead = currentBytePtr - decodeStartPtr;\n      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n      if (str === undefined) {\n       str = stringSegment;\n      } else {\n       str += String.fromCharCode(0);\n       str += stringSegment;\n      }\n      decodeStartPtr = currentBytePtr + 1;\n     }\n    }\n   } else {\n    var a = new Array(length);\n    for (var i = 0; i < length; ++i) {\n     a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);\n    }\n    str = a.join(\"\");\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value);\n   }\n   var getLength;\n   var valueIsOfTypeString = typeof value === \"string\";\n   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n    throwBindingError(\"Cannot pass non-string to std::string\");\n   }\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    getLength = function() {\n     return lengthBytesUTF8(value);\n    };\n   } else {\n    getLength = function() {\n     return value.length;\n    };\n   }\n   var length = getLength();\n   var ptr = _malloc(4 + length + 1);\n   HEAPU32[ptr >> 2] = length;\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    stringToUTF8(value, ptr + 4, length + 1);\n   } else {\n    if (valueIsOfTypeString) {\n     for (var i = 0; i < length; ++i) {\n      var charCode = value.charCodeAt(i);\n      if (charCode > 255) {\n       _free(ptr);\n       throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n      }\n      HEAPU8[ptr + 4 + i] = charCode;\n     }\n    } else {\n     for (var i = 0; i < length; ++i) {\n      HEAPU8[ptr + 4 + i] = value[i];\n     }\n    }\n   }\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_std_wstring(rawType, charSize, name) {\n name = readLatin1String(name);\n var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n if (charSize === 2) {\n  decodeString = UTF16ToString;\n  encodeString = stringToUTF16;\n  lengthBytesUTF = lengthBytesUTF16;\n  getHeap = function() {\n   return HEAPU16;\n  };\n  shift = 1;\n } else if (charSize === 4) {\n  decodeString = UTF32ToString;\n  encodeString = stringToUTF32;\n  lengthBytesUTF = lengthBytesUTF32;\n  getHeap = function() {\n   return HEAPU32;\n  };\n  shift = 2;\n }\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >> 2];\n   var HEAP = getHeap();\n   var str;\n   var decodeStartPtr = value + 4;\n   for (var i = 0; i <= length; ++i) {\n    var currentBytePtr = value + 4 + i * charSize;\n    if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n     var maxReadBytes = currentBytePtr - decodeStartPtr;\n     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n     if (str === undefined) {\n      str = stringSegment;\n     } else {\n      str += String.fromCharCode(0);\n      str += stringSegment;\n     }\n     decodeStartPtr = currentBytePtr + charSize;\n    }\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (!(typeof value === \"string\")) {\n    throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n   }\n   var length = lengthBytesUTF(value);\n   var ptr = _malloc(4 + length + charSize);\n   HEAPU32[ptr >> 2] = length >> shift;\n   encodeString(value, ptr + 4, length + charSize);\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_value_object(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n structRegistrations[rawType] = {\n  name: readLatin1String(name),\n  rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n  rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n  fields: []\n };\n}\n\nfunction __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n structRegistrations[structType].fields.push({\n  fieldName: readLatin1String(fieldName),\n  getterReturnType: getterReturnType,\n  getter: embind__requireFunction(getterSignature, getter),\n  getterContext: getterContext,\n  setterArgumentType: setterArgumentType,\n  setter: embind__requireFunction(setterSignature, setter),\n  setterContext: setterContext\n });\n}\n\nfunction __embind_register_void(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  isVoid: true,\n  name: name,\n  \"argPackAdvance\": 0,\n  \"fromWireType\": function() {\n   return undefined;\n  },\n  \"toWireType\": function(destructors, o) {\n   return undefined;\n  }\n });\n}\n\nfunction __emval_as(handle, returnType, destructorsRef) {\n handle = requireHandle(handle);\n returnType = requireRegisteredType(returnType, \"emval::as\");\n var destructors = [];\n var rd = __emval_register(destructors);\n HEAP32[destructorsRef >> 2] = rd;\n return returnType[\"toWireType\"](destructors, handle);\n}\n\nfunction __emval_allocateDestructors(destructorsRef) {\n var destructors = [];\n HEAP32[destructorsRef >> 2] = __emval_register(destructors);\n return destructors;\n}\n\nvar emval_symbols = {};\n\nfunction getStringOrSymbol(address) {\n var symbol = emval_symbols[address];\n if (symbol === undefined) {\n  return readLatin1String(address);\n } else {\n  return symbol;\n }\n}\n\nvar emval_methodCallers = [];\n\nfunction __emval_call_method(caller, handle, methodName, destructorsRef, args) {\n caller = emval_methodCallers[caller];\n handle = requireHandle(handle);\n methodName = getStringOrSymbol(methodName);\n return caller(handle, methodName, __emval_allocateDestructors(destructorsRef), args);\n}\n\nfunction __emval_call_void_method(caller, handle, methodName, args) {\n caller = emval_methodCallers[caller];\n handle = requireHandle(handle);\n methodName = getStringOrSymbol(methodName);\n caller(handle, methodName, null, args);\n}\n\nfunction __emval_addMethodCaller(caller) {\n var id = emval_methodCallers.length;\n emval_methodCallers.push(caller);\n return id;\n}\n\nfunction __emval_lookupTypes(argCount, argTypes) {\n var a = new Array(argCount);\n for (var i = 0; i < argCount; ++i) {\n  a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i], \"parameter \" + i);\n }\n return a;\n}\n\nfunction __emval_get_method_caller(argCount, argTypes) {\n var types = __emval_lookupTypes(argCount, argTypes);\n var retType = types[0];\n var signatureName = retType.name + \"_$\" + types.slice(1).map(function(t) {\n  return t.name;\n }).join(\"_\") + \"$\";\n var params = [ \"retType\" ];\n var args = [ retType ];\n var argsList = \"\";\n for (var i = 0; i < argCount - 1; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  params.push(\"argType\" + i);\n  args.push(types[1 + i]);\n }\n var functionName = makeLegalFunctionName(\"methodCaller_\" + signatureName);\n var functionBody = \"return function \" + functionName + \"(handle, name, destructors, args) {\\n\";\n var offset = 0;\n for (var i = 0; i < argCount - 1; ++i) {\n  functionBody += \"    var arg\" + i + \" = argType\" + i + \".readValueFromPointer(args\" + (offset ? \"+\" + offset : \"\") + \");\\n\";\n  offset += types[i + 1][\"argPackAdvance\"];\n }\n functionBody += \"    var rv = handle[name](\" + argsList + \");\\n\";\n for (var i = 0; i < argCount - 1; ++i) {\n  if (types[i + 1][\"deleteObject\"]) {\n   functionBody += \"    argType\" + i + \".deleteObject(arg\" + i + \");\\n\";\n  }\n }\n if (!retType.isVoid) {\n  functionBody += \"    return retType.toWireType(destructors, rv);\\n\";\n }\n functionBody += \"};\\n\";\n params.push(functionBody);\n var invokerFunction = new_(Function, params).apply(null, args);\n return __emval_addMethodCaller(invokerFunction);\n}\n\nfunction __emval_get_module_property(name) {\n name = getStringOrSymbol(name);\n return __emval_register(Module[name]);\n}\n\nfunction __emval_get_property(handle, key) {\n handle = requireHandle(handle);\n key = requireHandle(key);\n return __emval_register(handle[key]);\n}\n\nfunction __emval_incref(handle) {\n if (handle > 4) {\n  emval_handle_array[handle].refcount += 1;\n }\n}\n\nfunction __emval_new_cstring(v) {\n return __emval_register(getStringOrSymbol(v));\n}\n\nfunction __emval_run_destructors(handle) {\n var destructors = emval_handle_array[handle].value;\n runDestructors(destructors);\n __emval_decref(handle);\n}\n\nfunction __emval_take_value(type, argv) {\n type = requireRegisteredType(type, \"_emval_take_value\");\n var v = type[\"readValueFromPointer\"](argv);\n return __emval_register(v);\n}\n\nfunction _abort() {\n abort();\n}\n\nfunction emscripten_realloc_buffer(size) {\n try {\n  wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  return 1;\n } catch (e) {}\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n var maxHeapSize = 2147483648;\n if (requestedSize > maxHeapSize) {\n  return false;\n }\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  var replacement = emscripten_realloc_buffer(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n return false;\n}\n\nvar SYSCALLS = {\n mappings: {},\n buffers: [ null, [], [] ],\n printChar: function(stream, curr) {\n  var buffer = SYSCALLS.buffers[stream];\n  if (curr === 0 || curr === 10) {\n   (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n   buffer.length = 0;\n  } else {\n   buffer.push(curr);\n  }\n },\n varargs: undefined,\n get: function() {\n  SYSCALLS.varargs += 4;\n  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n },\n get64: function(low, high) {\n  return low;\n }\n};\n\nfunction _fd_close(fd) {\n return 0;\n}\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAP32[iov + i * 8 >> 2];\n  var len = HEAP32[iov + (i * 8 + 4) >> 2];\n  for (var j = 0; j < len; j++) {\n   SYSCALLS.printChar(fd, HEAPU8[ptr + j]);\n  }\n  num += len;\n }\n HEAP32[pnum >> 2] = num;\n return 0;\n}\n\nfunction _setTempRet0($i) {\n setTempRet0($i | 0);\n}\n\ninit_emval();\n\nPureVirtualError = Module[\"PureVirtualError\"] = extendError(Error, \"PureVirtualError\");\n\nembind_init_charCodes();\n\ninit_embind();\n\nBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n\nInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n\ninit_ClassHandle();\n\ninit_RegisteredPointer();\n\nUnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n\nvar ASSERTIONS = false;\n\nfunction intArrayToString(array) {\n var ret = [];\n for (var i = 0; i < array.length; i++) {\n  var chr = array[i];\n  if (chr > 255) {\n   if (ASSERTIONS) {\n    assert(false, \"Character code \" + chr + \" (\" + String.fromCharCode(chr) + \")  at offset \" + i + \" not in 0x00-0xFF.\");\n   }\n   chr &= 255;\n  }\n  ret.push(String.fromCharCode(chr));\n }\n return ret.join(\"\");\n}\n\nvar decodeBase64 = typeof atob === \"function\" ? atob : function(input) {\n var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n var output = \"\";\n var chr1, chr2, chr3;\n var enc1, enc2, enc3, enc4;\n var i = 0;\n input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n do {\n  enc1 = keyStr.indexOf(input.charAt(i++));\n  enc2 = keyStr.indexOf(input.charAt(i++));\n  enc3 = keyStr.indexOf(input.charAt(i++));\n  enc4 = keyStr.indexOf(input.charAt(i++));\n  chr1 = enc1 << 2 | enc2 >> 4;\n  chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n  chr3 = (enc3 & 3) << 6 | enc4;\n  output = output + String.fromCharCode(chr1);\n  if (enc3 !== 64) {\n   output = output + String.fromCharCode(chr2);\n  }\n  if (enc4 !== 64) {\n   output = output + String.fromCharCode(chr3);\n  }\n } while (i < input.length);\n return output;\n};\n\nfunction intArrayFromBase64(s) {\n if (typeof ENVIRONMENT_IS_NODE === \"boolean\" && ENVIRONMENT_IS_NODE) {\n  var buf;\n  try {\n   buf = Buffer.from(s, \"base64\");\n  } catch (_) {\n   buf = new Buffer(s, \"base64\");\n  }\n  return new Uint8Array(buf[\"buffer\"], buf[\"byteOffset\"], buf[\"byteLength\"]);\n }\n try {\n  var decoded = decodeBase64(s);\n  var bytes = new Uint8Array(decoded.length);\n  for (var i = 0; i < decoded.length; ++i) {\n   bytes[i] = decoded.charCodeAt(i);\n  }\n  return bytes;\n } catch (_) {\n  throw new Error(\"Converting base64 string to bytes failed.\");\n }\n}\n\nfunction tryParseAsDataURI(filename) {\n if (!isDataURI(filename)) {\n  return;\n }\n return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n}\n\nvar asmLibraryArg = {\n \"n\": __embind_create_inheriting_constructor,\n \"H\": __embind_finalize_value_object,\n \"A\": __embind_register_bool,\n \"c\": __embind_register_class,\n \"i\": __embind_register_class_class_function,\n \"f\": __embind_register_class_class_property,\n \"r\": __embind_register_class_constructor,\n \"a\": __embind_register_class_function,\n \"b\": __embind_register_class_property,\n \"z\": __embind_register_emval,\n \"k\": __embind_register_enum,\n \"j\": __embind_register_enum_value,\n \"p\": __embind_register_float,\n \"K\": __embind_register_function,\n \"h\": __embind_register_integer,\n \"g\": __embind_register_memory_view,\n \"q\": __embind_register_std_string,\n \"m\": __embind_register_std_wstring,\n \"J\": __embind_register_value_object,\n \"I\": __embind_register_value_object_field,\n \"B\": __embind_register_void,\n \"l\": __emval_as,\n \"G\": __emval_call_method,\n \"e\": __emval_call_void_method,\n \"D\": __emval_decref,\n \"d\": __emval_get_method_caller,\n \"L\": __emval_get_module_property,\n \"u\": __emval_get_property,\n \"C\": __emval_incref,\n \"E\": __emval_new_cstring,\n \"F\": __emval_run_destructors,\n \"t\": __emval_take_value,\n \"s\": _abort,\n \"x\": _emscripten_resize_heap,\n \"y\": _fd_close,\n \"v\": _fd_seek,\n \"o\": _fd_write,\n \"w\": _setTempRet0\n};\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"N\"]).apply(null, arguments);\n};\n\nvar _malloc = Module[\"_malloc\"] = function() {\n return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"P\"]).apply(null, arguments);\n};\n\nvar ___getTypeName = Module[\"___getTypeName\"] = function() {\n return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"Q\"]).apply(null, arguments);\n};\n\nvar ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"R\"]).apply(null, arguments);\n};\n\nvar _free = Module[\"_free\"] = function() {\n return (_free = Module[\"_free\"] = Module[\"asm\"][\"S\"]).apply(null, arguments);\n};\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"T\"]).apply(null, arguments);\n};\n\nvar calledRun;\n\nfunction ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = \"Program terminated with exit(\" + status + \")\";\n this.status = status;\n}\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction run(args) {\n args = args || arguments_;\n if (runDependencies > 0) {\n  return;\n }\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  preMain();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n}\n\nModule[\"run\"] = run;\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nrun();\n\nfunction makeMatrix(m2d) {\n    const m = new DOMMatrix();\n    m.a = m2d.xx;\n    m.b = m2d.xy;\n    m.c = m2d.yx;\n    m.d = m2d.yy;\n    m.e = m2d.tx;\n    m.f = m2d.ty;\n    return m;\n}\n\nModule.onRuntimeInitialized = function () {\n    const {\n        RenderPaintStyle,\n        FillRule,\n        RenderPath,\n        RenderPaint,\n        Renderer,\n        StrokeCap,\n        StrokeJoin,\n        BlendMode\n    } = Module;\n\n    const {\n        fill,\n        stroke\n    } = RenderPaintStyle;\n\n    const {\n        evenOdd,\n        nonZero\n    } = FillRule;\n\n    var CanvasRenderPath = RenderPath.extend(\"CanvasRenderPath\", {\n        __construct: function () {\n            this.__parent.__construct.call(this);\n            this._path2D = new Path2D();\n        },\n        reset: function () {\n            this._path2D = new Path2D();\n        },\n        addPath: function (path, m2d) {\n            this._path2D.addPath(path._path2D, makeMatrix(m2d));\n        },\n        fillRule: function(fillRule) {\n            this._fillRule = fillRule;\n        },\n        moveTo: function (x, y) {\n            this._path2D.moveTo(x, y);\n        },\n        lineTo: function (x, y) {\n            this._path2D.lineTo(x, y);\n        },\n        cubicTo: function (ox, oy, ix, iy, x, y) {\n            this._path2D.bezierCurveTo(ox, oy, ix, iy, x, y);\n        },\n        close: function () {\n            this._path2D.closePath();\n        }\n    });\n\n    function _colorStyle(value) {\n        return 'rgba(' + ((0x00ff0000 & value) >>>\n                16) + ',' + ((0x0000ff00 &\n                value) >>> 8) + ',' + ((0x000000ff & value) >>> 0) + ',' +\n            (((0xff000000 & value) >>> 24) / 0xFF) + ')'\n    }\n    var CanvasRenderPaint = RenderPaint.extend(\"CanvasRenderPaint\", {\n        color: function (value) {\n            this._value = _colorStyle(value);\n        },\n        thickness: function (value) {\n            this._thickness = value;\n        },\n        join: function (value) {\n            switch (value) {\n                case StrokeJoin.miter:\n                    this._join = 'miter';\n                    break;\n                case StrokeJoin.round:\n                    this._join = 'round';\n                    break;\n                case StrokeJoin.bevel:\n                    this._join = 'bevel';\n                    break;\n            }\n        },\n        cap: function (value) {\n            switch (value) {\n                case StrokeCap.butt:\n                    this._cap = 'butt';\n                    break;\n                case StrokeCap.round:\n                    this._cap = 'round';\n                    break;\n                case StrokeCap.square:\n                    this._cap = 'square';\n                    break;\n            }\n        },\n        style: function (value) {\n            this._style = value;\n        },\n        blendMode: function (value) {\n            switch (value) {\n                case BlendMode.srcOver:\n                    this._blend = 'source-over';\n                    break;\n                case BlendMode.screen:\n                    this._blend = 'screen';\n                    break;\n                case BlendMode.overlay:\n                    this._blend = 'overlay';\n                    break;\n                case BlendMode.darken:\n                    this._blend = 'darken';\n                    break;\n                case BlendMode.lighten:\n                    this._blend = 'lighten';\n                    break;\n                case BlendMode.colorDodge:\n                    this._blend = 'color-dodge';\n                    break;\n                case BlendMode.colorBurn:\n                    this._blend = 'color-burn';\n                    break;\n                case BlendMode.hardLight:\n                    this._blend = 'hard-light';\n                    break;\n                case BlendMode.softLight:\n                    this._blend = 'soft-light';\n                    break;\n                case BlendMode.difference:\n                    this._blend = 'difference';\n                    break;\n                case BlendMode.exclusion:\n                    this._blend = 'exclusion';\n                    break;\n                case BlendMode.multiply:\n                    this._blend = 'multiply';\n                    break;\n                case BlendMode.hue:\n                    this._blend = 'hue';\n                    break;\n                case BlendMode.saturation:\n                    this._blend = 'saturation';\n                    break;\n                case BlendMode.color:\n                    this._blend = 'color';\n                    break;\n                case BlendMode.luminosity:\n                    this._blend = 'luminosity';\n                    break;\n            }\n        },\n        linearGradient: function (sx, sy, ex, ey) {\n            this._gradient = {\n                sx,\n                sy,\n                ex,\n                ey,\n                stops: []\n            };\n        },\n        radialGradient: function (sx, sy, ex, ey) {\n            this._gradient = {\n                sx,\n                sy,\n                ex,\n                ey,\n                stops: [],\n                isRadial: true\n            };\n        },\n        addStop: function (color, stop) {\n            this._gradient.stops.push({\n                color,\n                stop\n            });\n        },\n\n        completeGradient: function () {\n\n        },\n\n        draw: function (ctx, path) {\n            let {\n                _style,\n                _value,\n                _gradient,\n                _blend\n            } = this;\n\n            ctx.globalCompositeOperation = _blend;\n\n            if (_gradient != null) {\n                const {\n                    sx,\n                    sy,\n                    ex,\n                    ey,\n                    stops,\n                    isRadial\n                } = _gradient;\n\n                if (isRadial) {\n                    var dx = ex - sx;\n                    var dy = ey - sy;\n                    var radius = Math.sqrt(dx * dx + dy * dy);\n                    _value = ctx.createRadialGradient(sx, sy, 0, sx, sy, radius);\n                } else {\n                    _value = ctx.createLinearGradient(sx, sy, ex, ey);\n                }\n\n                for (const {\n                        stop,\n                        color\n                    } of stops) {\n                    _value.addColorStop(stop, _colorStyle(color));\n                }\n                this._value = _value;\n                this._gradient = null;\n            }\n            switch (_style) {\n                case stroke:\n                    ctx.strokeStyle = _value;\n                    ctx.lineWidth = this._thickness;\n                    ctx.lineCap = this._cap;\n                    ctx.lineJoin = this._join;\n                    ctx.stroke(path._path2D);\n                    break;\n                case fill:\n                    ctx.fillStyle = _value;\n                    ctx.fill(path._path2D, path._fillRule === evenOdd ? 'evenodd' : 'nonzero');\n                    break;\n            }\n        }\n    });\n\n    Module.CanvasRenderer = Renderer.extend(\"Renderer\", {\n        __construct: function (ctx) {\n            this.__parent.__construct.call(this);\n            this._ctx = ctx;\n        },\n        save: function () {\n            this._ctx.save();\n        },\n        restore: function () {\n            this._ctx.restore();\n        },\n        transform: function (matrix) {\n            this._ctx.transform(matrix.xx, matrix.xy, matrix.yx, matrix.yy, matrix.tx,\n                matrix.ty);\n        },\n        drawPath: function (path, paint) {\n            paint.draw(this._ctx, path);\n        },\n        clipPath: function (path) {\n            this._ctx.clip(path._path2D, path._fillRule === evenOdd ? 'evenodd' : 'nonzero');\n        }\n    });\n\n    Module.renderFactory = {\n        makeRenderPaint: function () {\n            return new CanvasRenderPaint();\n        },\n        makeRenderPath: function () {\n            return new CanvasRenderPath();\n        }\n    };\n};\n\n\n  return Rive.ready\n}\n);\n})();\nexport default Rive;\n","import * as rc from 'rive-canvas';\n\n/**\n * Generic type for a parameterless void callback\n */\nexport type VoidCallback = () => void;\n\n// Tracks playback states; numbers map to the runtime's numerical values\n// i.e. play: 0, pause: 1, stop: 2\nenum PlaybackState {\n  Play = 0,\n  Pause,\n  Stop\n}\n\n/**\n * Interface for artboard bounds\n */\nexport interface Bounds extends rc.AABB {}\n\n// #region layout\n\n// Fit options for the canvas\nexport enum Fit {\n  Cover = 'cover',\n  Contain = 'contain',\n  Fill = 'fill',\n  FitWidth = 'fitWidth',\n  FitHeight = 'fitHeight',\n  None = 'none',\n  ScaleDown = 'scaleDown'\n}\n\n// Alignment options for the canvas\nexport enum Alignment {\n  Center = 'center',\n  TopLeft = 'topLeft',\n  TopCenter = 'topCenter',\n  TopRight = 'topRight',\n  CenterLeft = 'centerLeft',\n  CenterRight = 'centerRight',\n  BottomLeft = 'bottomLeft',\n  BottomCenter = 'bottomCenter',\n  BottomRight = 'bottomRight'\n}\n\n// Interface for the Layout static method contructor\nexport interface LayoutParameters {\n  fit?: Fit,\n  alignment?: Alignment,\n  minX?: number,\n  minY?: number,\n  maxX?: number,\n  maxY?: number\n}\n\n// Alignment options for Rive animations in a HTML canvas\nexport class Layout {\n\n  // Runtime fit and alignment are accessed every frame, so we cache their\n  // values to save cycles\n  private cachedRuntimeFit: rc.Fit;\n  private cachedRuntimeAlignment: rc.Alignment;\n\n  public readonly fit: Fit;\n  public readonly alignment: Alignment;\n  public readonly minX: number;\n  public readonly minY: number;\n  public readonly maxX: number;\n  public readonly maxY: number;\n\n  constructor(params?: LayoutParameters) {\n    this.fit = params?.fit ?? Fit.Contain;\n    this.alignment = params?.alignment ?? Alignment.Center;\n    this.minX = params?.minX ?? 0;\n    this.minY = params?.minY ?? 0;\n    this.maxX = params?.maxX ?? 0;\n    this.maxY = params?.maxY ?? 0;\n  }\n\n  // Alternative constructor to build a Layout from an interface/object\n  static new({ fit, alignment, minX, minY, maxX, maxY }: LayoutParameters): Layout {\n    console.warn('This function is deprecated: please use `new Layout({})` instead');\n    return new Layout({ fit, alignment, minX, minY, maxX, maxY });\n  }\n\n  /**\n   * Makes a copy of the layout, replacing any specified parameters\n   */\n  public copyWith({ fit, alignment, minX, minY, maxX, maxY }: LayoutParameters): Layout {\n    return new Layout({\n      fit: fit ?? this.fit,\n      alignment: alignment ?? this.alignment,\n      minX: minX ?? this.minX,\n      minY: minY ?? this.minY,\n      maxX: maxX ?? this.maxX,\n      maxY: maxY ?? this.maxY\n    });\n  }\n\n  // Returns fit for the Wasm runtime format\n  public runtimeFit(rive: rc.RiveCanvas): rc.Fit {\n    if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n\n    let fit;\n    if (this.fit === Fit.Cover) fit = rive.Fit.cover;\n    else if (this.fit === Fit.Contain) fit = rive.Fit.contain;\n    else if (this.fit === Fit.Fill) fit = rive.Fit.fill;\n    else if (this.fit === Fit.FitWidth) fit = rive.Fit.fitWidth;\n    else if (this.fit === Fit.FitHeight) fit = rive.Fit.fitHeight;\n    else if (this.fit === Fit.ScaleDown) fit = rive.Fit.scaleDown;\n    else fit = rive.Fit.none;\n\n    this.cachedRuntimeFit = fit;\n    return fit;\n  }\n\n  // Returns alignment for the Wasm runtime format\n  public runtimeAlignment(rive: rc.RiveCanvas): rc.Alignment {\n    if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n\n    let alignment;\n    if (this.alignment === Alignment.TopLeft) alignment = rive.Alignment.topLeft;\n    else if (this.alignment === Alignment.TopCenter) alignment = rive.Alignment.topCenter;\n    else if (this.alignment === Alignment.TopRight) alignment = rive.Alignment.topRight;\n    else if (this.alignment === Alignment.CenterLeft) alignment = rive.Alignment.centerLeft;\n    else if (this.alignment === Alignment.CenterRight) alignment = rive.Alignment.centerRight;\n    else if (this.alignment === Alignment.BottomLeft) alignment = rive.Alignment.bottomLeft;\n    else if (this.alignment === Alignment.BottomCenter) alignment = rive.Alignment.bottomCenter;\n    else if (this.alignment === Alignment.BottomRight) alignment = rive.Alignment.bottomRight;\n    else alignment = rive.Alignment.center;\n\n    this.cachedRuntimeAlignment = alignment;\n    return alignment;\n  }\n}\n\n// #endregion\n\n// #region runtime\n\n// Callback type when looking for a runtime instance\nexport type RuntimeCallback = (rive: rc.RiveCanvas) => void;\n\n// Runtime singleton; use getInstance to provide a callback that returns the\n// Rive runtime\nexport class RuntimeLoader {\n\n  // Singleton helpers\n  private static runtime: rc.RiveCanvas;\n  // Flag to indicate that loading has started/completed\n  private static isLoading: boolean = false;\n  // List of callbacks for the runtime that come in while loading\n  private static callBackQueue: RuntimeCallback[] = [];\n  // Instance of the Rive runtime\n  private static rive: rc.RiveCanvas;  \n  // Path to the Wasm file; default path works for testing only;\n  // if embedded wasm is used then this is never used.\n  private static wasmURL: string = 'dist/rive.wasm';\n\n  // Class is never instantiated\n  private constructor() { }\n\n  // Loads the runtime\n  private static loadRuntime(): void {\n    rc.default({\n      // Loads Wasm bundle\n      locateFile: (_: string) => RuntimeLoader.wasmURL\n    }).then((rive: rc.RiveCanvas) => {\n      RuntimeLoader.runtime = rive;\n      // Fire all the callbacks\n      while (RuntimeLoader.callBackQueue.length > 0) {\n        RuntimeLoader.callBackQueue.shift()?.(RuntimeLoader.runtime);\n      }\n    });\n  }\n\n  // Provides a runtime instance via a callback\n  public static getInstance(callback: RuntimeCallback): void {\n    // If it's not loading, start loading runtime\n    if (!RuntimeLoader.isLoading) {\n      RuntimeLoader.isLoading = true;\n      RuntimeLoader.loadRuntime();\n    }\n    if (!RuntimeLoader.runtime) {\n      RuntimeLoader.callBackQueue.push(callback);\n    } else {\n      callback(RuntimeLoader.runtime);\n    }\n  }\n\n  // Provides a runtime instance via a promise\n  public static awaitInstance(): Promise<rc.RiveCanvas> {\n    return new Promise<rc.RiveCanvas>((resolve, reject) =>\n      RuntimeLoader.getInstance((rive: rc.RiveCanvas): void => resolve(rive))\n    );\n  }\n\n  // Manually sets the wasm url\n  public static setWasmUrl(url: string): void {\n    RuntimeLoader.wasmURL = url;\n  }\n}\n\n// #endregion\n\n// #region animations\n\n// Wraps animations and instances from the runtime and keeps track of playback\n// state\nclass Animation {\n  public loopCount: number = 0;\n  public readonly instance: rc.LinearAnimationInstance;\n\n  // Time to which the animation should move to on the next render\n  public scrubTo: number | null = null;\n\n  /**\n   * Constructs a new animation\n   * @constructor\n   * @param {any} animation: runtime animation object\n   * @param {any} instance: runtime animation instance object\n   */\n  constructor(private animation: rc.LinearAnimation, runtime: rc.RiveCanvas, public playing: boolean) {\n    this.instance = new runtime.LinearAnimationInstance(animation);\n  }\n\n  // Returns the animation's name\n  public get name(): string {\n    return this.animation.name;\n  }\n\n  // Returns the animation's current time\n  public get time(): number {\n      return this.instance.time;\n  }\n\n  // Sets the animation's current time\n  public set time(value: number) {\n      this.instance.time = value;\n  }\n\n  // Returns the animation's loop type\n  public get loopValue(): number {\n    return this.animation.loopValue;\n  }\n\n  /**\n   * Advances the animation by the give time. If the animation needs scrubbing,\n   * time is ignored and the stored scrub value is used.\n   * @param time the time to advance the animation by if no scrubbing required\n   */\n  public advance(time: number) {\n    if (this.scrubTo === null) {\n      this.instance.advance(time);\n    } else {\n      this.instance.time = 0;\n      this.instance.advance(this.scrubTo);\n      this.scrubTo = null;\n    }\n  }\n\n  public get needsScrub(): boolean {\n    return this.scrubTo !== null;\n  }\n\n  /**\n   * Deletes the backing Wasm animation instance; once this is called, this\n   * animation is no more.\n   */\n  public cleanup() {\n    this.instance.delete();\n  }\n}\n\n// #endregion\n\n// #region state machines\n\nexport enum StateMachineInputType {\n  Number = 56,\n  Trigger = 58,\n  Boolean = 59,\n}\n\n/**\n * An input for a state machine\n */\nexport class StateMachineInput {\n\n  constructor(public readonly type: StateMachineInputType, private runtimeInput: rc.SMIInput) { }\n\n  /**\n   * Returns the name of the input\n   */\n  public get name(): string {\n    return this.runtimeInput.name;\n  }\n\n  /**\n   * Returns the current value of the input\n   */\n  public get value(): number | boolean {\n    return this.runtimeInput.value;\n  }\n\n  /**\n   * Sets the value of the input\n   */\n  public set value(value: number | boolean) {\n    this.runtimeInput.value = value;\n  }\n\n  /**\n   * Fires a trigger; does nothing on Number or Boolean input types\n   */\n  public fire(): void {\n    if (this.type === StateMachineInputType.Trigger) {\n      this.runtimeInput.fire();\n    }\n  }\n}\n\nclass StateMachine {\n\n  /**\n   * Caches the inputs from the runtime\n   */\n  public readonly inputs: StateMachineInput[] = [];\n\n  /**\n   * Runtime state machine instance\n   */\n  public readonly instance: rc.StateMachineInstance;\n\n  /**\n   * @constructor\n   * @param stateMachine runtime state machine object\n   * @param instance runtime state machine instance object\n   */\n  constructor(private stateMachine: rc.StateMachine, runtime: rc.RiveCanvas, public playing: boolean) {\n    this.instance = new runtime.StateMachineInstance(stateMachine);\n    this.initInputs(runtime);\n  }\n\n  public get name(): string {\n    return this.stateMachine.name;\n  }\n\n  /**\n   * Returns a list of state names that have changed on this frame\n   */\n  public get statesChanged(): string[] {\n    const names: string[] = [];\n    for (let i = 0; i < this.instance.stateChangedCount(); i++) {\n      names.push(this.instance.stateChangedNameByIndex(i));\n    }\n    return names;\n  }\n\n  /**\n   * Fetches references to the state machine's inputs and caches them\n   * @param runtime an instance of the runtime; needed for the SMIInput types\n   */\n  private initInputs(runtime: rc.RiveCanvas): void {\n    // Fetch the inputs from the runtime if we don't have them\n    for (let i = 0; i < this.instance.inputCount(); i++) {\n      const input = this.instance.input(i);\n      this.inputs.push(this.mapRuntimeInput(input, runtime));\n    }\n  }\n\n  /**\n   * Maps a runtime input to it's appropriate type\n   * @param input \n   */\n  private mapRuntimeInput(input: rc.SMIInput, runtime: rc.RiveCanvas): StateMachineInput {\n    if (input.type === runtime.SMIInput.bool) {\n      return new StateMachineInput(StateMachineInputType.Boolean, input.asBool());\n    }\n    else if (input.type === runtime.SMIInput.number) {\n      return new StateMachineInput(StateMachineInputType.Number, input.asNumber());\n    }\n    else if (input.type === runtime.SMIInput.trigger) {\n      return new StateMachineInput(StateMachineInputType.Trigger, input.asTrigger());\n    }\n  }\n\n  /**\n   * Deletes the backing Wasm state machine instance; once this is called, this\n   * state machine is no more.\n   */\n     public cleanup() {\n      this.instance.delete();\n    }\n}\n\n// #endregion\n\n// #region animator\n\n/**\n * Manages animation\n */\nclass Animator {\n\n  /**\n   * Constructs a new animator\n   * @constructor\n   * @param runtime Rive runtime; needed to instance animations & state machines\n   * @param artboard the artboard that holds all animations and state machines\n   * @param animations optional list of animations\n   * @param stateMachines optional list of state machines\n   */\n  constructor(\n    private runtime: rc.RiveCanvas,\n    private artboard: rc.Artboard,\n    private eventManager: EventManager,\n    public readonly animations: Animation[] = [],\n    public readonly stateMachines: StateMachine[] = []) {}\n\n  /**\n   * Adds animations and state machines by their names. If names are shared\n   * between animations & state machines, then the first one found will be\n   * created. Best not to use the same names for these in your Rive file.\n   * @param animatable the name(s) of animations and state machines to add\n   * @returns a list of names of the playing animations and state machines\n   */\n  public add(animatables: string | string[], playing: boolean, fireEvent = true): string[] {\n    animatables = mapToStringArray(animatables);\n    // If animatables is empty, play or pause everything\n    if (animatables.length === 0) {\n      this.animations.forEach(a => a.playing = playing);\n      this.stateMachines.forEach(m => m.playing = playing);\n    } else {\n      // Play/pause already instanced items, or create new instances\n      const instancedAnimationNames = this.animations.map(a => a.name);\n      const instancedMachineNames = this.stateMachines.map(m => m.name);\n      for (const i in animatables) {\n        const aIndex = instancedAnimationNames.indexOf(animatables[i]);\n        const mIndex = instancedMachineNames.indexOf(animatables[i]);\n        if (aIndex >= 0 || mIndex >= 0) {\n          if (aIndex >= 0) {\n            // Animation is instanced, play/pause it\n            this.animations[aIndex].playing = playing;\n          } else {\n            // State machine is instanced, play/pause it\n            this.stateMachines[mIndex].playing = playing;\n          }\n       } else {\n          // Try to create a new animation instance\n          const anim = this.artboard.animationByName(animatables[i]);\n          if(anim) {\n            this.animations.push(new Animation(anim, this.runtime, playing));\n          } else {\n            // Try to create a new state machine instance\n            const sm = this.artboard.stateMachineByName(animatables[i]);\n            if (sm) {\n              this.stateMachines.push(new StateMachine(sm, this.runtime, playing));\n            }\n          }\n        }\n      }\n    }\n    // Fire play/paused events for animations\n    if (fireEvent) {\n      if (playing) {\n        this.eventManager.fire({\n          type: EventType.Play,\n          data: this.playing,\n        });\n      } else {\n        this.eventManager.fire({\n          type: EventType.Pause,\n          data: this.paused,\n        });\n      }\n    }\n\n    return playing ? this.playing : this.paused;\n  }\n\n  /**\n   * Play the named animations/state machines\n   * @param animatables the names of the animations/machines to play; plays all if empty\n   * @returns a list of the playing items\n   */\n  public play(animatables: string | string[]): string[] {\n    return this.add(animatables, true);\n  }\n\n    /**\n   * Pauses named animations and state machines, or everything if nothing is\n   * specified\n   * @param animatables names of the animations and state machines to pause\n   * @returns a list of names of the animations and state machines paused\n   */\n     public pause(animatables: string[]): string[] {\n      return this.add(animatables, false);\n    }\n\n    /**\n     * Set time of named animations\n     * @param animations names of the animations to scrub\n     * @param value time scrub value, a floating point number to which the playhead is jumped\n     * @returns a list of names of the animations that were scrubbed\n     */\n    public scrub(animatables: string[], value: number): string[] {\n      const forScrubbing = this.animations.filter(a => animatables.includes(a.name));\n      forScrubbing.forEach(a => a.scrubTo = value);\n      return forScrubbing.map(a => a.name);\n    }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * playing\n   */\n  public get playing(): string[] {\n    return this.animations.filter(a => a.playing).map(a => a.name).concat(\n           this.stateMachines.filter(m => m.playing).map(m => m.name)\n    );\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * paused\n   */\n     public get paused(): string[] {\n      return this.animations.filter(a => !a.playing).map(a => a.name).concat(\n             this.stateMachines.filter(m => !m.playing).map(m => m.name)\n      );\n    }\n\n  /**\n   * Stops and removes all named animations and state machines\n   * @param animatables animations and state machines to remove\n   * @returns a list of names of removed items\n   */\n  public stop(animatables?: string[] | string): string[] {\n    animatables = mapToStringArray(animatables);\n\n    // If nothing's specified, wipe them out, all of them\n    let removedNames: string[] = [];\n    // Stop everything\n    if (animatables.length === 0) {\n      removedNames = this.animations.map(a => a.name).concat(\n        this.stateMachines.map(m => m.name)\n      );\n      // Clean up before emptying the arrays\n      this.animations.forEach(a => a.cleanup());\n      this.stateMachines.forEach(m => m.cleanup());\n      // Empty out the arrays\n      this.animations.splice(0, this.animations.length);\n      this.stateMachines.splice(0, this.stateMachines.length);\n    } else {\n      // Remove only the named animations/state machines\n      const animationsToRemove = this.animations.filter(\n        a => animatables.includes(a.name)\n      );\n      \n      animationsToRemove.forEach(a => {\n        a.cleanup();\n        this.animations.splice(this.animations.indexOf(a), 1);\n      });\n      const machinesToRemove = this.stateMachines.filter(\n        m => animatables.includes(m.name)\n      );\n      machinesToRemove.forEach(m => {\n        m.cleanup();\n        this.stateMachines.splice(this.stateMachines.indexOf(m), 1);\n      });\n      removedNames = animationsToRemove.map(a => a.name).concat(\n        machinesToRemove.map(m => m.name));\n    }\n\n    this.eventManager.fire({\n      type: EventType.Stop,\n      data: removedNames,\n    });\n\n    // Return the list of animations removed\n    return removedNames;\n  }\n\n  /**\n   * Returns true if at least one animation is active\n   */\n  public get isPlaying(): boolean {\n    return this.animations.reduce((acc, curr) => acc || curr.playing, false)\n        || this.stateMachines.reduce((acc, curr) => acc || curr.playing, false);\n  }\n\n  /**\n   * Returns true if all animations are paused and there's at least one animation\n   */\n  public get isPaused(): boolean {\n    return !this.isPlaying && \n           (this.animations.length > 0 || this.stateMachines.length > 0);  \n  }\n\n  /**\n   * Returns true if there are no playing or paused animations/state machines\n   */\n  public get isStopped(): boolean {\n    return this.animations.length === 0 && this.stateMachines.length === 0;\n  }\n\n  /**\n   * If there are no animations or state machines, add the first one found\n   * @returns the name of the animation or state machine instanced\n   */\n   public atLeastOne(playing: boolean, fireEvent = true): string {\n    let instancedName: string;\n    if (this.animations.length === 0 && this.stateMachines.length === 0) {\n      if(this.artboard.animationCount() > 0) {\n        // Add the first animation\n        this.add([instancedName = this.artboard.animationByIndex(0).name], playing, fireEvent);\n      } else if(this.artboard.stateMachineCount() > 0) {\n        // Add the first state machine\n        this.add([instancedName = this.artboard.stateMachineByIndex(0).name], playing, fireEvent);\n      }\n    }\n    return instancedName;\n  }\n\n  /**\n   * Checks if any animations have looped and if so, fire the appropriate event\n   */\n  public handleLooping() {\n    for (const animation of this.animations.filter(a => a.playing)) {\n      // Emit if the animation looped\n      if (animation.loopValue === 0 && animation.loopCount) {\n        animation.loopCount = 0;\n        // This is a one-shot; if it has ended, delete the instance\n        this.stop(animation.name);\n      }\n      else if (animation.loopValue === 1 && animation.loopCount) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.Loop }\n        });\n        animation.loopCount = 0;\n      }\n      // Wasm indicates a loop at each time the animation\n      // changes direction, so a full loop/lap occurs every\n      // two loop counts\n      else if (animation.loopValue === 2 && animation.loopCount > 1) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.PingPong }\n        });\n        animation.loopCount = 0;\n      }\n    }\n  }\n\n  /**\n   * Checks if states have changed in state machines and fires a statechange\n   * event\n   */\n  public handleStateChanges() {\n    const statesChanged: string[] = [];\n    for (const stateMachine of this.stateMachines.filter(sm => sm.playing)) {\n     statesChanged.push(...stateMachine.statesChanged);\n    }\n    if (statesChanged.length > 0) {\n      this.eventManager.fire({\n        type: EventType.StateChange,\n        data: statesChanged,\n      });\n    }\n  }\n\n}\n\n// #endregion\n\n// #region events\n\n/**\n * Supported event types triggered in Rive\n */\nexport enum EventType {\n  Load        = 'load',\n  LoadError   = 'loaderror',\n  Play        = 'play',\n  Pause       = 'pause',\n  Stop        = 'stop',\n  Loop        = 'loop',\n  Draw        = 'draw',\n  StateChange = 'statechange',\n}\n\n// Event fired by Rive\nexport interface Event {\n  type: EventType,\n  data?: string | string[] | LoopEvent,\n}\n\n/**\n * Looping types: one-shot, loop, and ping-pong\n */\nexport enum LoopType {\n  OneShot = 'oneshot',  // has value 0 in runtime\n  Loop = 'loop',        // has value 1 in runtime\n  PingPong = 'pingpong' // has value 2 in runtime\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport interface LoopEvent {\n  animation: string;\n  type: LoopType;\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport type EventCallback = (event: Event) => void;\n\n/**\n * Event listeners registered with the event manager\n */\nexport interface EventListener {\n  type: EventType,\n  callback: EventCallback,\n}\n\n// Manages Rive events and listeners\nclass EventManager {\n\n  constructor(private listeners: EventListener[] = []) { }\n\n  // Gets listeners of specified type\n  private getListeners(type: EventType): EventListener[] {\n    return this.listeners.filter(e => e.type === type);\n  }\n\n  // Adds a listener\n  public add(listener: EventListener): void {\n    if (!this.listeners.includes(listener)) {\n      this.listeners.push(listener);\n    }\n  }\n\n  /**\n   * Removes a listener\n   * @param listener the listener with the callback to be removed\n   */\n  public remove(listener: EventListener): void {\n    // We can't simply look for the listener as it'll be a different instance to\n    // one originally subscribed. Find all the listeners of the right type and\n    // then check their callbacks which should match.\n    for (let i = 0; i < this.listeners.length; i++) {\n      const currentListener = this.listeners[i];\n      if (currentListener.type === listener.type) {\n        if (currentListener.callback === listener.callback) {\n          this.listeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Clears all listeners of specified type, or every listener if no type is\n   * specified\n   * @param type the type of listeners to clear, or all listeners if not\n   * specified\n   */\n  public removeAll(type?: EventType) {\n    if (!type) {\n      this.listeners.splice(0, this.listeners.length);\n    } else {\n      this.listeners\n        .filter((l) => l.type === type)\n        .forEach((l) => this.remove(l));\n    }\n  }\n\n  // Fires an event\n  public fire(event: Event): void {\n    const eventListeners = this.getListeners(event.type);\n    eventListeners.forEach(\n      listener => listener.callback(event)\n    );\n  }\n}\n\n// #endregion\n\n// #region Manages a queue of tasks\n\n// A task in the queue; will fire the action when the queue is processed; will\n// also optionally fire an event.\nexport interface Task {\n  action: VoidCallback,\n  event?: Event,\n}\n\n// Manages a queue of tasks\nclass TaskQueueManager {\n  private queue: Task[] = [];\n\n  constructor(private eventManager: EventManager) { }\n\n  // Adds a task top the queue\n  public add(task: Task): void {\n    this.queue.push(task);\n  }\n\n  // Processes all tasks in the queue\n  public process(): void {\n    while (this.queue.length > 0) {\n      const task = this.queue.shift();\n      task?.action();\n      if (task?.event) {\n        this.eventManager.fire(task.event);\n      }\n    }\n  }\n}\n\n// #endregion\n\n// #region Rive\n\n// Interface for the Rive static method contructor\nexport interface RiveParameters {\n  canvas: HTMLCanvasElement | OffscreenCanvas, // canvas is required\n  src?: string, // one of src or buffer is required\n  buffer?: ArrayBuffer, // one of src or buffer is required\n  artboard?: string,\n  animations?: string | string[],\n  stateMachines?: string | string[],\n  layout?: Layout,\n  autoplay?: boolean,\n  onload?: EventCallback,\n  onloaderror?: EventCallback,\n  onplay?: EventCallback,\n  onpause?: EventCallback,\n  onstop?: EventCallback,\n  onloop?: EventCallback,\n  onstatechange?: EventCallback,\n}\n\n// Interface to Rive.load function\nexport interface RiveLoadParameters {\n  src?: string,\n  buffer?: ArrayBuffer,\n  autoplay?: boolean,\n  artboard?: string,\n  animations?: string | string[],\n  stateMachines?: string | string[],\n}\n\n// Interface ot Rive.reset function\nexport interface RiveResetParameters {\n  artboard?: string,\n  animations?: string | string[],\n  stateMachines?: string | string[],\n  autoplay?: boolean,\n}\n\nexport class Rive {\n\n  // Canvas in which to render the artboard\n  private readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n\n  // A url to a Rive file; may be undefined if a buffer is specified\n  private src: string;\n\n  // Raw Rive file data; may be undefined if a src is specified\n  private buffer: ArrayBuffer;\n\n  // The layout for rendering in the canvas\n  private _layout: Layout;\n\n  // Flag to indicate if the layout has changed; used by the renderer to know\n  // when to align\n  private _updateLayout: boolean = true;\n\n  // The canvas 2D context\n  private ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D | null;\n\n  // The runtime renderer\n  private renderer: rc.Renderer;\n\n  /**\n   * Flag to active/deactivate renderer\n   */\n  private isRendererActive = true;\n\n  // Tracks if a Rive file is loaded\n  private loaded: boolean = false;\n\n  /**\n   * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n   * commands (e.g. contents) can be called as soon as the file is loaded.\n   * However, playback commands need to be queued and run in order once initial\n   * animations and autoplay has been sorted out. This applies to play, pause,\n   * and start.\n   */\n  private readyForPlaying: boolean = false;\n\n  // Wasm runtime\n  private runtime: rc.RiveCanvas;\n\n  // Runtime artboard\n  private artboard: rc.Artboard | null = null;\n\n  // Runtime file\n  private file: rc.File;\n\n  // Holds event listeners\n  private eventManager: EventManager;\n\n  // Manages the loading task queue\n  private taskQueue: TaskQueueManager;\n\n  // Animator: manages animations and state machines\n  private animator: Animator;\n\n  // Error message for missing source or buffer\n  private static readonly missingErrorMessage: string =\n    'Rive source file or data buffer required';\n\n  constructor(params: RiveParameters) {\n    this.canvas = params.canvas;\n    this.src = params.src;\n    this.buffer = params.buffer;\n    this.layout = params.layout ?? new Layout();\n    this._updateLayout = true;\n\n    // Fetch the 2d context from the canvas\n    this.ctx = this.canvas.getContext('2d');\n\n    // New event management system\n    this.eventManager = new EventManager();\n    if (params.onload) this.on(EventType.Load, params.onload);\n    if (params.onloaderror) this.on(EventType.LoadError, params.onloaderror);\n    if (params.onplay) this.on(EventType.Play, params.onplay);\n    if (params.onpause) this.on(EventType.Pause, params.onpause);\n    if (params.onstop) this.on(EventType.Stop, params.onstop);\n    if (params.onloop) this.on(EventType.Loop, params.onloop);\n    if (params.onstatechange) this.on(EventType.StateChange, params.onstatechange);\n\n    // Hook up the task queue\n    this.taskQueue = new TaskQueueManager(this.eventManager);\n\n    this.init({\n      src: this.src,\n      buffer: this.buffer,\n      autoplay: params.autoplay,\n      animations: params.animations,\n      stateMachines: params.stateMachines,\n      artboard: params.artboard\n    });\n  }\n\n  // Alternative constructor to build a Rive instance from an interface/object\n  public static new(params: RiveParameters): Rive {\n    console.warn('This function is deprecated: please use `new Rive({})` instead');\n    return new Rive(params);\n  }\n\n  // Initializes the Rive object either from constructor or load()\n  private init({ src, buffer, animations, stateMachines, artboard, autoplay = false }: RiveLoadParameters): void {\n    this.src = src;\n    this.buffer = buffer;\n\n    // If no source file url specified, it's a bust\n    if (!this.src && !this.buffer) {\n      throw new Error(Rive.missingErrorMessage);\n    }\n\n    // List of animations that should be initialized.\n    const startingAnimationNames = mapToStringArray(animations);\n\n    // List of state machines that should be initialized\n    const startingStateMachineNames = mapToStringArray(stateMachines);\n\n    // Ensure loaded is marked as false if loading new file\n    this.loaded = false;\n    this.readyForPlaying = false;\n\n    // Ensure the runtime is loaded\n    RuntimeLoader.awaitInstance().then((runtime) => {\n      this.runtime = runtime;\n      // Load Rive data from a source uri or a data buffer\n      this.initData(artboard, startingAnimationNames, startingStateMachineNames, autoplay).catch(e => {\n        console.error(e);\n      });\n    }).catch(e => {\n      console.error(e);\n    });\n  }\n\n  // Initializes runtime with Rive data and preps for playing\n  private async initData(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): Promise<void> {\n    // Load the buffer from the src if provided\n    if (this.src) {\n      this.buffer = await loadRiveFile(this.src);\n    }\n    // Load the Rive file\n    this.file = await this.runtime.load(new Uint8Array(this.buffer));\n    if (this.file) {\n      // Initialize and draw frame\n      this.initArtboard(artboardName, animationNames, stateMachineNames, autoplay);\n\n      // Everything's set up, emit a load event\n      this.loaded = true;\n      this.eventManager.fire({\n        type: EventType.Load,\n        data: this.src ?? 'buffer'\n      });\n\n      // Flag ready for playback commands and clear the task queue; this order\n      // is important or it may infinitely recurse\n      this.readyForPlaying = true;\n      this.taskQueue.process();\n\n      this.drawFrame();\n\n      return Promise.resolve();\n    } else {\n      const msg = 'Problem loading file; may be corrupt!';\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return Promise.reject(msg);\n    }\n  }\n\n  // Initialize for playback\n  private initArtboard(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): void {\n\n    // Fetch the artboard\n    const rootArtboard = artboardName ?\n      this.file.artboardByName(artboardName) :\n      this.file.defaultArtboard();\n    \n    // Check we have a working artboard\n    if (!rootArtboard) {\n      const msg = 'Invalid artboard name or no default artboard';\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return;\n    }\n\n    // Instance the artboard\n    this.artboard = rootArtboard.instance();\n\n    // Check that the artboard has at least 1 animation\n    if (this.artboard.animationCount() < 1) {\n      const msg = 'Artboard has no animations';\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      throw msg;\n    }\n\n    // Initialize the animator\n    this.animator = new Animator(this.runtime, this.artboard, this.eventManager);\n\n    // Get the canvas where you want to render the animation and create a renderer\n    this.renderer = new this.runtime.CanvasRenderer(this.ctx);\n\n\n    // Initialize the animations; as loaded hasn't happened yet, we need to\n    // suppress firing the play/pause events until the load event has fired. To\n    // do this we tell the animator to suppress firing events, and add event\n    // firing to the task queue.\n    let instanceNames: string[];\n    if (animationNames.length > 0 || stateMachineNames.length > 0) {\n      instanceNames = animationNames.concat(stateMachineNames);\n      this.animator.add(instanceNames, autoplay, false);\n    } else {\n      instanceNames = [this.animator.atLeastOne(autoplay, false)];\n    }\n    // Queue up firing the playback events\n    this.taskQueue.add({\n      action: () => {},\n      event: {\n        type: autoplay ? EventType.Play : EventType.Pause,\n        data: instanceNames,\n      }\n    });\n  }\n\n  // Draws the current artboard frame\n  public drawFrame() {\n    this.startRendering();\n  }\n\n  // Tracks the last timestamp at which the animation was rendered. Used only in\n  // draw().\n  private lastRenderTime: number;\n\n  // Tracks the current animation frame request\n  private frameRequestId: number | null;\n\n  /**\n   * Used be draw to track when a second of active rendering time has passed. Used for debugging purposes\n   */\n  private renderSecondTimer: number = 0;\n\n  /**\n   * Draw rendering loop; renders animation frames at the correct time interval.\n   * @param time the time at which to render a frame\n   */\n  private draw(time: number, onSecond?: VoidCallback): void {\n    // Clear the frameRequestId, as we're now rendering a fresh frame\n    this.frameRequestId = null;\n\n    // On the first pass, make sure lastTime has a valid value\n    if (!this.lastRenderTime) {\n      this.lastRenderTime = time;\n    }\n\n    // Handle the onSecond callback\n    this.renderSecondTimer += (time - this.lastRenderTime);\n    if (this.renderSecondTimer > 5000) {\n      this.renderSecondTimer = 0;\n      onSecond?.();\n    }\n\n    // Calculate the elapsed time between frames in seconds\n    const elapsedTime = (time - this.lastRenderTime) / 1000;\n    this.lastRenderTime = time;\n\n    // Advance non-paused animations by the elapsed number of seconds\n    // Also advance any animations that require scrubbing\n    const activeAnimations = this.animator.animations.filter(a => a.playing || a.needsScrub)\n      // The scrubbed animations must be applied first to prevent weird artifacts\n      // if the playing animations conflict with the scrubbed animating attribuates.\n      .sort((first, second) => first.needsScrub ? -1 : 1);\n    for (const animation of activeAnimations) {\n      animation.advance(elapsedTime);\n      if (animation.instance.didLoop) {\n        animation.loopCount += 1;\n      }\n      animation.instance.apply(this.artboard, 1.0);\n    }\n\n    // Advance non-paused state machines by the elapsed number of seconds\n    const activeStateMachines = this.animator.stateMachines.filter(a => a.playing);\n    for (const stateMachine of activeStateMachines) {\n      stateMachine.instance.advance(this.artboard, elapsedTime);\n      // stateMachine.instance.apply(this.artboard);\n    }\n\n    // Once the animations have been applied to the artboard, advance it\n    // by the elapsed time.\n    this.artboard.advance(elapsedTime);\n\n    // Update the renderer alignment if necessary\n    this.alignRenderer();\n\n    const bounds = this.artboard.bounds;\n    this.ctx.clearRect(bounds.minX, bounds.minY, bounds.maxX, bounds.maxY);\n    this.artboard.draw(this.renderer);\n\n    // Check for any animations that looped\n    this.animator.handleLooping();\n\n    // Check for any state machines that had a state change\n    this.animator.handleStateChanges();\n\n    // Calling requestAnimationFrame will rerun draw() at the correct rate:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n    if (this.animator.isPlaying) {\n      // Request a new rendering frame\n      this.startRendering();\n    } else if (this.animator.isPaused) {\n      // Reset the end time so on playback it starts at the correct frame\n      this.lastRenderTime = 0;\n    } else if (this.animator.isStopped) {\n      // Reset animation instances, artboard and time\n      // TODO: implement this properly when we have instancing\n      // this.initArtboard();\n      // this.drawFrame();\n      this.lastRenderTime = 0;\n    }\n  }\n\n  /**\n   * Align the renderer\n   */\n  private alignRenderer(): void {\n    // Update the renderer alignment if necessary\n    if (this._updateLayout) {\n      // Restore from previous save in case a previous align occurred\n      this.ctx.restore();\n      // Canvas must be wiped to prevent artifacts\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      // Now save so that future changes to align can restore\n      this.ctx.save();\n      // Align things up safe in the knowledge we can restore if changed\n      this.renderer.align(\n        this._layout.runtimeFit(this.runtime),\n        this._layout.runtimeAlignment(this.runtime),\n        {\n          minX: this._layout.minX,\n          minY: this._layout.minY,\n          maxX: this._layout.maxX,\n          maxY: this._layout.maxY\n        },\n        this.artboard.bounds\n      );\n      this._updateLayout = false;\n    }\n  }\n\n  /**\n   * Cleans up any Wasm-generated objects that need to be manually destroyed:\n   * artboard instances, animation instances, state machine instances.\n   *\n   * Once this is called, things will need to be reinitialized or bad things\n   * might happen.\n   */\n  public cleanup() {\n    this.artboard.delete();\n    // TODO: delete animation and state machine instances\n  }\n\n  // Plays specified animations; if none specified, it unpauses everything.\n  public play(animationNames?: string | string[], autoplay?: true): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, queue up the play\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.play(animationNames, autoplay),\n      });\n      return;\n    }\n    this.animator.play(animationNames);\n    this.startRendering();\n  }\n\n  // Pauses specified animations; if none specified, pauses all.\n  public pause(animationNames?: string | string[]): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.pause(animationNames),\n      });\n      return;\n    }\n    this.animator.pause(animationNames);\n  }\n\n  public scrub(animationNames?: string | string[], value?: number): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n        this.taskQueue.add({\n            action: () => this.scrub(animationNames, value),\n        });\n        return;\n    }\n\n    // Scrub the animation time; we draw a single frame here so that if\n    // nothing's currently playing, the scrubbed animation is still rendered/\n    this.animator.scrub(animationNames, value || 0);\n    this.drawFrame();\n  }\n\n  // Stops specified animations; if none specifies, stops them all.\n  public stop(animationNames?: string | string[] | undefined): void {\n    animationNames = mapToStringArray(animationNames);\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.stop(animationNames),\n      });\n      return;\n    }\n    this.animator.stop(animationNames);\n  }\n\n  /**\n   * Resets the animation\n   * @param artboard the name of the artboard, or default if none given\n   * @param animations the names of animations for playback\n   * @param stateMachines the names of state machines for playback\n   * @param autoplay whether to autoplay when reset, defaults to false\n   *\n   */\n  public reset(params?: RiveResetParameters): void {\n    // Get the current artboard, animations, state machines, and playback states\n    const artBoardName = params?.artboard;\n    const animationNames = mapToStringArray(params?.animations);\n    const stateMachineNames = mapToStringArray(params?.stateMachines);\n    const autoplay = params?.autoplay ?? false;\n\n    // Stop everything and clean up\n    this.stop();\n    this.cleanup();\n\n    // Reinitialize an artboard instance with the state\n    this.initArtboard(artBoardName, animationNames, stateMachineNames, autoplay);\n  }\n\n\n  // Loads a new Rive file, keeping listeners in place\n  public load(params: RiveLoadParameters): void {\n    // Stop all animations\n    this.stop();\n    // Update the layout to account for new renderer\n    this._updateLayout = true;\n    // Reinitialize\n    this.init(params);\n  }\n\n  // Sets a new layout\n  public set layout(layout: Layout) {\n    this._layout = layout;\n    this._updateLayout = true;\n    // If the maxX or maxY are 0, then set them to the canvas width and height\n    if (!layout.maxX || !layout.maxY) {\n      this.resizeToCanvas();\n    }\n    if (this.loaded && !this.animator.isPlaying) {\n      this.drawFrame();\n    }\n  }\n\n  /**\n   * Returns the current layout. Note that layout should be treated as\n   * immutable. If you want to change the layout, create a new one use the\n   * layout setter\n   */\n  public get layout() {\n    return this._layout;\n  }\n\n  /** \n   * Sets the layout bounds to the current canvas size; this is typically called\n   * when the canvas is resized\n   */\n  public resizeToCanvas() {\n    this._layout = this.layout.copyWith({\n      minX: 0,\n      minY: 0,\n      maxX: this.canvas.width,\n      maxY: this.canvas.height\n    });\n    this._updateLayout = true;\n  }\n\n  // Returns the animation source, which may be undefined\n  public get source(): string {\n    return this.src;\n  }\n\n  /**\n   * Returns the name of the active artboard\n   */\n  public get activeArtboard(): string {\n    return this.artboard.name;\n  }\n\n  // Returns a list of animation names on the chosen artboard\n  public get animationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const animationNames: string[] = [];\n    for (let i = 0; i < this.artboard.animationCount(); i++) {\n      animationNames.push(this.artboard.animationByIndex(i).name);\n    }\n    return animationNames;\n  }\n\n  /**\n   * Returns a list of state machine names from the current artboard\n   */\n  public get stateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const stateMachineNames: string[] = [];\n    for (let i = 0; i < this.artboard.stateMachineCount(); i++) {\n      stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n    }\n    return stateMachineNames;\n  }\n\n  /**\n   * Returns the inputs for the specified instanced state machine, or an empty\n   * list if the name is invalid or the state machine is not instanced\n   * @param name the state machine name\n   * @returns the inputs for the named state machine\n   */\n  public stateMachineInputs(name: string): StateMachineInput[] {\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.loaded) {\n      return;\n    }\n    const stateMachine = this.animator.stateMachines.find(m => m.name === name);\n    return stateMachine?.inputs;\n  }\n\n  // Returns a list of playing machine names\n  public get playingStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter(m => m.playing)\n      .map(m => m.name);\n  }\n\n  // Returns a list of playing animation names\n  public get playingAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter(a => a.playing)\n      .map(a => a.name);\n  }\n\n\n  // Returns a list of paused animation names\n  public get pausedAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter(a => !a.playing)\n      .map(a => a.name);\n  }\n\n  /**\n   *  Returns a list of paused machine names\n   * @returns a list of state machine names that are paused\n   */\n  public get pausedStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter(m => !m.playing)\n      .map(m => m.name);\n  }\n\n  /**\n   * @returns true if any animation is playing\n   */\n  public get isPlaying(): boolean {\n    return this.animator.isPlaying;\n  }\n\n  /**\n   * @returns true if all instanced animations are paused\n   */\n  public get isPaused(): boolean {\n    return this.animator.isPaused;\n  }\n\n  /**\n   * @returns true if no animations are playing or paused\n   */\n  public get isStopped(): boolean {\n    return this.animator.isStopped;\n  }\n\n  /**\n   * @returns the bounds of the current artboard, or undefined if the artboard\n   * isn't loaded yet.\n   */\n  public get bounds(): Bounds {\n    return this.artboard ? this.artboard.bounds : undefined;\n  }\n\n  /**\n   * Subscribe to Rive-generated events\n   * @param type the type of event to subscribe to\n   * @param callback callback to fire when the event occurs\n   */\n  public on(type: EventType, callback: EventCallback) {\n    this.eventManager.add({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes from a Rive-generated event\n   * @param callback the callback to unsubscribe from\n   */\n  public unsubscribe(type: EventType, callback: EventCallback) {\n    this.eventManager.remove({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes all listeners from an event type, or everything if no type is\n   * given\n   * @param type the type of event to unsubscribe from, or all types if\n   * undefined\n   */\n  public unsubscribeAll(type?: EventType) {\n    this.eventManager.removeAll(type);\n  }\n\n  /**\n   * Stops the rendering loop; this is different from pausing in that it doesn't\n   * change the state of any animation. It stops rendering from occurring. This\n   * is designed for situations such as when Rive isn't visible.\n   *\n   * The only way to start rendering again is to call `startRendering`.\n   * Animations that are marked as playing will start from the position that\n   * they would have been at if rendering had not been stopped.\n   */\n  public stopRendering() {\n    if (this.loaded && this.frameRequestId) {\n      cancelAnimationFrame(this.frameRequestId);\n      this.frameRequestId = null;\n    }\n  }\n\n  /**\n   * Starts the rendering loop if it has been previously stopped. If the\n   * renderer is already active, then this will have zero effect.\n   */\n  public startRendering() {\n    if (this.loaded && !this.frameRequestId) {\n      this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n    }\n  }\n\n  /**\n   * Returns the contents of a Rive file: the artboards, animations, and state machines\n   */\n  public get contents(): RiveFileContents {\n    if (!this.loaded) {\n      return undefined;\n    }\n    const riveContents: RiveFileContents = {\n      artboards: [],\n    };\n    for (let i = 0; i < this.file.artboardCount(); i++) {\n      const artboard = this.file.artboardByIndex(i);\n      const artboardContents: ArtboardContents = {\n        name: artboard.name,\n        animations: [],\n        stateMachines: [],\n      };\n      for (let j = 0; j < artboard.animationCount(); j++) {\n        const animation = artboard.animationByIndex(j);\n        artboardContents.animations.push(animation.name);\n      }\n      for (let k = 0; k < artboard.stateMachineCount(); k++) {\n        const stateMachine = artboard.stateMachineByIndex(k);\n        const name = stateMachine.name;\n        const instance = new this.runtime.StateMachineInstance(stateMachine);\n        const inputContents: StateMachineInputContents[] = [];\n        for (let l = 0; l < instance.inputCount(); l++) {\n          const input = instance.input(l);\n          inputContents.push({name: input.name, type: input.type});\n        }\n        artboardContents.stateMachines.push({name: name, inputs: inputContents});\n      }\n      riveContents.artboards.push(artboardContents);\n    }\n    return riveContents;\n  }\n}\n\n/**\n * Contents of a state machine input\n */\ninterface StateMachineInputContents {\n  name: string;\n  type: StateMachineInputType;\n  initialValue?: boolean | number;\n}\n\n/**\n * Contents of a state machine\n */\ninterface StateMachineContents {\n  name: string;\n  inputs: StateMachineInputContents[];\n}\n\n/**\n * Contents of an artboard\n */\ninterface ArtboardContents {\n  animations: string[];\n  stateMachines: StateMachineContents[];\n  name: string;\n}\n\n/**\n * contents of a Rive file\n */\ninterface RiveFileContents {\n  artboards?: ArtboardContents[];\n}\n\n\n// Loads Rive data from a URI via fetch.\nconst loadRiveFile = async (src: string): Promise<ArrayBuffer> => {\n  const req = new Request(src);\n  const res = await fetch(req);\n  const buffer = await res.arrayBuffer();\n  return buffer;\n}\n\n// #endregion\n\n// #region utility functions\n\n/*\n * Utility function to ensure an object is a string array\n */\nlet mapToStringArray = (obj?: string[] | string | undefined): string[] => {\n  if (typeof obj === 'string') {\n    return [obj];\n  } else if (obj instanceof Array) {\n    return obj;\n  }\n  // If obj is undefined, return empty array\n  return [];\n}\n\n// #endregion\n\n// #region testing utilities\n\n// Exports to only be used for tests\nexport const Testing = {\n  EventManager: EventManager,\n  TaskQueueManager: TaskQueueManager,\n}\n\n// #endregion"],"sourceRoot":""}