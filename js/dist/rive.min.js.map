{"version":3,"sources":["webpack://rive/webpack/bootstrap","webpack://rive/webpack/runtime/define property getters","webpack://rive/webpack/runtime/hasOwnProperty shorthand","webpack://rive/webpack/runtime/make namespace object","webpack://rive/../wasm/publish/rive.mjs","webpack://rive/./src/rive.ts"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_scriptDir","document","currentScript","src","undefined","__filename","Rive","readyPromiseResolve","readyPromiseReject","Module","Promise","resolve","reject","moduleOverrides","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","read_","readAsync","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","require","dirname","__dirname","filename","binary","ret","tryParseAsDataURI","toString","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","f","data","intArrayToString","readbuffer","scriptArgs","arguments","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","err","responseType","response","onload","onerror","status","out","bind","wasmBinary","wasmMemory","setTempRet0","WebAssembly","ABORT","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","alignUp","x","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","addOnInit","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","e","RuntimeError","hasPrefix","prefix","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","wasmBinaryFile","getBinary","file","getBinaryPromise","fetch","credentials","then","catch","createWasm","info","asmLibraryArg","receiveInstance","instance","module","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","callbacks","func","arg","char_0","char_9","makeLegalFunctionName","name","createNamedFunction","body","Function","emval_free_list","emval_handle_array","count_emval_handles","count","get_first_emval","init_emval","__emval_register","handle","pop","refcount","extendError","baseErrorType","errorName","errorClass","message","this","stack","Error","create","constructor","PureVirtualError","embind_init_charCodes","codes","Array","embind_charCodes","readLatin1String","c","getInheritedInstanceCount","keys","registeredInstances","getLiveInheritedInstances","rv","k","push","deletionQueue","flushPendingDeletes","$$","deleteScheduled","delayFunction","setDelayFunction","fn","init_embind","BindingError","throwBindingError","getBasestPointer","class_","baseClass","upcast","registerInheritedInstance","requireHandle","registeredTypes","getTypeName","type","___getTypeName","_free","requireRegisteredType","rawType","humanName","impl","unregisterInheritedInstance","detachFinalizer","finalizationGroup","runDestructor","smartPtr","smartPtrType","rawDestructor","ptrType","registeredClass","releaseClassHandle","attachFinalizer","FinalizationGroup","iter","result","next","done","unregister","register","__embind_create_inheriting_constructor","constructorName","wrapperType","properties","arraySlice","wrapperPrototype","instancePrototype","baseClassPrototype","baseConstructor","ctor","pureVirtualFunctions","forEach","apply","p","inner","concat","preservePointerOnDelete","defineProperties","structRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","typeDependencies","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","__embind_finalize_value_object","structType","reg","rawConstructor","fieldRecords","fields","map","field","getterReturnType","setterArgumentType","fieldTypes","fieldName","getter","getterContext","setter","setterContext","write","TypeError","destructorFunction","getShiftFromSize","size","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","wt","ClassHandle_isAliasOf","other","ClassHandle","leftClass","left","rightClass","right","shallowCopyInternalPointer","throwInstanceAlreadyDeleted","ClassHandle_clone","clone","getPrototypeOf","ClassHandle_delete","ClassHandle_isDeleted","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","getActualType","downcast","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","isConst","sharingPolicy","clonedHandle","rawShare","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstance","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","destructor","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","replacePublicSymbol","dynCallLegacy","sig","args","dynCall","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","fp","UnboundTypeError","throwUnboundTypeError","types","unboundTypes","seen","visit","join","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","new_","argumentList","dummy","r","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","heap32VectorToArray","firstElement","array","__embind_register_class_class_function","rawClassType","rawArgTypesAddr","invokerSignature","rawInvoker","rawArgTypes","unboundTypesHandler","invokerArgsArray","validateThis","this_","__embind_register_class_class_property","rawFieldType","rawFieldPtr","getterSignature","setterSignature","desc","configurable","set","v","fieldType","__embind_register_class_constructor","invoker","__embind_register_class_function","context","isPureVirtual","method","className","memberFunction","__embind_register_class_property","__emval_decref","__embind_register_emval","enumReadValueFromPointer","signed","__embind_register_enum","isSigned","values","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","t","floatReadValueFromPointer","__embind_register_float","__embind_register_function","integerReadValueFromPointer","__embind_register_integer","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","a","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","_malloc","charCode","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","__embind_register_value_object","constructorSignature","__embind_register_value_object_field","__embind_register_void","isVoid","__emval_as","returnType","destructorsRef","rd","__emval_allocateDestructors","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","__emval_call_method","caller","__emval_call_void_method","__emval_addMethodCaller","__emval_lookupTypes","__emval_get_method_caller","retType","signatureName","params","functionBody","offset","__emval_get_module_property","__emval_get_property","__emval_incref","__emval_new_cstring","__emval_run_destructors","__emval_take_value","argv","_abort","emscripten_realloc_buffer","grow","byteLength","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","Math","min","max","SYSCALLS","mappings","buffers","printChar","stream","curr","varargs","getStr","get64","low","high","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","num","j","_setTempRet0","$i","ASSERTIONS","chr","decodeBase64","atob","input","chr1","chr2","chr3","enc2","enc3","enc4","keyStr","charAt","intArrayFromBase64","s","Buffer","from","_","decoded","bytes","calledRun","run","doRun","setTimeout","runCaller","makeMatrix","m2d","m","DOMMatrix","xx","b","xy","yx","d","yy","tx","ty","onRuntimeInitialized","RenderPaintStyle","FillRule","RenderPath","RenderPaint","Renderer","StrokeCap","StrokeJoin","BlendMode","fill","stroke","evenOdd","nonZero","CanvasRenderPath","extend","__construct","__parent","_path2D","Path2D","reset","addPath","fillRule","_fillRule","moveTo","y","lineTo","cubicTo","ox","oy","ix","iy","bezierCurveTo","close","closePath","_colorStyle","CanvasRenderPaint","color","_value","thickness","_thickness","miter","_join","round","bevel","cap","butt","_cap","square","style","_style","blendMode","srcOver","_blend","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","multiply","hue","saturation","luminosity","linearGradient","sx","sy","ey","_gradient","stops","radialGradient","isRadial","addStop","stop","completeGradient","draw","ctx","globalCompositeOperation","dx","dy","radius","sqrt","createRadialGradient","createLinearGradient","addColorStop","strokeStyle","lineWidth","lineCap","lineJoin","fillStyle","CanvasRenderer","_ctx","save","restore","transform","matrix","drawPath","paint","clipPath","clip","renderFactory","makeRenderPaint","makeRenderPath","ready","PlaybackState","Fit","Alignment","StateMachineInputType","fit","Contain","alignment","Center","minX","minY","maxX","maxY","new","Layout","copyWith","runtimeFit","rive","cachedRuntimeFit","Cover","cover","contain","Fill","FitWidth","fitWidth","FitHeight","fitHeight","ScaleDown","scaleDown","none","runtimeAlignment","cachedRuntimeAlignment","TopLeft","topLeft","TopCenter","topCenter","TopRight","topRight","CenterLeft","centerLeft","CenterRight","centerRight","BottomLeft","bottomLeft","BottomCenter","bottomCenter","BottomRight","bottomRight","center","loadRuntime","RuntimeLoader","wasmURL","runtime","callBackQueue","getInstance","isLoading","awaitInstance","setWasmUrl","animation","playing","loopCount","scrubTo","LinearAnimationInstance","time","loopValue","advance","EventType","LoopType","runtimeInput","fire","Trigger","stateMachine","inputs","StateMachineInstance","initInputs","names","stateChangedCount","stateChangedNameByIndex","inputCount","mapRuntimeInput","SMIInput","bool","StateMachineInput","Boolean","asBool","number","Number","asNumber","trigger","asTrigger","artboard","eventManager","animations","stateMachines","add","animatables","fireEvent","mapToStringArray","instancedAnimationNames","instancedMachineNames","aIndex","mIndex","anim","animationByName","Animation","sm","stateMachineByName","StateMachine","Play","Pause","paused","play","pause","scrub","forScrubbing","filter","includes","removedNames","splice","animationsToRemove","machinesToRemove","Stop","reduce","acc","isPlaying","atLeastOne","instancedName","animationCount","animationByIndex","stateMachineCount","stateMachineByIndex","handleLooping","Loop","PingPong","handleStateChanges","statesChanged","StateChange","listeners","getListeners","listener","remove","currentListener","removeAll","l","event","queue","task","action","_updateLayout","isRendererActive","loaded","readyForPlaying","renderSecondTimer","canvas","layout","getContext","EventManager","on","Load","onloaderror","LoadError","onplay","onpause","onstop","onloop","onstatechange","taskQueue","TaskQueueManager","init","autoplay","missingErrorMessage","startingAnimationNames","startingStateMachineNames","initData","artboardName","animationNames","stateMachineNames","loadRiveFile","load","initArtboard","drawFrame","msg","artboardByName","defaultArtboard","instanceNames","animator","Animator","renderer","startRendering","onSecond","frameRequestId","lastRenderTime","elapsedTime","needsScrub","sort","first","second","didLoop","alignRenderer","bounds","clearRect","isPaused","isStopped","width","height","align","_layout","resizeToCanvas","stateMachineInputs","find","unsubscribe","unsubscribeAll","stopRendering","cancelAnimationFrame","requestAnimationFrame","riveContents","artboards","artboardCount","artboardByIndex","artboardContents","inputContents","req","Request","arrayBuffer","Testing"],"mappings":"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","file":"rive.min.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nvar Rive = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(Rive) {\n  Rive = Rive || {};\n\nnull;\n\nvar Module = typeof Rive !== \"undefined\" ? Rive : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise(function(resolve, reject) {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\nvar moduleOverrides = {};\n\nvar key;\n\nfor (key in Module) {\n if (Module.hasOwnProperty(key)) {\n  moduleOverrides[key] = Module[key];\n }\n}\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = function(status, toThrow) {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = false;\n\nvar ENVIRONMENT_IS_WORKER = false;\n\nvar ENVIRONMENT_IS_NODE = false;\n\nvar ENVIRONMENT_IS_SHELL = false;\n\nENVIRONMENT_IS_WEB = typeof window === \"object\";\n\nENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n\nENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nvar nodeFS;\n\nvar nodePath;\n\nif (ENVIRONMENT_IS_NODE) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = require(\"path\").dirname(scriptDirectory) + \"/\";\n } else {\n  scriptDirectory = __dirname + \"/\";\n }\n read_ = function shell_read(filename, binary) {\n  var ret = tryParseAsDataURI(filename);\n  if (ret) {\n   return binary ? ret : ret.toString();\n  }\n  if (!nodeFS) nodeFS = require(\"fs\");\n  if (!nodePath) nodePath = require(\"path\");\n  filename = nodePath[\"normalize\"](filename);\n  return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n };\n readBinary = function readBinary(filename) {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n   ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n };\n if (process[\"argv\"].length > 1) {\n  thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n }\n arguments_ = process[\"argv\"].slice(2);\n process[\"on\"](\"uncaughtException\", function(ex) {\n  if (!(ex instanceof ExitStatus)) {\n   throw ex;\n  }\n });\n process[\"on\"](\"unhandledRejection\", abort);\n quit_ = function(status) {\n  process[\"exit\"](status);\n };\n Module[\"inspect\"] = function() {\n  return \"[Emscripten Module object]\";\n };\n} else if (ENVIRONMENT_IS_SHELL) {\n if (typeof read != \"undefined\") {\n  read_ = function shell_read(f) {\n   var data = tryParseAsDataURI(f);\n   if (data) {\n    return intArrayToString(data);\n   }\n   return read(f);\n  };\n }\n readBinary = function readBinary(f) {\n  var data;\n  data = tryParseAsDataURI(f);\n  if (data) {\n   return data;\n  }\n  if (typeof readbuffer === \"function\") {\n   return new Uint8Array(readbuffer(f));\n  }\n  data = read(f, \"binary\");\n  assert(typeof data === \"object\");\n  return data;\n };\n if (typeof scriptArgs != \"undefined\") {\n  arguments_ = scriptArgs;\n } else if (typeof arguments != \"undefined\") {\n  arguments_ = arguments;\n }\n if (typeof quit === \"function\") {\n  quit_ = function(status) {\n   quit(status);\n  };\n }\n if (typeof print !== \"undefined\") {\n  if (typeof console === \"undefined\") console = {};\n  console.log = print;\n  console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n }\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document !== \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n {\n  read_ = function(url) {\n   try {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.send(null);\n    return xhr.responseText;\n   } catch (err) {\n    var data = tryParseAsDataURI(url);\n    if (data) {\n     return intArrayToString(data);\n    }\n    throw err;\n   }\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = function(url) {\n    try {\n     var xhr = new XMLHttpRequest();\n     xhr.open(\"GET\", url, false);\n     xhr.responseType = \"arraybuffer\";\n     xhr.send(null);\n     return new Uint8Array(xhr.response);\n    } catch (err) {\n     var data = tryParseAsDataURI(url);\n     if (data) {\n      return data;\n     }\n     throw err;\n    }\n   };\n  }\n  readAsync = function(url, onload, onerror) {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = function() {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    var data = tryParseAsDataURI(url);\n    if (data) {\n     onload(data.buffer);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = function(title) {\n  document.title = title;\n };\n} else {}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.warn.bind(console);\n\nfor (key in moduleOverrides) {\n if (moduleOverrides.hasOwnProperty(key)) {\n  Module[key] = moduleOverrides[key];\n }\n}\n\nmoduleOverrides = null;\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nvar tempRet0 = 0;\n\nvar setTempRet0 = function(value) {\n tempRet0 = value;\n};\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\nif (typeof WebAssembly !== \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(\"Assertion failed: \" + text);\n }\n}\n\nvar UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heap, idx, maxBytesToRead) {\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n  return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n } else {\n  var str = \"\";\n  while (idx < endPtr) {\n   var u0 = heap[idx++];\n   if (!(u0 & 128)) {\n    str += String.fromCharCode(u0);\n    continue;\n   }\n   var u1 = heap[idx++] & 63;\n   if ((u0 & 224) == 192) {\n    str += String.fromCharCode((u0 & 31) << 6 | u1);\n    continue;\n   }\n   var u2 = heap[idx++] & 63;\n   if ((u0 & 240) == 224) {\n    u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n   } else {\n    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n   }\n   if (u0 < 65536) {\n    str += String.fromCharCode(u0);\n   } else {\n    var ch = u0 - 65536;\n    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n   }\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++] = 192 | u >> 6;\n   heap[outIdx++] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++] = 224 | u >> 12;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   heap[outIdx++] = 240 | u >> 18;\n   heap[outIdx++] = 128 | u >> 12 & 63;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  }\n }\n heap[outIdx] = 0;\n return outIdx - startIdx;\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n\nfunction lengthBytesUTF8(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n  if (u <= 127) ++len; else if (u <= 2047) len += 2; else if (u <= 65535) len += 3; else len += 4;\n }\n return len;\n}\n\nvar UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n var endPtr = ptr;\n var idx = endPtr >> 1;\n var maxIdx = idx + maxBytesToRead / 2;\n while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n endPtr = idx << 1;\n if (endPtr - ptr > 32 && UTF16Decoder) {\n  return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n } else {\n  var str = \"\";\n  for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n   var codeUnit = HEAP16[ptr + i * 2 >> 1];\n   if (codeUnit == 0) break;\n   str += String.fromCharCode(codeUnit);\n  }\n  return str;\n }\n}\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 2) return 0;\n maxBytesToWrite -= 2;\n var startPtr = outPtr;\n var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n for (var i = 0; i < numCharsToWrite; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  HEAP16[outPtr >> 1] = codeUnit;\n  outPtr += 2;\n }\n HEAP16[outPtr >> 1] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF16(str) {\n return str.length * 2;\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n var i = 0;\n var str = \"\";\n while (!(i >= maxBytesToRead / 4)) {\n  var utf32 = HEAP32[ptr + i * 4 >> 2];\n  if (utf32 == 0) break;\n  ++i;\n  if (utf32 >= 65536) {\n   var ch = utf32 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  } else {\n   str += String.fromCharCode(utf32);\n  }\n }\n return str;\n}\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 4) return 0;\n var startPtr = outPtr;\n var endPtr = startPtr + maxBytesToWrite - 4;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\n   var trailSurrogate = str.charCodeAt(++i);\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n  }\n  HEAP32[outPtr >> 2] = codeUnit;\n  outPtr += 4;\n  if (outPtr + 4 > endPtr) break;\n }\n HEAP32[outPtr >> 2] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF32(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n  len += 4;\n }\n return len;\n}\n\nfunction alignUp(x, multiple) {\n if (x % multiple > 0) {\n  x += multiple - x % multiple;\n }\n return x;\n}\n\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n buffer = buf;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n}\n\nvar INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n\nvar wasmTable;\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATMAIN__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n runtimeInitialized = true;\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction postRun() {\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nModule[\"preloadedImages\"] = {};\n\nModule[\"preloadedAudios\"] = {};\n\nfunction abort(what) {\n if (Module[\"onAbort\"]) {\n  Module[\"onAbort\"](what);\n }\n what += \"\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nfunction hasPrefix(str, prefix) {\n return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return hasPrefix(filename, dataURIPrefix);\n}\n\nvar fileURIPrefix = \"file://\";\n\nfunction isFileURI(filename) {\n return hasPrefix(filename, fileURIPrefix);\n}\n\nvar wasmBinaryFile = \"data:application/octet-stream;base64,AGFzbQEAAAAB1AM/YAF/AX9gAn9/AX9gAX8AYAJ/fwBgA39/fwF/YAN/f38AYAF/AX1gA399fQBgAn99AGAHf319fX19fQBgA39/fQBgBH9/f30AYAN/fX8AYAAAYAR/f39/AGAFf39/f38AYAR/f39/AX9gBX99fX19AGAGf39/f39/AGAAAX9gA39/fQF/YAZ/f399f30AYAR/f319AGABfQF9YAV/f39/fwF/YAJ/fQF/YAJ/fwF9YAN9fX0BfWAIf39/f39/f38AYAp/f39/f39/f39/AGACf3wBf2AGf3x/f39/AX9gA39+fwF+YAF8AX1gAnx/AXxgB39/f39/f38AYA1/f39/f39/f39/f39/AGAGf39/f31/AGAFf39/fX0AYAR/f31/AGAGf399fX9/AGAFf399fX0AYAZ/f319fX0AYAh/f319fX19fQBgBX99fX9/AGAHfX1/f39/fwBgAXwBf2AGf39/f39/AX9gB39/f39/f38Bf2AEf39/fQF/YAN/f3wBf2ADf319AX9gAn5/AX9gAn1/AX9gAX8BfmADf39/AX1gCH9/f399fX1/AX1gAn99AX1gAn19AX1gAX8BfGADf39/AXxgBX9/f39/AXxgAn1/AXwC5QEmAWEBYQAcAWEBYgAdAWEBYwAkAWEBZAABAWEBZQAOAWEBZgAcAWEBZwAFAWEBaAAPAWEBaQAjAWEBagAFAWEBawAOAWEBbAA8AWEBbQAFAWEBbgAEAWEBbwAQAWEBcAAFAWEBcQADAWEBcgASAWEBcwANAWEBdAABAWEBdQABAWEBdgAYAWEBdwACAWEBeAAAAWEBeQAAAWEBegADAWEBQQAPAWEBQgADAWEBQwACAWEBRAACAWEBRQAAAWEBRgACAWEBRwA9AWEBSAACAWEBSQAdAWEBSgASAWEBSwASAWEBTAAAA6gJpgkBAAIAAAABAgEAAjsABAIAAwAAAwABAgACADMBAgAAAA0FBQIBAwMBAAUBAQIAAAAPBAEEAQgICAIEAQIBAgMEAQMCAiEhCwIAAgMAAAICDQUDABoDAAMACwIANgAAAAIDAAAAAAAGBgACAAEAEwMCAAMAFxcEBBABBAADAAgBABMANAEKAAQEBAIBAgEAAwEFBQUCAAIAAgEEAAABEwICAhQDAQMABAUCAAMDAAEDAhACJQICAwMA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BHJrIgFBAXQgACABQRVqdkEBcXJBHGohAgsgAyACNgIcIAJBAnRB6MIBaiEBAkACQAJAQbzAASgCACIEQQEgAnQiB3FFBEBBvMABIAQgB3I2AgAgASADNgIAIAMgATYCGAwBCyAAQQBBGSACQQF2ayACQR9GG3QhAiABKAIAIQEDQCABIgQoAgRBeHEgAEYNAiACQR12IQEgAkEBdCECIAQgAUEEcWoiB0EQaigCACIBDQALIAcgAzYCECADIAQ2AhgLIAMgAzYCDCADIAM2AggMAQsgBCgCCCIAIAM2AgwgBCADNgIIIANBADYCGCADIAQ2AgwgAyAANgIIC0HYwAFB2MABKAIAQQFrIgBBfyAAGzYCAAsLVAICfwF9IwBBEGsiASQAAn0gACgCACAAKAIEIAFBDGoQ/QMiAkUEQCAAELsBQwAAAAAMAQsgACAAKAIAIAJqNgIAIAEqAgwLIQMgAUEQaiQAIAO7CwcAIABBDGoLKQEBfyACBEAgACEDA0AgAyABOgAAIANBAWohAyACQQFrIgINAAsLIAALBgAgABAwCwgAIAAQgQGnCzUBAX8jAEEQayICJAAgAiAAKAIANgIMIAAgASgCADYCACABIAJBDGooAgA2AgAgAkEQaiQACykBAX8jAEEQayIBJAAgASAAKQIANwMIIAFBCGoQOCEAIAFBEGokACAACxQBAX9BCBAnIgEgACkCADcDACABCwwAIAAgASkCADcCAAsJACAAEPEEIAALKAEBfyABIAFBAWsiAnFFBEAgACACcQ8LIAAgAU8EfyAAIAFwBSAACwsLACAAEEMaIAAQMAsHACAAQQRqCywBAX8gABC6AiAAKAIABEAgABCrBCAAECkaIAAoAgAhASAAEJIBGiABEDALCwQAIAALEgAgACACOAIEIAAgATgCACAACwsAIAAgATYCACAACwMAAAsaACAAQbjnADYCACAAQRhqED4gABCQAhogAAsLACAAQgA3AgAgAAsHACAAQRBqCwUAEBIACxMAIAAgARC9AiAAQQRqIAIQ6AELDAAgASACKAIANgIAC1UBAX8gACgCBCEBA0AgASAAKAIIRwRAIAAoAhAaIAAgACgCCEEEazYCCAwBCwsgACgCAARAIAAoAhAaIAAoAgAhASAAEDIoAgAgACgCAGsaIAEQMAsLWQECfyMAQRBrIgIkACACIAE2AgwgASAAEL4EIgNNBEAgABCSASIAIANBAXZJBEAgAiAAQQF0NgIIIAJBCGogAkEMahBYKAIAIQMLIAJBEGokACADDwsQdQALPQECfyMAQRBrIgMkACADIABBARC/ASECIAAQKSACKAIEIAEQSCACIAIoAgRBBGo2AgQgAhBoIANBEGokAAtQAQF/IAAQugIgABApIAAoAgAgACgCBCABQQRqIgIQ6gEgACACEDYgAEEEaiABQQhqEDYgABApIAEQMhA2IAEgASgCBDYCACAAIAAQLxDEAgsNACAAKAIAIAFBA3RqCxAAIAAoAgQgACgCAGtBA3ULGAAgAC0AAEEgcUUEQCABIAIgABDaAhoLCwsAIAAgARBaQQBHC1IBAX8jAEEQayICJAAgAiABOwEOIAIgACACQQ5qEMMENgIIIAIQpgE2AgBBACEAIAJBCGogAhDCBEUEQCACQQhqEHIoAgQhAAsgAkEQaiQAIAALSwECfyMAQRBrIgEkACABIAAQ/wQhACMAQRBrIgIkACACQQhqIAAoAgQQQSgCAEEBOgAAIAAoAghBAToAACACQRBqJAAgAUEQaiQAC3UBA38jAEEQayICJAAgAiAAEP8EIQAjAEEQayIDJAAgA0EIaiAAKAIEEEEoAgAtAABFBEACfwJAIAAoAggiAC0AACIBQQFHBH8gAUECcQ0BIABBAjoAAEEBBUEACwwBCwALIQELIANBEGokACACQRBqJAAgAQsoACAAQdTQACkCADcCECAAQczQACkCADcCCCAAQcTQACkCADcCACAACwkAIAAQPSgCAAttAQF/IwBBgAJrIgUkACAEQYDABHEgAiADTHJFBEAgBSABQf8BcSACIANrIgJBgAIgAkGAAkkiARsQMxogAUUEQANAIAAgBUGAAhBPIAJBgAJrIgJB/wFLDQALCyAAIAUgAhBPCyAFQYACaiQACw4AQdO+ASABIAIQCSAACyQBAn8jAEEQayICJAAgACABEMMCIQMgAkEQaiQAIAEgACADGwtQAQJ/IwBBEGsiAyQAAkACQAJAAkAgAUEEaw4CAAEDCyADIAIQyAEgAEEEaiADEMsCIAMQbwwBCyAAIAIQNTYCEAtBASEECyADQRBqJAAgBAsHACAAIAFxCyEAIAEgACoCNFwEQCAAIAE4AjQgACAAKAIAKAI8EQIACwshACABIAAqAjBcBEAgACABOAIwIAAgACgCACgCOBECAAsLGQAgACgCACABOAIAIAAgACgCAEEIajYCAAsJACAAKAIAEB0LugEBAn8jAEEQayIDJAACf0EAIAAvASwgARBaIAFGDQAaIABBLGogARDRASAAIAAvASwgACgCACgCMBEDACAAKAIoIgRBLGpBAhDRASAAKAIkIAQoAqQBSQRAIAQgACgCJDYCpAELQQEgAkUNABogAyAAQRhqIgAQKjYCCCADIAAQKzYCAAN/IANBCGogAxAsBH8gAygCCCgCACABQQEQXxogA0EIahAtDAEFQQELCwshACADQRBqJAAgAAtaAQJ/IAAgAUHIAGtBACABGyIDNgIoAkAgACADRg0AQQEhAiABIAAoAhAgASgCACgCABEBACIBRQ0AIAFBCyABKAIAKAIMEQEARQ0AIAAgATYCFEEAIQILIAILDwAgACAAKAIAKAJkEQIACwQAQQALFAAgAARAIAAgACgCACgCBBECAAsLKQEBfyMAQRBrIgIkACACIAE2AgwgAEGMAWogAkEMahC+AyACQRBqJAALMwEBfyACBEAgACEDA0AgAyABLQAAOgAAIANBAWohAyABQQFqIQEgAkEBayICDQALCyAACxgAIAAgASoCADgCACAAIAEqAgQ4AgQgAAsZACAAQQRqIAFBBGoQgQUgACABKAIQNgIQCw8AIAAoAgAgACgCBDYCBAsKACAAQagMNgIAC0sBAnwgACAAoiIBIACiIgIgASABoqIgAUSnRjuMh83GPqJEdOfK4vkAKr+goiACIAFEsvtuiRARgT+iRHesy1RVVcW/oKIgAKCgtgtPAQF8IAAgAKIiAESBXgz9///fv6JEAAAAAAAA8D+gIAAgAKIiAURCOgXhU1WlP6KgIAAgAaIgAERpUO7gQpP5PqJEJx4P6IfAVr+goqC2C1IBAn0gAUEAECYqAgAhBCACQQAQJioCACEFIABBABAmIAQgBSADlJI4AgAgAUEBECYqAgAhBCACQQEQJioCACEFIABBARAmIAQgBSADlJI4AgALDAAgABDsARogABAwCyEAIAAQ/AIgAEEANgI8IABB9Bw2AgAgAEHs4wA2AgAgAAsdAQF/IAAQgwEEQCAAKAIAIQEgABDBAhogARAwCwsoAQF/IwBBEGsiAiQAIAIgATYC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IQnARBgtRFT7IQlAIARBf0obIAGgmhBqIQAMAQsgA0HV44iHBE0EQCAAuyEBIANB39u/hQRNBEAgBEF/TARAIAFE0iEzf3zZEkCgEGshAAwDCyABRNIhM3982RLAoBBrjCEADAILRBgtRFT7IRnARBgtRFT7IRlAIARBf0obIAGgEGohAAwBCyADQYCAgPwHTwRAIAAgAJMhAAwBCwJAAkACQAJAIAAgAkEIahCKBUEDcQ4DAAECAwsgAisDCBBqIQAMAwsgAisDCBBrIQAMAgsgAisDCJoQaiEADAELIAIrAwgQa4whAAsgAkEQaiQAIAALVwECfyMAQRBrIgMkACAAKAIEIgRBAXUgAWohASAAKAIAIQAgBEEBcQRAIAEoAgAgAGooAgAhAAsgAyACEJoFIAEgAyAAEQEAIQAgAxBvIANBEGokACAACw4AQYS+ASABIAIQCSAAC5oBAQJ/IAEoAgAgACgCACADKAIAEQEAIQUgAigCACABKAIAIAMoAgARAQAhBAJ/AkAgBUUEQEEAIARFDQIaIAEgAhA2QQEgASgCACAAKAIAIAMoAgARAQBFDQIaIAAgARA2DAELIAQEQCAAIAIQNkEBDwsgACABEDZBASACKAIAIAEoAgAgAygCABEBAEUNARogASACEDYLQQILCw4AIAAgASgCADYCACAACwsAIAAgASACEMwBCwcAIABBAkcL5w0CC38JfSAAIAEQhQIgAUEIEFAEQCAAKAKIASEDIAAgACgCACgCaBEAACELIwBBkAFrIgIkACADIAMoAgAoAggRAgACQCAAQYwBaiIIEC8iCUECSQ0AAkAgCEEAEC4oAgAiABCzASIKBEAgAkFAayAAEN0BEGYiAUEAECYqAgAhESABQQEQJioCACESIAJBiAFqIAAQowIQZiIBQQAQJioCACENIAFBARAmKgIAIQ8gAkGAAWogABB8IAMgAkGAAWpBABAmKgIAIhMgAkGAAWpBARAmKgIAIhQgAygCACgCFBEHAAwBCyACIAJBQGsgABC8AyIEKgI8Ig04AjwCQCANQwAAAABeBEAgCCAJQQFrEC4oAgAhASACQYgBaiAEEHwgAkGAAWoQRCEAAkAgARCzAQRAIAJBMGogARCjAhBmGgwBCyACQTBqIAEQfAsgACACQTBqIAJBiAFqELYBIAIgABDeASINOAIsIABBABAmIgEgASoCACANlTgCACACKgIsIQ0gAEEBECYiASABKgIAIA2VOAIAIAhBARAuKAIAIQUgAkEwahBEIQECQCAFELMBBEAgAkEgaiAFEN0BEGYaDAELIAJBIGogBRB8CyABIAJBIGogAkGIAWoQtgEgAiABEN4BIg04AhwgAUEAECYiBSAFKgIAIA2VOAIAIAIqAhwhDSABQQEQJiIFIAUqAgAgDZU4AgAgAkEsaiACQRxqIAJBPGoQpAEQpAEqAgAhDSACQSBqEEQiBSACQYgBaiAAIA0QbCADIAVBABAmKgIAIhEgBUEBECYqAgAiEiADKAIAKAIUEQcAIAJBEGoQRCIFIAJBiAFqIAAgDUPuOuU+lCIPEGwgAkEIahBEIgAgAkGIAWogASAPEGwgAhBEIgcgAkGIAWogASANEGwgAyAFQQAQJioCACAFQQEQJioCACAAQQAQJioCACAAQQEQJioCACAHQQAQJioCACINIAdBARAmKgIAIg8gAygCACgCHBEJAAwBCyACQYgBaiAEEHwgAyACQYgBakEAECYqAgAiESACQYgBakEBECYqAgAiEiADKAIAKAIUEQcAIBIhDyARIQ0LIAQQQxogEiEUIBEhEwsgCUEBIAlBAUsbIQxBASEFIAohAAJAA0AgBSAMRgRAAkAgC0UNBCAAIApyQQFxRQ0AIAMgDSAPIBEgEiATIBQgAygCACgCHBEJAAwDCwUCQCAIIAUQLigCACIEELMBIgEEQCACQUBrIAQQ3QEQZiEAIAJBiAFqIAQQfCADIA0gDyAAQQAQJioCACAAQQEQJioCACACQYgBakEAECYqAgAgAkGIAWpBARAmKgIAIAMoAgAoAhwRCQAgAkGAAWogBBCjAhBmIgBBABAmKgIAIQ0gAEEBECYqAgAhDwwBCyACQUBrIAQQvAMaIAJBiAFqIAJBQGsQfCACIAJBQGsqAjwiDjgCPAJAIA5DAAAAAF4EQCACQYABahBEIgcgAkEwaiANIA8QQCACQYgBahC2ASACIAcQ3gEiDjgCLCAHQQAQJiIEIAQqAgAgDpU4AgAgAioCLCEOIAdBARAmIgQgBCoCACAOlTgCACAIIAVBAWogCXAQLigCACEGIAJBMGoQRCEEAkAgBhCzAQRAIAJBIGogBhDdARBmGgwBCyACQSBqIAYQfAsgBCACQSBqIAJBiAFqELYBIAIgBBDeASIOOAIcIARBABAmIgYgBioCACAOlTgCACACKgIcIQ4gBEEBECYiBiAGKgIAIA6VOAIAIAJBLGogAkEcaiACQTxqEKQBEKQBKgIAIQ4gAkEgahBEIgYgAkGIAWogByAOEGwgBkEAECYqAgAhECAGQQEQJioCACEVAkAgAEEBcQRAIAMgDSAPIBAgFSAGQQAQJioCACAGQQEQJioCACADKAIAKAIcEQkADAELIAMgECAVIAMoAgAoAhgRBwALIAJBEGoQRCIAIAJBiAFqIAcgDkPuOuU+lCINEGwgAkEIahBEIgcgAkGIAWogBCANEGwgAhBEIgYgAkGIAWogBCAOEGwgAyAAQQAQJioCACAAQQEQJioCACAHQQAQJioCACAHQQEQJioCACAGQQAQJioCACINIAZBARAmKgIAIg8gAygCACgCHBEJAAwBCyACQYgBakEAECYqAgAhDiACQYgBakEBECYqAgAhEAJAIABBAXEEQCADIA0gDyAOIBAgDiAQIAMoAgAoAhwRCQAMAQsgAyAOIBAgAygCACgCGBEHAAsgECEPIA4hDQsgAkFAaxBDGgsgBUEBaiEFIAEhAAwBCwsgAyATIBQgAygCACgCGBEHAAsgAyADKAIAKAIgEQIACyACQZABaiQACwsRACAAQT0gACgCACgCDBEBAAshACABIAAqAjxcBEAgACABOAI8IAAgACgCACgCRBECAAsLJAECfyMAQRBrIgIkACABIAAQsgQhAyACQRBqJAAgASAAIAMbCxIAIAAQKSgCACAAKAIAa0EobQslAQJ/IwBBEGsiACQAIABBCGoQkwEQQSgCACEBIABBEGokACABCyEAIAAQ5AQgAEH8JDYCACAAQfg9NgIAIABBBGoQOhogAAuDAQIDfwF+AkAgAEKAgICAEFQEQCAAIQUMAQsDQCABQQFrIgEgACAAQgqAIgVCCn59p0EwcjoAACAAQv////+fAVYhAiAFIQAgAg0ACwsgBaciAgRAA0AgAUEBayIBIAIgAkEKbiIDQQpsa0EwcjoAACACQQlLIQQgAyECIAQNAAsLIAELKQEBfyMAQRBrIgIkACACIAA2AgwgAkEMaiABKAIAEHcgAkEQaiQAIAALNwEBfyABIAAoAgQiA0EBdWohASAAKAIAIQAgASACIANBAXEEfyABKAIAIABqKAIABSAACxEIAAsoACAAEIACIABCADcCUCAAQagTNgIAIABCADcCWCAAQdTSADYCACAACzcAAkACQAJAIAFBGGsOAgABAgsgACACEDG2OAIwQQEPCyAAIAIQMbY4AjRBAQ8LIAAgASACEFkLMQEBfyMAQRBrIgMkACADIAE2AgwgACADQQxqENABIAAgAikCADcCBCADQRBqJAAgAAsSACAAIAI6AAQgACABNgIAIAALLgECfyAAKAIIIQEgABApGgNAIAEEQCABKAIAIQIgARAwIAIhAQwBCwsgABDdBQv7AQEDfyMAQRBrIgIkACABIAAtAAAQtQFBEBBaIQMgAiAAQQRqIgAQKjYCCCACIAAQKzYCACADQRBGIQRBACEAAn8DQCACQQhqIAIQLARAIAIoAggoAgAhAwJ/AkAgAQRAIAEgAyADKAIAKAJAEQAAEFogAUcNAQsgAxCOAgRAQQEgAygCSA0CGgtBASEECyAACyEAIAJBCGoQLQwBBSAAIARxBEBB7AAQJyIAEM0DIABB8NYANgIAIAAQwwE2AmggAAwDCwsLIABBAXEEQEHoABAnQQBB6AAQMyIAEM0DIABB4OEANgIAIAAMAQsQwwELIQAgAkEQaiQAIAALHAAgACgCFARAIAAoAhQiACAAKAIAKAJkEQIACwsYACABQf////8DSwRAEEYACyABQQJ0ECcLEQAgAEEkIAAoAgAoAgwRAQALogEBAn8gACgCBCAAECkoAgBJBEAjAEEQayIDJAAgAyAAQQEQmwIhAiAAECkgAigCBCABEJYCIAIgAigCBEEIajYCBCACEGggA0EQaiQADwsjAEEgayIDJAAgABApIgIgA0EIaiAAIAAQTkEBahCaAiAAEE4gAhCZAiICKAIIIAEQlgIgAiACKAIIQQhqNgIIIAAgAhDDAyACEJgCIANBIGokAAsHACAAIAFyC0wBAn0gAUEAECYqAgAhAyACQQAQJioCACEEIABBABAmIAMgBJM4AgAgAUEBECYqAgAhAyACQQEQJioCACEEIABBARAmIAMgBJM4AgALTAECfSABQQAQJioCACEDIAJBABAmKgIAIQQgAEEAECYgAyAEkjgCACABQQEQJioCACEDIAJBARAmKgIAIQQgAEEBECYgAyAEkjgCAAuGAgEMfSABQQAQJioCACEDIAFBARAmKgIAIQQgAUECECYqAgAhBSABQQMQJioCACEGIAFBBBAmKgIAIQ0gAUEFECYqAgAhDiACQQAQJioCACEHIAJBARAmKgIAIQggAkECECYqAgAhCSACQQMQJioCACEKIAJBBBAmKgIAIQsgAkEFECYqAgAhDCAAQQAQJiADIAeUIAUgCJSSOAIAIABBARAmIAQgB5QgBiAIlJI4AgAgAEECECYgAyAJlCAFIAqUkjgCACAAQQMQJiAEIAmUIAYgCpSSOAIAIABBBBAmIA0gAyALlCAFIAyUkpI4AgAgAEEFECYgDiAEIAuUIAYgDJSSkjgCAAsJACAAQQA6AAALTgECfyMAQRBrIgEkAAJ/IAAoAgAgACgCBCABQQxqEP0DIgJFBEAgABC7AUEADAELIAAgACgCACACajYCACABKAIMCyEAIAFBEGokACAACxMAIABBAToACCAAIAAoAgQ2AgALCwAgACgCCEH/AXELDwAgACAAKAIAQShqNgIACyQBAn8jAEEQayICJAAgASAAEMMCIQMgAkEQaiQAIAEgACADGwskACAAIAE2AgAgACABKAIEIgE2AgQgACABIAJBAnRqNgIIIAALEwAgAEHkIzYCACAAQQRqEG8gAAsKACAAQTBrQQpJCzMBAX8jAEEQayICJAAgAkEIaiABEOkCIAJBCGogABEAACEAIAJBCGoQXiACQRBqJAAgAAtyAgR/AXwjAEEQayIAJAAgABDzAiAAQQhqIABBtvwAEPICIAAQXiMAQRBrIgEkACAAKAIIQcSHASgCACABQQRqEAshBCABIAEoAgQQQSECIAQQ9wEhAyACEMQBIAFBEGokACAAQQhqEF4gAEEQaiQAIAMLCQAgACgCABAfCw8AIAAgACgCACgCTBECAAsLACAAQSBBABBfGgsvACABsyAClEMAAIA/IAKTIACzlJIiAkMAAIBPXSACQwAAAABgcQRAIAKpDwtBAAuQAgIGfwF+IwBBEGsiAiQAIAEQgQEhCAJAIAEtAAgEQCAAEIIEDAELAkACfyACEPEEIAinIgZBAWoiAwRAIAIQ+wMgA0kEQBB1AAsgAhApGiACIAMQJyIFNgIAIAIgBTYCBCACECkgAyAFajYCACACQQAQ+gMgAiADEP8DCyACKAIAIQdBACAGQf8BcSIDIAEoAgQgASgCACIFa0oNABoDfyADIARGBH8gAyAHakEAOgAAIAMFIAQgB2ogBS0AADoAACAEQQFqIQQgBUEBaiEFDAELCwsiBK0gCFIEQCABELsBIAAQggQMAQsgASABKAIAIARqNgIAIAAgAigCACAGEIEECyACEIAECyACQRBqJAALKgAgAAJ/QQAgACgCFEUNABpBACAAKAIUEIMDRQ0AGiAAKAIUCzYCdEEACxwAIAAgASoCMDgCMCAAIAEqAjQ4AjQgACABEGcLFgBBAUEgIABBAWtna3QgACAAQQJPGwsNACABKAIAIAIoAgBGCxYAIAAgASgCADYCACAAIAItAAA6AAQLOAEBfyAAKAIAIQEgAEEANgIAIAEEQCAAED0iAC0ABARAIAAoAgAaCyABBEAgACgCABogARAwCwsLFAEBfyAAKAIAIQEgAEEANgIAIAELDAAgACABKAIANgIACw8AIAAgAC8BACABcjsBAAsRACAAQTAgACgCACgCDBEBAAsJACAAIAEQiwILIAAgACgCBCAAECkoAgBHBEAgACABEEsPCyAAIAEQowMLCQAgAEEANgIAC2gBAn8jAEEQayIEJAAgBEEANgIMIABBDGogBEEMaiADEEcgAQRAIAAoAhAgARCyASEFCyAAIAU2AgAgACAFIAJBAnRqIgI2AgggACACNgIEIAAQMiAFIAFBAnRqNgIAIARBEGokACAACw8AIAAoAgggACgCADYCAAtVACAFIAAgASAEEH4gBUEIaiIAIAEgAiAEEH4gBUEQaiIBIAIgAyAEEH4gBUEYaiICIAUgACAEEH4gBUEgaiIDIAAgASAEEH4gBUEoaiACIAMgBBB+CxYBAX8gABAvIQEgABCrBCAAIAEQ1wMLMQAgABD5BCAAQoCAgPiDgICAPzcCoAEgAEIANwKYASAAQezVADYCACAAQcTYADYCAAsTACAAQUBrIAEQ6gMgAEEBOgA8CxQAIABByABqIAEQ6gMgAEEBOgA9CxgAIAAQpAIEQCAAKAI4EOQDDwsgABDjAwsiAQF9IABBABAmKgIAIgEgAZQgAEEBECYqAgAiASABlJKRCxQAIAAoAggiACAAKAIAKAIIEQAACx8BAX8gAEEcaiIAEC8gAUsEfyAAIAEQLigCAAVBAAsLEQAgACABNgIEIABB/D82AgALawEDfyMAQRBrIgEkACAAQfg9NgIAIAEgAEEEaiICECo2AgggASACECs2AgADQCABQQhqIAEQLARAIAEoAggoAgAiAwRAIAMgAygCACgCBBECAAsgAUEIahAtDAELCyACED4gAUEQaiQAIAALIQAgASAAKgJ4XARAIAAgATgCeCAAIAAoAgAoAlQRAgALCzcBAX0gAUMAAEBAlCIDIAJDAABAQJQiAiABQwAAwMCUkiADQwAAgD8gApOSIACUkiAAlJIgAJQLJAEBfyMAQRBrIgEkACABQQhqIAAQQSgCACEAIAFBEGokACAAC2IBAX8jAEEQayICJAAgAEEAOgAUIAIgAEEIaiIDECo2AgggAiADECs2AgADQCACQQhqIAIQLARAIAIoAghBBGogARC0AgRAIABBAToAFAsgAkEIahC9AQwBCwsgAkEQaiQACwwAIAAQwgIaIAAQMAsJACAAIAE2AgALDAAgACABLQAAOgAACycAIAMgAygCACACIAFrIgBrIgI2AgAgAEEBTgRAIAIgASAAEGUaCwsJACAAQRxqEC8LEwAgAEGELjYCACAAQQRqEG8gAAtEAQF/AkACQAJAAkACQCABQcMAaw4DAAECBAsgACACEDU2AgQMAgsgACACEDU2AggMAQsgACACEDU2AgwLQQEhAwsgAwsMACAAIAEoAgQ2AgQLIwAgABBpIABB5CM2AgAgAEEEakG8JBCUASAAQZQkNgIAIAALIgAgABDtBCAAQgA3AnggAEGQzgA2AgAgAEG09AA2AgAgAAuoAQACQCABQYAITgRAIABEAAAAAAAA4H+iIQAgAUH/D0gEQCABQf8HayEBDAILIABEAAAAAAAA4H+iIQAgAUH9FyABQf0XSBtB/g9rIQEMAQsgAUGBeEoNACAARAAAAAAAABAAoiEAIAFBg3BKBEAgAUH+B2ohAQwBCyAARAAAAAAAABAAoiEAIAFBhmggAUGGaEobQfwPaiEBCyAAIAFB/wdqrUI0hr+iC5YuAQx/IwBBEGsiDCQAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIABB9AFNBEBBuMABKAIAIgVBECAAQQtqQXhxIABBC0kbIghBA3YiAnYiAUEDcQRAIAFBf3NBAXEgAmoiA0EDdCIBQejAAWooAgAiBEEIaiEAAkAgBCgCCCICIAFB4MABaiIBRgRAQbjAASAFQX4gA3dxNgIADAELIAIgATYCDCABIAI2AggLIAQgA0EDdCIBQQNyNgIEIAEgBGoiASABKAIEQQFyNgIEDA0LIAhBwMABKAIAIgpNDQEgAQRAAkBBAiACdCIAQQAgAGtyIAEgAnRxIgBBACAAa3FBAWsiACAAQQx2QRBxIgJ2IgFBBXZBCHEiACACciABIAB2IgFBAnZBBHEiAHIgASAAdiIBQQF2QQJxIgByIAEgAHYiAUEBdkEBcSIAciABIAB2aiIDQQN0IgBB6MABaigCACIEKAIIIgEgAEHgwAFqIgBGBEBBuMABIAVBfiADd3EiBTYCAAwBCyABIAA2AgwgACABNgIICyAEQQhqIQAgBCAIQQNyNgIEIAQgCGoiAiADQQN0IgEgCGsiA0EBcjYCBCABIARqIAM2AgAgCgRAIApBA3YiAUEDdEHgwAFqIQdBzMABKAIAIQQCfyAFQQEgAXQiAXFFBEBBuMABIAEgBXI2AgAgBwwBCyAHKAIICyEBIAcgBDYCCCABIAQ2AgwgBCAHNgIMIAQgATYCCAtBzMABIAI2AgBBwMABIAM2AgAMDQtBvMABKAIAIgZFDQEgBkEAIAZrcUEBayIAIABBDHZBEHEiAnYiAUEFdkEIcSIAIAJyIAEgAHYiAUECdkEEcSIAciABIAB2IgFBAXZBAnEiAHIgASAAdiIBQQF2QQFxIgByIAEgAHZqQQJ0QejCAWooAgAiASgCBEF4cSAIayEDIAEhAgNAAkAgAigCECIARQRAIAIoAhQiAEUNAQsgACgCBEF4cSAIayICIAMgAiADSSICGyEDIAAgASACGyEBIAAhAgwBCwsgASAIaiIJIAFNDQIgASgCGCELIAEgASgCDCIERwRAIAEoAggiAEHIwAEoAgBJGiAAIAQ2AgwgBCAANgIIDAwLIAFBFGoiAigCACIARQRAIAEoAhAiAEUNBCABQRBqIQILA0AgAiEHIAAiBEEUaiICKAIAIgANACAEQRBqIQIgBCgCECIADQALIAdBADYCAAwLC0F/IQggAEG/f0sNACAAQQtqIgBBeHEhCEG8wAEoAgAiCUUNAEEfIQVBACAIayEDAkACQAJAAn8gCEH///8HTQRAIABBCHYiACAAQYD+P2pBEHZBCHEiAnQiACAAQYDgH2pBEHZBBHEiAXQiACAAQYCAD2pBEHZBAnEiAHRBD3YgASACciAAcmsiAEEBdCAIIABBFWp2QQFxckEcaiEFCyAFQQJ0QejCAWooAgAiAkULBEBBACEADAELQQAhACAIQQBBGSAFQQF2ayAFQR9GG3QhAQNAAkAgAigCBEF4cSAIayIHIANPDQAgAiEEIAciAw0AQQAhAyACIQAMAwsgACACKAIUIgcgByACIAFBHXZBBHFqKAIQIgJGGyAAIAcbIQAgAUEBdCEBIAINAAsLIAAgBHJFBEBBAiAFdCIAQQAgAGtyIAlxIgBFDQMgAEEAIABrcUEBayIAIABBDHZBEHEiAnYiAUEFdkEIcSIAIAJyIAEgAHYiAUECdkEEcSIAciABIAB2IgFBAXZBAnEiAHIgASAAdiIBQQF2QQFxIgByIAEgAHZqQQJ0QejCAWooAgAhAAsgAEUNAQsDQCAAKAIEQXhxIAhrIgEgA0khAiABIAMgAhshAyAAIAQgAhshBCAAKAIQIgEEfyABBSAAKAIUCyIADQALCyAERQ0AIANBwMABKAIAIAhrTw0AIAQgCGoiBiAETQ0BIAQoAhghBSAEIAQoAgwiAUcEQCAEKAIIIgBByMABKAIASRogACABNgIMIAEgADYCCAwKCyAEQRRqIgIoAgAiAEUEQCAEKAIQIgBFDQQgBEEQaiECCwNAIAIhByAAIgFBFGoiAigCACIADQAgAUEQaiECIAEoAhAiAA0ACyAHQQA2AgAMCQsgCEHAwAEoAgAiAk0EQEHMwAEoAgAhAwJAIAIgCGsiAUEQTwRAQcDAASABNgIAQczAASADIAhqIgA2AgAgACABQQFyNgIEIAIgA2ogATYCACADIAhBA3I2AgQMAQtBzMABQQA2AgBBwMABQQA2AgAgAyACQQNyNgIEIAIgA2oiACAAKAIEQQFyNgIECyADQQhqIQAMCwsgCEHEwAEoAgAiBkkEQEHEwAEgBiAIayIBNgIAQdDAAUHQwAEoAgAiAiAIaiIANgIAIAAgAUEBcjYCBCACIAhBA3I2AgQgAkEIaiEADAsLQQAhACAIQS9qIgkCf0GQxAEoAgAEQEGYxAEoAgAMAQtBnMQBQn83AgBBlMQBQoCggICAgAQ3AgBBkMQBIAxBDGpBcHFB2KrVqgVzNgIAQaTEAUEANgIAQfTDAUEANgIAQYAgCyIBaiIFQQAgAWsiB3EiAiAITQ0KQfDDASgCACIEBEBB6MMBKAIAIgMgAmoiASADTSABIARLcg0LC0H0wwEtAABBBHENBQJAAkBB0MABKAIAIgMEQEH4wwEhAANAIAMgACgCACIBTwRAIAEgACgCBGogA0sNAwsgACgCCCIADQALC0EAEJgBIgFBf0YNBiACIQVBlMQBKAIAIgNBAWsiACABcQRAIAIgAWsgACABakEAIANrcWohBQsgBSAITSAFQf7///8HS3INBkHwwwEoAgAiBARAQejDASgCACIDIAVqIgAgA00gACAES3INBwsgBRCYASIAIAFHDQEMCAsgBSAGayAHcSIFQf7///8HSw0FIAUQmAEiASAAKAIAIAAoAgRqRg0EIAEhAAsgAEF/RiAIQTBqIAVNckUEQEGYxAEoAgAiASAJIAVrakEAIAFrcSIBQf7///8HSwRAIAAhAQwICyABEJgBQX9HBEAgASAFaiEFIAAhAQwIC0EAIAVrEJgBGgwFCyAAIgFBf0cNBgwECwALQQAhBAwHC0EAIQEMBQsgAUF/Rw0CC0H0wwFB9MMBKAIAQQRyNgIACyACQf7///8HSw0BIAIQmAEiAUF/RkEAEJgBIgBBf0ZyIAAgAU1yDQEgACABayIFIAhBKGpNDQELQejDAUHowwEoAgAgBWoiADYCAEHswwEoAgAgAEkEQEHswwEgADYCAAsCQAJAAkBB0MABKAIAIgcEQEH4wwEhAANAIAEgACgCACIDIAAoAgQiAmpGDQIgACgCCCIADQALDAILQcjAASgCACIAQQAgACABTRtFBEBByMABIAE2AgALQQAhAEH8wwEgBTYCAEH4wwEgATYCAEHYwAFBfzYCAEHcwAFBkMQBKAIANgIAQYTEAUEANgIAA0AgAEEDdCIDQejAAWogA0HgwAFqIgI2AgAgA0HswAFqIAI2AgAgAEEBaiIAQSBHDQALQcTAASAFQShrIgNBeCABa0EHcUEAIAFBCGpBB3EbIgBrIgI2AgBB0MABIAAgAWoiADYCACAAIAJBAXI2AgQgASADakEoNgIEQdTAAUGgxAEoAgA2AgAMAgsgASAHTQ0AIAAoAgxBCHEgAyAHS3INACAAIAIgBWo2AgRB0MABIAdBeCAHa0EHcUEAIAdBCGpBB3EbIgBqIgI2AgBBxMABQcTAASgCACAFaiIBIABrIgA2AgAgAiAAQQFyNgIEIAEgB2pBKDYCBEHUwAFBoMQBKAIANgIADAELQcjAASgCACABSwRAQcjAASABNgIACyABIAVqIQJB+MMBIQACQAJAAkACQAJAAkADQCACIAAoAgBHBEAgACgCCCIADQEMAgsLIAAtAAxBCHFFDQELQfjDASEAA0AgByAAKAIAIgJPBEAgAiAAKAIEaiIEIAdLDQMLIAAoAgghAAwACwALIAAgATYCACAAIAAoAgQgBWo2AgQgAUF4IAFrQQdxQQAgAUEIakEHcRtqIgkgCEEDcjYCBCACQXggAmtBB3FBACACQQhqQQdxG2oiBSAIIAlqIgZrIQIgBSAHRgRAQdDAASAGNgIAQcTAAUHEwAEoAgAgAmoiADYCACAGIABBAXI2AgQMAwsgBUHMwAEoAgBGBEBBzMABIAY2AgBBwMABQcDAASgCACACaiIANgIAIAYgAEEBcjYCBCAAIAZqIAA2AgAMAwsgBSgCBCIAQQNxQQFGBEAgAEF4cSEHAkAgAEH/AU0EQCAFKAIIIgMgAEEDdiIAQQN0QeDAAWpGGiADIAUoAgwiAUYEQEG4wAFBuMABKAIAQX4gAHdxNgIADAILIAMgATYCDCABIAM2AggMAQsgBSgCGCEIAkAgBSAFKAIMIgFHBEAgBSgCCCIAIAE2AgwgASAANgIIDAELAkAgBUEUaiIAKAIAIgMNACAFQRBqIgAoAgAiAw0AQQAhAQwBCwNAIAAhBCADIgFBFGoiACgCACIDDQAgAUEQaiEAIAEoAhAiAw0ACyAEQQA2AgALIAhFDQACQCAFIAUoAhwiA0ECdEHowgFqIgAoAgBGBEAgACABNgIAIAENAUG8wAFBvMABKAIAQX4gA3dxNgIADAILIAhBEEEUIAgoAhAgBUYbaiABNgIAIAFFDQELIAEgCDYCGCAFKAIQIgAEQCABIAA2AhAgACABNgIYCyAFKAIUIgBFDQAgASAANgIUIAAgATYCGAsgBSAHaiEFIAIgB2ohAgsgBSAFKAIEQX5xNgIEIAYgAkEBcjYCBCACIAZqIAI2AgAgAkH/AU0EQCACQQN2IgBBA3RB4MABaiECAn9BuMABKAIAIgFBASAAdCIAcUUEQEG4wAEgACABcjYCACACDAELIAIoAggLIQAgAiAGNgIIIAAgBjYCDCAGIAI2AgwgBiAANgIIDAMLQR8hACACQf///wdNBEAgAkEIdiIAIABBgP4/akEQdkEIcSIDdCIAIABBgOAfakEQdkEEcSIBdCIAIABBgIAPakEQdkECcSIAdEEPdiABIANyIAByayIAQQF0IAIgAEEVanZBAXFyQRxqIQALIAYgADYCHCAGQgA3AhAgAEECdEHowgFqIQQCQEG8wAEoAgAiA0EBIAB0IgFxRQRAQbzAASABIANyNgIAIAQgBjYCACAGIAQ2AhgMAQsgAkEAQRkgAEEBdmsgAEEfRht0IQAgBCgCACEBA0AgASIDKAIEQXhxIAJGDQMgAEEddiEBIABBAXQhACADIAFBBHFqIgQoAhAiAQ0ACyAEIAY2AhAgBiADNgIYCyAGIAY2AgwgBiAGNgIIDAILQcTAASAFQShrIgNBeCABa0EHcUEAIAFBCGpBB3EbIgBrIgI2AgBB0MABIAAgAWoiADYCACAAIAJBAXI2AgQgASADakEoNgIEQdTAAUGgxAEoAgA2AgAgByAEQScgBGtBB3FBACAEQSdrQQdxG2pBL2siACAAIAdBEGpJGyICQRs2AgQgAkGAxAEpAgA3AhAgAkH4wwEpAgA3AghBgMQBIAJBCGo2AgBB/MMBIAU2AgBB+MMBIAE2AgBBhMQBQQA2AgAgAkEYaiEAA0AgAEEHNgIEIABBCGohASAAQQRqIQAgASAESQ0ACyACIAdGDQMgAiACKAIEQX5xNgIEIAcgAiAHayIEQQFyNgIEIAIgBDYCACAEQf8BTQRAIARBA3YiAEEDdEHgwAFqIQICf0G4wAEoAgAiAUEBIAB0IgBxRQRAQbjAASAAIAFyNgIAIAIMAQsgAigCCAshACACIAc2AgggACAHNgIMIAcgAjYCDCAHIAA2AggMBAtBHyEAIAdCADcCECAEQf///wdNBEAgBEEIdiIAIABBgP4/akEQdkEIcSICdCIAIABBgOAfakEQdkEEcSIBdCIAIABBgIAPakEQdkECcSIAdEEPdiABIAJyIAByayIAQQF0IAQgAEEVanZBAXFyQRxqIQALIAcgADYCHCAAQQJ0QejCAWohAwJAQbzAASgCACICQQEgAHQiAXFFBEBBvMABIAEgAnI2AgAgAyAHNgIAIAcgAzYCGAwBCyAEQQBBGSAAQQF2ayAAQR9GG3QhACADKAIAIQEDQCABIgIoAgRBeHEgBEYNBCAAQR12IQEgAEEBdCEAIAIgAUEEcWoiAygCECIBDQALIAMgBzYCECAHIAI2AhgLIAcgBzYCDCAHIAc2AggMAwsgAygCCCIAIAY2AgwgAyAGNgIIIAZBADYCGCAGIAM2AgwgBiAANgIICyAJQQhqIQAMBQsgAigCCCIAIAc2AgwgAiAHNgIIIAdBADYCGCAHIAI2AgwgByAANgIIC0HEwAEoAgAiACAITQ0AQcTAASAAIAhrIgE2AgBB0MABQdDAASgCACICIAhqIgA2AgAgACABQQFyNgIEIAIgCEEDcjYCBCACQQhqIQAMAwtB8L8BQTA2AgBBACEADAILAkAgBUUNAAJAIAQoAhwiAkECdEHowgFqIgAoAgAgBEYEQCAAIAE2AgAgAQ0BQbzAASAJQX4gAndxIgk2AgAMAgsgBUEQQRQgBSgCECAERhtqIAE2AgAgAUUNAQsgASAFNgIYIAQoAhAiAARAIAEgADYCECAAIAE2AhgLIAQoAhQiAEUNACABIAA2AhQgACABNgIYCwJAIANBD00EQCAEIAMgCGoiAEEDcjYCBCAAIARqIgAgACgCBEEBcjYCBAwBCyAEIAhBA3I2AgQgBiADQQFyNgIEIAMgBmogAzYCACADQf8BTQRAIANBA3YiAEEDdEHgwAFqIQICf0G4wAEoAgAiAUEBIAB0IgBxRQRAQbjAASAAIAFyNgIAIAIMAQsgAigCCAshACACIAY2AgggACAGNgIMIAYgAjYCDCAGIAA2AggMAQtBHyEAIANB////B00EQCADQQh2IgAgAEGA/j9qQRB2QQhxIgJ0IgAgAEGA4B9qQRB2QQRxIgF0IgAgAEGAgA9qQRB2QQJxIgB0QQ92IAEgAnIgAHJrIgBBAXQgAyAAQRVqdkEBcXJBHGohAAsgBiAANgIcIAZCADcCECAAQQJ0QejCAWohAgJAAkAgCUEBIAB0IgFxRQRAQbzAASABIAlyNgIAIAIgBjYCACAGIAI2AhgMAQsgA0EAQRkgAEEBdmsgAEEfRht0IQAgAigCACEIA0AgCCIBKAIEQXhxIANGDQIgAEEddiECIABBAXQhACABIAJBBHFqIgIoAhAiCA0ACyACIAY2AhAgBiABNgIYCyAGIAY2AgwgBiAGNgIIDAELIAEoAggiACAGNgIMIAEgBjYCCCAGQQA2AhggBiABNgIMIAYgADYCCAsgBEEIaiEADAELAkAgC0UNAAJAIAEoAhwiAkECdEHowgFqIgAoAgAgAUYEQCAAIAQ2AgAgBA0BQbzAASAGQX4gAndxNgIADAILIAtBEEEUIAsoAhAgAUYbaiAENgIAIARFDQELIAQgCzYCGCABKAIQIgAEQCAEIAA2AhAgACAENgIYCyABKAIUIgBFDQAgBCAANgIUIAAgBDYCGAsCQCADQQ9NBEAgASADIAhqIgBBA3I2AgQgACABaiIAIAAoAgRBAXI2AgQMAQsgASAIQQNyNgIEIAkgA0EBcjYCBCADIAlqIAM2AgAgCgRAIApBA3YiAEEDdEHgwAFqIQRBzMABKAIAIQICf0EBIAB0IgAgBXFFBEBBuMABIAAgBXI2AgAgBAwBCyAEKAIICyEAIAQgAjYCCCAAIAI2AgwgAiAENgIMIAIgADYCCAtBzMABIAk2AgBBwMABIAM2AgALIAFBCGohAAsgDEEQaiQAIAALNwEBfyAAKAIEIgNBAXUgAWohASAAKAIAIQAgASACIANBAXEEfyABKAIAIABqKAIABSAACxEBAAs5ACAAIAEqApgBOAKYASAAIAEqApwBOAKcASAAIAEqAqABOAKgASAAIAEqAqQBOAKkASAAIAEQlAULMwEBfyAAKAIAIQIgACgCBCIAQQF1IAFqIgEgAEEBcQR/IAEoAgAgAmooAgAFIAILEQIACwkAIAAgARBBGgskACAARAAAAAAAAPBBYyAARAAAAAAAAAAAZnEEQCAAqw8LQQALSQEBfyMAQRBrIgMkACADIAI2AgxBhr4BIAFBrr4BQZCRAUG+CCADQQxqEHhBrr4BQYyOAUG/CCADQQxqEHgQIiADQRBqJAAgAAsUACAABEAgACAAKAIAKAIIEQIACws4AQF/IAEgACgCBCICQQF1aiEBIAAoAgAhACABIAJBAXEEfyABKAIAIABqKAIABSAACxEAABCTBQuDAQICfwF8IAAgATYCNCAAAn8jAEEQayIAJAAgABDzAiAAQQhqIABBpvwAEPICIAAQXiMAQRBrIgEkACAAKAIIQcCHASgCACABQQRqEAshBCABIAEoAgQQQSEDIAQQ9wEhAiADEMQBIAFBEGokACAAQQhqEF4gAEEQaiQAIAILNgIwIAILnAEBAX8gACABIAIgAyAFEP0BIQYgBCgCACADKAIAIAUoAgARAQAEfyADIAQQNiADKAIAIAIoAgAgBSgCABEBAEUEQCAGQQFqDwsgAiADEDYgAigCACABKAIAIAUoAgARAQBFBEAgBkECag8LIAEgAhA2IAEoAgAgACgCACAFKAIAEQEARQRAIAZBA2oPCyAAIAEQNiAGQQRqBSAGCwt4AQF/IAAgASACIAQQnQEhBSADKAIAIAIoAgAgBCgCABEBAAR/IAIgAxA2IAIoAgAgASgCACAEKAIAEQEARQRAIAVBAWoPCyABIAIQNiABKAIAIAAoAgAgBCgCABEBAEUEQCAFQQJqDwsgACABEDYgBUEDagUgBQsLvgcBBn8DQCABQQRrIQcDQCAAIQMDQAJAAkACQAJAAkACQAJAAkAgASADayIAQQJ1IgQOBgcHAAQBAgMLIAFBBGsiACgCACADKAIAIAIoAgARAQBFDQYgAyAAEDYPCyADIANBBGogA0EIaiABQQRrIAIQ/QEaDwsgAyADQQRqIANBCGogA0EMaiABQQRrIAIQ/AEaDwsgAEH7AEwEQCABIQUjAEEQayIGJAAgAyIEIANBBGogA0EIaiIDIAIiBxCdARogBEEMaiEBA0AgASAFRwRAIAEoAgAgAygCACAHKAIAEQEABEAgBiABKAIANgIMIAEhAgNAAkAgAiADIgAoAgA2AgAgAyAERgRAIAQhAAwBCyAGKAIMIAAiAkEEayIDKAIAIAcoAgARAQANAQsLIAAgBkEMaigCADYCAAsgASIDQQRqIQEMAQsLIAZBEGokAA8LIAMgBEECbUECdGohBgJ/IABBnR9OBEAgAyADIARBBG1BAnQiAGogBiAAIAZqIAcgAhD8AQwBCyADIAYgByACEJ0BCyEIIAchACADKAIAIAYoAgAgAigCABEBAEUEQANAIABBBGsiACADRgRAIANBBGohBSADKAIAIAcoAgAgAigCABEBAA0FA0AgBSAHRg0HIAMoAgAgBSgCACACKAIAEQEABEAgBSAHEDYgBUEEaiEFDAcFIAVBBGohBQwBCwALAAsgACgCACAGKAIAIAIoAgARAQBFDQALIAMgABA2IAhBAWohCAsgA0EEaiIEIABPDQEDQCAEIgVBBGohBCAFKAIAIAYoAgAgAigCABEBAA0AA0AgAEEEayIAKAIAIAYoAgAgAigCABEBAEUNAAsgACAFSQRAIAUhBAwDBSAFIAAQNiAAIAYgBSAGRhshBiAIQQFqIQgMAQsACwALIAMgA0EEaiABQQRrIAIQnQEaDAILAkAgBCAGRg0AIAYoAgAgBCgCACACKAIAEQEARQ0AIAQgBhA2IAhBAWohCAsgCEUEQCADIAQgAhD7AiEFIARBBGoiACABIAIQ+wIEQCAEIQEgAyEAIAVFDQYMAwsgBQ0ECyAEIANrIAEgBGtIBEAgAyAEIAIQ/gEgBEEEaiEADAQLIARBBGogASACEP4BIAQhASADIQAMBAsgBSAHIgBGDQADQCAFIgRBBGohBSADKAIAIAQoAgAgAigCABEBAEUNAANAIAMoAgAgAEEEayIAKAIAIAIoAgARAQANAAsgACAETQRAIAQhAwwDBSAEIAAQNgwBCwALAAsLCwsLDAAgAEGAAkEAEF8aCzAAIAAQ/AIgAEGUEjYCACAAQQA7ATwgAEGU1AA2AgAgAEFAaxBEGiAAQcgAahBEGgsHACAAQRh2CwgAIABB/wFxCwsAIABBCHZB/wFxCwsAIABBEHZB/wFxC4oEAgJ/An0gAUEgEFAEQCAAQUBrIQICQCAAKgIwQwAAAABcBEAgACoCMCIFEJoBIQQgBRCZASEFIAJBABAmIAU4AgAgAkEBECYgBDgCACACQQIQJiAEjDgCACACQQMQJiAFOAIAIAJBBBAmQQA2AgAgAkEFECZBADYCAAwBCyACEOwDCyAAIAAoAgAoAkwRBgAhBCAAQUBrIgJBBBAmIAQ4AgAgACAAKAIAKAJQEQYAIQQgAkEFECYgBDgCACAAKgI0IQQgACoCOCEFIAJBABAmIgMgAyoCACAElDgCACACQQEQJiIDIAMqAgAgBJQ4AgAgAkECECYiAyADKgIAIAWUOAIAIAJBAxAmIgIgAioCACAFlDgCAAsgAUHAABBQBEACQCAAQdgAaiECIAAoAnQiAwRAIAIgA0HYAGogAEFAaxC4AQwBCyAAQUBrIgNBABAmKgIAIQQgAkEAECYgBDgCACADQQEQJioCACEEIAJBARAmIAQ4AgAgA0ECECYqAgAhBCACQQIQJiAEOAIAIANBAxAmKgIAIQQgAkEDECYgBDgCACADQQQQJioCACEEIAJBBBAmIAQ4AgAgA0EFECYqAgAhBCACQQUQJiAEOAIACwsCQCABQYABEFBFDQAgACAAKgI8OAJwIAAoAnQiAUUNACAAIAEgASgCACgCSBEGACAAKgJwlDgCcAsLEwAgACgCFARAIAAoAhQgABBwCwsPACAAIAAoAgAoAgA2AgALEAAgACgCACABKAIAa0ECdQvFAQEDfyMAQRBrIgAkACAAIAE2AgggAEEIaiECQQQhAUEEIQMDQCADQQRPBEAgAigAAEGV08feBWwiBEEYdiAEc0GV08feBWwgAUGV08feBWxzIQEgA0EEayEDIAJBBGohAgwBCwsCQAJAAkACQCADQQFrDgMCAQADCyACLQACQRB0IAFzIQELIAItAAFBCHQgAXMhAQsgASACLQAAc0GV08feBWwhAQsgAEEQaiQAIAFBDXYgAXNBldPH3gVsIgBBD3YgAHMLIAEBfyAAQegAaiIAEC8gAUsEfyAAIAEQLigCAAVBAAsLDAAgACABEMcCQQFzCycBAX8jAEEQayIBJAAgAUEIaiAAEOgBIAEoAgghACABQRBqJAAgAAtUAQF/IwBBEGsiASQAIAAQngMgAEEIahDVASABQQA2AgwgAEEMaiABQQxqIAFBCGoQnAMgAUGAgID8AzYCBCAAQRBqIAFBBGoQnQMgAUEQaiQAIAALEQAgAEEYIAAoAgAoAgwRAQALJQAgASAEEJkBIAOUEFwgASAEEJoBIAKUEFsgASAAKgKsARCjAQsTACAAQfALNgIAIABBBGoQbyAAC28BAn8jAEEQayIBJAAgAEGU3QA2AgAgASAAQYwBaiICECo2AgggASACECs2AgADQCABQQhqIAEQLARAIAEoAggoAgAiAgRAIAIgAigCACgCBBECAAsgAUEIahAtDAELCyAAEIgBGiABQRBqJAAgAAsiACAAENoBIABCBTcCqAEgAEHYFzYCACAAQZTdADYCACAACwcAIAAQsQELCAAgAEHsAWoLQgEBfyAAQYDbADYCACAAKAI0IgEEQCABIAEoAgAoAgQRAgALIAAoAjgiAQRAIAEgASgCACgCBBECAAsgABBDGiAACwkAIAEgAhBmGgs0ACAAKAIAGiAAKAIAIAAQigFBA3RqGiAAKAIAIAAQTkEDdGoaIAAoAgAgABCKAUEDdGoaC1UBAX8gACgCBCEBA0AgASAAKAIIRwRAIAAoAhAaIAAgACgCCEEIazYCCAwBCwsgACgCAARAIAAoAhAaIAAoAgAhASAAEDIoAgAgACgCAGsaIAEQMAsLegECfyMAQRBrIgQkACAEQQA2AgwgAEEMaiAEQQxqIAMQRyABBEAgACgCEBogAUH/////AUsEQBBGAAsgAUEDdBAnIQULIAAgBTYCACAAIAUgAkEDdGoiAjYCCCAAIAI2AgQgABAyIAUgAUEDdGo2AgAgBEEQaiQAIAALlAEBA38jAEEQayICJAAgAiABNgIMAn8jAEEQayIDJAAgABApGiADQf////8BNgIMIANB/////wc2AgggA0EMaiADQQhqEL4BKAIAIQQgA0EQaiQAIAEgBE0LBEAgABCKASIAIARBAXZJBEAgAiAAQQF0NgIIIAJBCGogAkEMahBYKAIAIQQLIAJBEGokACAEDwsQdQALJAAgACABNgIAIAAgASgCBCIBNgIEIAAgASACQQN0ajYCCCAACywBAX8gABCXAiAAKAIABEAgABDaAyAAECkaIAAoAgAhASAAEIoBGiABEDALC2IBAn8gAEGg1wA2AgAgAEFAaxA+IABBNGoQPiAAQShqIgEQxgMgASgCAARAIAEQ2AMgARApGiABKAIAIQIgARCJARogAhAwCyAAQRxqEJwCIABBEGoQnAIgAEEEahCcAiAAC4UIAgh/A30jAEFAaiIGJAACQCAAQShqIAEQzwMiCS0AACILRQRAIABBEGoiACAJLQABQQFrEE0hASAAIAktAAEQTSEHIAYQRCIAIAcgARC2ASAEBEAgBkE4ahBEIgQgASAAIAIQbCAFIARBABAmKgIAIARBARAmKgIAIAUoAgAoAhQRBwALIAAgASAAIAMQbCAFIABBABAmKgIAIABBARAmKgIAIAUoAgAoAhgRBwAMAQsgC0EBayEHIAktAAIhDSAAQTRqIAEQLioCACEPAkACQCACQwAAAABbDQAgByANaiEMIABBHGohCCAPIAKUIQ4gByEBA0AgASAMTg0BAkAgDiAIIAEQTSIKKgIEIhBfBEAgASAHRw0BIA4gEJUgCioCAJQhAgwDCyABQQFqIQEMAQsLIAggAUEBayIMEE0qAgQhAiAKKgIEIRAgCCAMEE0qAgAgCioCACAOIAKTIBAgApOVEM4DIQIMAQsgByEBCwJ9QwAAgD8gA0MAAIA/Ww0AGiABIAsgDWpBAWsiCCABIAhKGyELIABBHGohCCAPIAOUIQ4DQCADIAEgC0YNARoCQCAOIAggARBNIgoqAgQiD18EQCABIAdHDQEgDiAPlSAKKgIAlAwDCyABQQFqIQEMAQsLIAggAUEBayIBEE0qAgQhAyAKKgIEIQ8gCCABEE0qAgAgCioCACAOIAOTIA8gA5OVEM4DCyEOIAZBMGohByAGIQEDQCABEERBCGoiASAHRw0ACyAAQRBqIgAgCS0AAUEBaxBNIQEgACAJLQABEE0hByAAIAktAAFBAWoQTSEIIAAgCS0AAUECahBNIQAgAkMAAAAAWwRAIAEgByAIIAAgDiAGENgBIAQEQCAFIAFBABAmKgIAIAFBARAmKgIAIAUoAgAoAhQRBwALIAUgBkEAECYqAgAgBkEBECYqAgAgBkEYaiIAQQAQJioCACAAQQEQJioCACAGQShqIgBBABAmKgIAIABBARAmKgIAIAUoAgAoAhwRCQAMAQsgASAHIAggACACIAYQ2AEgBARAIAUgBkEoaiIBQQAQJioCACABQQEQJioCACAFKAIAKAIUEQcACyAOQwAAgD9bBEAgBSAGQSBqIgFBABAmKgIAIAFBARAmKgIAIAZBEGoiAUEAECYqAgAgAUEBECYqAgAgAEEAECYqAgAgAEEBECYqAgAgBSgCACgCHBEJAAwBCyAGQShqIgEgBkEgaiAGQRBqIAAgDiACk0MAAIA/IAKTlSAGENgBIAUgBkEAECYqAgAgBkEBECYqAgAgBkEYaiIAQQAQJioCACAAQQEQJioCACABQQAQJioCACABQQEQJioCACAFKAIAKAIcEQkACyAGQUBrJAAL7QMCBn8DfQNAIABBQGsiBRChAkUEQCAFKAIAKAIAIQAMAQsLAkAgASACWw0AIABBKGoiChCLASIFQQAgBUEAShshCCAAQTRqIQcDQCAGIAhGDQEgCyAHIAYQLioCACIMkiINIAFeRQRAIAZBAWohBiANIQsMAQsLIAZBf0YNACAFQQFrIQggASALkyAMlSENIAUgBiAFIAZKGyEJIAYhBQNAAkACfSAFIAlGBEAgCCEFQwAAgD8MAQsgCyAHIAUQLioCACIMkiIBIAJgRQ0BIAIgC5MgDJULIQIgDRDcAyEBIAIQ3AMhAiAFIAZGBEAgACAGIAEgAiADIAQQngIPCyAAIAYgAUMAAIA/IAMgBBCeAiAAQRBqIQgDQCAFIAZBAWoiBkwEQCAAIAVDAAAAACACQQAgBBCeAgwECyAKIAYQzwMiBy0AACEJIAggBy0AARBNIQMgCQRAIAggBy0AAUEBahBNIQkgCCAHLQABQQJqEE0hByAEIANBABAmKgIAIANBARAmKgIAIAlBABAmKgIAIAlBARAmKgIAIAdBABAmKgIAIAdBARAmKgIAIAQoAgAoAhwRCQAFIAQgA0EAECYqAgAgA0EBECYqAgAgBCgCACgCGBEHAAsMAAsACyAFQQFqIQUgASELDAALAAsL8QMCBX8BfSMAQTBrIggkAAJAAn8jAEEQayILJAAgC0EIahBEIQwgCxBEIQogDCAAIANDq6qqPhB+IAogACADQ6uqKj8QfkEBIQkgASAMEMoDRQRAIAIgChDKAyEJCyALQRBqJAAgCQsEQCAFIAaSIQ0gCEEwaiEKIAghCQNAIAkQREEIaiIJIApHDQALIAAgASACIANDAAAAPyAIENgBIAhBKGoiASAIQSBqIAhBEGogAyAAIAggCEEYaiABIAQgBSANQwAAAD+UIgQgBxCgAiAEIAYgBxCgAiEEDAELIAAgAxDrAyIFIASSIQQgBUPNzEw9XkUNACAIIAYgBBBAIQICQCAHKAIEIAcQKSgCAEkEQCMAQRBrIgAkACAAIAdBARCbAiEBIAcQKSABKAIEIAIQyQMgASABKAIEQQhqNgIEIAEQaCAAQRBqJAAMAQsjAEEgayIBJAAgBxApIgAgAUEIaiAHIAcQTkEBahCaAiAHEE4gABCZAiIDKAIIIAIQyQMgAyADKAIIQQhqNgIIIAcQlwIgBxApIAcoAgAgBygCBCADQQRqIgAQ6gEgByAAEDYgB0EEaiADQQhqEDYgBxApIAMQMhA2IAMgAygCBDYCACAHIAcQThDHAyADEJgCIAFBIGokAAsLIAhBMGokACAECw0AIAAoAgAgACgCBEYLFgEBfyAAEE4hASAAENoDIAAgARDZAwsXACAAEKQCBEAgACgCOBB9DwsgABDhAwsKACAAKAI4QQBHCw4AIABBADoAPSAAELEBCw4AIABBADoAPCAAELEBCw4AIABBADsBPCAAELEBCxEAIABBAiAAKAIAKAIMEQEACxEAIABBDSAAKAIAKAIMEQEAC4oBAQV9IAFBABAmKgIAIQYgAUEBECYqAgAhByACQQAQJioCACEDIAJBAhAmKgIAIQQgAkEEECYqAgAhBSAAQQAQJiAFIAYgA5QgByAElJKSOAIAIAJBARAmKgIAIQMgAkEDECYqAgAhBCACQQUQJioCACEFIABBARAmIAUgBiADlCAHIASUkpI4AgALMwAgABBzIABC/////w83AjAgAEHIzQA2AgAgAEEANgJAIABCADcCOCAAQZTpADYCACAACxoAIABBuMYANgIAIABB/ABqED4gABBDGiAAC58CAg19AX8gBEEAECYqAgAhDiAEQQIQJioCACEPIARBBBAmKgIAIRAgBEEBECYqAgAhESAEQQMQJioCACESIARBBRAmKgIAIRMDQCAUQQRGRQRAIBQgAxCEBCIEBEAgDSAEskMAAH9DlSIHIAUgFCACEIQEQRhsIgRqKgIAlJIhDSAMIAcgBSAEQQRyaiIEKgIAlJIhDCAJIAcgBCoCDJSSIQkgCiAHIAQqAgiUkiEKIAsgByAEKgIElJIhCyAIIAcgBCoCEJSSIQgLIBRBAWohFAwBCwsgBkEAECYgCSARIACUIBIgAZSSIBOSIgcgC5QgDiAAlCAPIAGUkiAQkiIAIA2UkpI4AgAgBkEBECYgCCAHIAqUIAAgDJSSkjgCAAssACAAEHMgAEL/gYCAEDcCMCAAQaAQNgIAIABBvMoANgIAIABBOGoQRBogAAsRACAAQSggACgCACgCDBEBAAtsAQN/IwBBEGsiASQAIABBqMMANgIAIAEgAEEYaiICECo2AgggASACECs2AgADQCABQQhqIAEQLARAIAEoAggoAgAiAwRAIAMgAygCACgCBBECAAsgAUEIahAtDAELCyACED4gAUEQaiQAIAALDAAgACgCBEEBOgAECxkAIAAgATYCCCAAIAI2AgQgAEG8wQA2AgALHAAgACABKAIwNgIwIAAgASgCNDYCNCAAIAEQZwviBAIFfwN9IAAoAgAiAioCGCEJIAAgACoCCCIHOAIMIAAgByABkjgCCCAAIAAqAgQgCSABlCAAKAIUspSSOAIEIAIoAhAhAyAAKgIEIQEgAi0AKARAIAIoAiAhBAsgA7IhCAJ/IAItACgEQCACKAIkDAELIAIoAhQLIQUgASAIlCEBQQAhAyAAQQA2AhACQAJAAkACQAJAAkACQCAAKAIcIgJBf0YEfyAAKAIAKAIcBSACCw4DAAEDAgsgACgCFCEDAkAgASAFsiIHXkUNAEEBIQIgA0EBRw0AIAAgByAIlTgCBCAAIAEgB5MgCJU4AhAMBgsgASAEsiIHXUUgA0F/R3INASAAIAcgCJU4AgQgACAHIAGTIAiVOAIQDAQLIAUgBGshAiAAKAIUIQMCQCABIAWyIgdgRQ0AQQEhBiADQQFHDQAgACABIAeTIAiVOAIQIAAgACoCBCAIlCAEspMgAhCWBCAEt6C2IAiVOAIEDAQLIAEgBLIiB19FDQAgA0F/Rg0CC0EBIQZBACECDAMLIAAoAhQhAiAEsiEHIAWyIQkDQCAAAn0gASAJYEUgAkEBR3JFBEBBfyECIABBfzYCFCAAIAEgCZMgCJU4AhAgCSABkyAJkgwBCyABIAddQQAgAkF/RhtFBEBBASEGIAMhAgwFC0EBIQIgAEEBNgIUIAAgByABkyIBIAiVOAIQIAEgB5ILIgEgCJU4AgRBASEDDAALAAsgACAHIAGTIAiVOAIQIAAgBbcgByAAKgIEIAiUkyACEJYEmaG2IAiVOAIEQQEhBgtBASECCyAAIAI6ABggBgtEAQF9IAAgATYCACABLQAoBEAgASgCILIgASgCELKVIQILIABBfzYCHCAAQoCAgIAQNwIQIABCADcCCCAAIAI4AgQgAAsnAAJ/IAAtACgEQCAAKAIkDAELIAAoAhQLsiAAKAIQspUgABCXBJMLyAMCCX8BfSMAQRBrIgYkACAGIABBLGoiABAqNgIIIAYgABArNgIAA0AgBkEIaiAGECwEQCAGKAIIKAIAIQAjAEEQayIHJAACQCABIAAoAgQgASgCACgCUBEBACIIRQ0AIAcgAEEIaiIAECo2AgggByAAECs2AgADQCAHQQhqIAcQLEUNAUEAIQQgBygCCCgCACIKQQhqIgkQLyILIQUDQCAFQQFrIQwCQANAIAQgBU4EQCAEIQAMAgsgAiAJIAQgDGpBAXUiABAuKAIAKgIUIg1eBEAgAEEBaiEEDAELCyAAIQUgAiANXQ0BCwsgCigCBCEFAkAgAEUEQCAJQQAQLigCACIAIAggBSADIAAoAgAoAjARCwAMAQsgCSAAQQFrEC4oAgAhBCAAIAtIBEAgAiAJIAAQLigCACIAKgIUWwRAIAAgCCAFIAMgACgCACgCMBELAAwCCyAEKAIIRQRAIAQgCCAFIAMgBCgCACgCMBELAAwCCyAEIAggBSACIAAgAyAEKAIAKAI0ERUADAELIAQgCCAFIAMgBCgCACgCMBELAAsgB0EIahAtDAALAAsgB0EQaiQAIAZBCGoQLQwBBSAGQRBqJAALCwshACABIAAoAjBHBEAgACABNgIwIAAgACgCACgCOBECAAsLBwAgACoCBAs0ACAAKAIAGiAAKAIAIAAQkgFBAnRqGiAAKAIAIAAQL0ECdGoaIAAoAgAgABCSAUECdGoaCxQAIABBoDg2AgAgAEEIahC4BCAACyQBAn8jAEEQayICJAAgACABELIEIQMgAkEQaiQAIAEgACADGwsJACAAQQA2AgALCwAgASACQSgQZRoLFAAgAEH0NjYCACAAQQhqELgEIAALDQAgACgCACABQShsagsOACAAKAIIQf////8HcQsZACAAQag2NgIAIABBEGoQPiAAEOIBGiAACw0AIAAoAgAgASgCAEkLLAAgACgCABogACgCACAAEJIBQQJ0ahogACgCACAAEJIBQQJ0ahogACgCABoLCQAgACABOgALCxEAIABBOCAAKAIAKAIMEQEACw0AIAAoAgAgASgCAEYLGgAgAUGlAUYEQCAAIAIQNTYCBAsgAUGlAUYLEwAgACgCACABIAAqAgQgAhC3Ags7ACAAEOQEIABCADcCDCAAQv////8PNwIEIABBsDA2AgAgAEEANgIUIABBqMMANgIAIABBGGoQOhogAAtZAQJ/IwBBEGsiAiQAIAAQgwEEQCAAKAIAIQMgABDBAhogAxAwCyAAIAEoAgg2AgggACABKQIANwIAIAFBABDFAiACQQA6AA8gASACQQ9qEOkBIAJBEGokAAsYACAAENUEIABBpC02AgAgAEGMwQA2AgALOAEBfyMAQRBrIgMkACABQYoBRgRAIAMgAhDIASAAQQRqIAMQywIgAxBvCyADQRBqJAAgAUGKAUYLKwAgABBpIABBfzYCDCAAQgA3AgQgAEGAKjYCACAAQQA2AhAgAEHsOzYCAAsMACAAEMABGiAAEDALOgAgABDtBCAAQcQJNgIAIABB6Ag2AgAgAEEANgJ4IABBiAg2AgAgAEG4xgA2AgAgAEH8AGoQOhogAAsjACAAQez3ADYCRCAAQZD3ADYCACAAQdQAahA+IAAQQxogAAtZAQF/IAAQlQEgAEIANwIwIABBqCA2AgAgAEIANwI4IABBgICA/AM2AkAgAEHEAGoQ7gQhASAAQZD3ADYCACAB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A0UNAyAAIAMoAgQgARA7IgcQLiACNgIAA0AgAygCACICRQ0EAkAgAigCBCABEDsiBCAHRg0AIAIhBSAAIAQQLigCAEUEQCAAIAQQLiADNgIAIAQhBwwBCwNAAkAgBSIGKAIARQRAQQAhBQwBCyAAEEUgAkEIaiAGKAIAQQhqEJ8BIQggBigCACEFIAgNAQsLIAMgBTYCACAGIAAgBBAuKAIAKAIANgIAIAAgBBAuKAIAIAI2AgAMAQsgAiEDDAALAAUgACACEC5BADYCACACQQFqIQIMAQsACwALIABBABB6IAAQPUEANgIACwsoACAAEIACIABBADYCWCAAQgA3AlAgAEG0ETYCACAAQfTRADYCACAACzgAIAMoAgAhAiMAQRBrIgAkACAAIAI2AgggACgCCCgCACECIAFBADYCBCABIAI2AgAgAEEQaiQACwwAIAAgASgCABCJAgsMACAAKAIAGiABEDALCQAgACABENABCwwAIAAgASoCADgCAAtOAQJ/IwBBEGsiAiQAIAJBADYCDCAAIAJBDGoQ0AEjAEEQayIBJAAgAUEANgIMIABBBGogAUEMaiABQQhqEJwDIAFBEGokACACQRBqJAALTQEBfyMAQRBrIgEkACAAEJ4DIABBCGoQ1QEgAUEANgIMIABBDGogAUEMahDQASABQYCAgPwDNgIEIABBEGogAUEEahCdAyABQRBqJAALDgAgAC8BLEECEFpBAkYLXQAgACABIAIgACgCACgCFBEHACAAIAEgA5IiAyACIAAoAgAoAhgRBwAgACADIAIgBJIiAiAAKAIAKAIYEQcAIAAgASACIAAoAgAoAhgRBwAgACAAKAIAKAIgEQIACyoBAX8CQCABQQBIDQAgAEHcAGoiABAvIAFMDQAgACABEC4oAgAhAgsgAgu4AQEHfyMAQSBrIgckACAAECkiAwJ/IAAgABAvQQFqEEohBCAAEC8hCCMAQRBrIgUkACAFQQA2AgwgB0EIaiICQQxqIAVBDGogAxBHIAQEQCACKAIQGiAEEJYDIQYLIAIgBjYCACACIAYgCEECdGoiAzYCCCACIAM2AgQgAhAyIAYgBEECdGo2AgAgBUEQaiQAIAIoAggLIAEQSCACIAIoAghBBGo2AgggACACEEwgAhBJIAdBIGokAAsPACAAQRRqEK8BIAAQrwELEQEBfyAAKAIAIQEgABAtIAELEQAgABCfAyAAQRRqEJ8DIAAL9wIBBX8jAEEQayIBJAAgAEGc5gA2AkggAEHA5QA2AgAgASAAQdwAaiIFECo2AgggASAFECs2AgADQCABQQhqIAEQLEUEQCABIABB6ABqIgMQKjYCCCABIAMQKzYCAANAIAFBCGogARAsRQRAIAEgAEH0AGoiBBAqNgIIIAEgBBArNgIAA0AgAUEIaiABECxFBEAgACgCrAEiAgRAIAIgAigCACgCBBECAAsgACgCqAEiAgRAIAIgAigCACgCBBECAAsgAEGYAWoQPiAAQYwBahA+IABBgAFqED4gBBA+IAMQPiAFED4gAEHMAGoQrAMgABBDGiABQRBqJAAgAA8LIAEoAggoAgAiAgRAIAIgAigCACgCBBECAAsgAUEIahAtDAALAAsgASgCCCgCACIEBEAgBCAEKAIAKAIEEQIACyABQQhqEC0MAAsACyABKAIIKAIAIgMgAEYgA0VyRQRAIAMgAygCACgCBBECAAsgAUEIahAtDAALAAsuACAAQbzkADYCACAAQagCahBDGiAAQegBahBDGiAAQagBahBDGiAAEIgBGiAAC0wBA38gABDaASAAQcQdNgIAIABBvOQANgIAIABBqAFqEG4hASAAQegBahBuIQIgAEGoAmoQbiEDIAAgARBkIAAgAhBkIAAgAxBkIAALOgAgABBzIABBAToAOCAAQv////8PNwIwIABB6BA2AgAgAEHk0AA2AgAgAEE8ahA6GiAAQgA3AkggAAsnACAAEJICGiAAQYCAgPgDNgKwASAAQdwbNgIAIABB1OIANgIAIAALCQAgAEEEahA+Cy4AIABBwN8ANgIAIABB7AFqED4gAEGwAWoQlQIaIABBoAFqEKwDIAAQ9gQaIAALDwAgACAALQAAIAFyOgAAC3gBAX8gAEGwAWpBCEEBEF8aIwBBEGsiASQAIAEgAEGkAWoiABAqNgIIIAEgABArNgIAA0AgAUEIaiABECwEQCABKAIIKAIAIgAQjgIEQCAAKAJIIgAEQCAAIAAoAgAoAgQRAgALCyABQQhqEC0MAQsLIAFBEGokAAuJAQAgABDwARogAEIDNwKAASAAQbDgADYCACAAQewaNgIAIABBiAFqEDoaIABBADYCnAEgAEIANwKUASAAQfwZNgIAIABBoAFqEPcDIABBwN8ANgIAIABBsAFqEHMgAEIANwLkASAAIAA2AuABIABBgNsANgKwASAAQewBahA6GiAAQQA6APgBIAALNwAgAEGo3gA2AgAgAEH8AmoQQxogAEG8AmoQQxogAEH8AWoQQxogAEG8AWoQQxogABCIARogAAt0AQR/IAAQ2gEgAEIANwKsASAAQQE6AKgBIABB5Bg2AgAgAEIANwK0ASAAQajeADYCACAAQbwBahBuIQEgAEH8AWoQbiECIABBvAJqEG4hAyAAQfwCahBuIQQgACABEGQgACACEGQgACADEGQgACAEEGQgAAsrAQF/IAAgASgCADYCACABKAIAIQMgACABNgIIIAAgAyACQQJ0ajYCBCAAC9kBAQV/IAFBCBBQBEAgAEGMAWoQLyAAIAAoAgAoAoQBEQAARwRAAkAgACAAKAIAKAKEAREAACIEIABBjAFqIgUQLyICRg0AIAIgBE4EQCAEIQMDQCACIANGBEAgBSAEELYDDAMLIAUgAxAuKAIAIgYEQCAGIAYoAgAoAgQRAgALIANBAWohAwwACwALIAUgBBC2AwNAIAIgBEYNAUHAABAnQQBBwAAQMxBuIQMgBSACEC4gAzYCACACQQFqIQIMAAsACwsgACAAKAIAKAKIARECAAsgACABEKEBCxgBAX8gABAvIQIgACABEKAEIAAgAhDXAwurAgEFfyABIAAQLyICSwRAIwBBIGsiBCQAAkAgASACayIBIAAQKSgCACAAKAIEa0ECdU0EQCMAQRBrIgIkACACIAAgARC/ASIBKAIEIQMDQCABKAIIIANHBEAgABApGiABKAIEENUBIAEgASgCBEEEaiIDNgIEDAELCyABEGggAkEQaiQADAELIAAQKSECIARBCGogACAAEC8gAWoQSiAAEC8gAhDWASICIQMjAEEQayIFJAAgBSADQQhqIAEQswMiASgCACEGA0AgASgCBCAGRwRAIAMoAhAaIAEoAgAQ1QEgASABKAIAQQRqIgY2AgAMAQsLIAEQ1wEgBUEQaiQAIAAgAhBMIAIQSQsgBEEgaiQADwsgASACSQRAIAAgACgCACABQQJ0ahC1AwsLKwAgACoCMCAAKgI0IAAoAjgoAjQgACgCOCgCMCABIAIgACgCOBC4AxCtAgsHACAAQThqC1wBAn8jAEEQayIBJAAgACgCMCAAEHAgASAAKAIwEJQCIgIQKjYCCCABIAIQKzYCAANAIAFBCGogARAsBEAgASgCCCgCACAAEHAgAUEIahAtDAEFIAFBEGokAAsLCygAIAIgAWsiAEEBTgRAIAMoAgAgASAAEGUaIAMgAygCACAAajYCAAsLxwEBBH8jAEEQayIEJAAgARApGiMAQRBrIgIkACAAQgA3AgAgAkEANgIMIABBCGogAkEMahC9AiACQRBqJAAgARAvIgIEQCAAEL4EIAJJBEAQdQALIAAgABApIAIQsgEiAzYCACAAIAM2AgQgABApIAMgAkECdGo2AgAgAEEAEMQCIAEoAgAhAyABKAIEIQUjAEEQayIBJAAgASAAIAIQvwEhAiAAECkgAyAFIAJBBGoQugMgAhBoIAFBEGokAAsgBEEQaiQAIAALsAEAIABBqAw2AgAgAEHwCzYCACAAQQRqIAFBBGoQhAUgACABKAIQNgIQIABBuOcANgIAIAAgASgCFDYCFCAAQRhqIAFBGGoQuwMaIAAgAS8BLDsBLCAAIAEpAiQ3AiQgAEGwCzYCACAAQfAKNgIAIABB4BI2AgAgACABKQIwNwIwIABBwNsANgIAIAAgASgCODYCOCAAQfQcNgIAIAAgASoCPDgCPCAAQezjADYCACAACxsAIABBCEEAEF8aIAAoAoQBIgAEQCAAEK8DCwtqAQJ/IAAoAgQgABApKAIARwRAIAAgARBLDwsjAEEgayIDJAAgABApIgIgA0EIaiAAIAAQL0EBahBKIAAQLyACENYBIgIoAgggARBIIAIgAigCCEEEajYCCCAAIAIQTCACEEkgA0EgaiQACxwAIAAQhgIgACAAKAKEAUGgAWpBABCwATYCiAELDAAgASACKgIAOAIACwcAIAAQRBoLFgAgASACLwAAOwAAIAEgAi0AAjoAAguDAQEFfyAAEJcCIAAQKSEEIAAoAgAhBSAAKAIEIQIgAUEEaiIGIQMDQCACIAVHBEAgBCADKAIAQQhrIAJBCGsiAhCWAiADIAMoAgBBCGs2AgAMAQsLIAAgBhA2IABBBGogAUEIahA2IAAQKSABEDIQNiABIAEoAgQ2AgAgACAAEE4QxwMLegECfyMAQRBrIgQkACAEQQA2AgwgAEEMaiAEQQxqIAMQRyABBEAgACgCEBogAUH/////A0sEQBBGAAsgAUECdBAnIQULIAAgBTYCACAAIAUgAkECdGoiAjYCCCAAIAI2AgQgABAyIAUgAUECdGo2AgAgBEEQaiQAIAALKwEBfyAAKAIEIQIDQCABIAJHBEAgABApGiACQQhrIQIMAQsLIAAgATYCBAs1ACAAKAIAGiAAKAIAIAAQiQFBA2xqGiAAKAIAIAAQiwFBA2xqGiAAKAIAIAAQiQFBA2xqGgssACAAKAIAGiAAKAIAIAAQigFBA3RqGiAAKAIAIAAQigFBA3RqGiAAKAIAGgtRACAAEHMgAEIANwJEIABCgICAgICAgMA/NwI8IABCgICA/AM3AjQgAEF/NgIwIABBxA82AgAgAEHgyQA2AgAgAEHMAGoQVBogAEEANgJkIAALDAAgASACKQIANwIAC2ICAX8BfSMAQRBrIgIkACACIABBABAmKgIAIAFBABAmKgIAk4s4AgwgAiAAQQEQJioCACABQQEQJioCAJOLOAIIIAJBDGogAkEIahC8AioCACEDIAJBEGokACADQwAAgD9eCywBAX8gAEHw1gA2AgAgACgCaCIBBEAgASABKAIAKAIEEQIACyAAEJ0CGiAACwsAIABBlNgANgIAC1AAIAAQzAMgAEGg1wA2AgAgAEEEahA6GiAAQRBqEDoaIABBHGoQOhogAEEoahA6GiAAQTRqEDoaIABBQGsQOhogAEEANgJMIABB0ABqEFQaCw0AIAEgAJMgApQgAJILDQAgACgCACABQQNsagtjAQF/IwBBEGsiByQAIABBKGogB0EIakEBIABBBGoiABBOQf8BcRDSAxDRAyAAIAdBCGogASACEEAQtAEgACAHQQhqIAMgBBBAELQBIAAgB0EIaiAFIAYQQBC0ASAHQRBqJAALogUBB38gACgCBCAAECkoAgBJBEAjAEEQayICJAAgAiAANgIAIAIgACgCBCIDNgIEIAIgA0EDajYCCCAAECkgAigCBCABEMIDIAIgAigCBEEDajYCBCACEGggAkEQaiQADwsjAEEgayIHJAAgABApIggCfyAHQQhqIQICfyAAEIsBQQFqIQYjAEEQayIFJAAgBSAGNgIMAn8jAEEQayIEJAAgABApGiAEQdWq1aoFNgIMIARB/////wc2AgggBEEMaiAEQQhqEL4BKAIAIQMgBEEQaiQAIAMgBk8LBEAgABCJASIEIANBAXZJBEAgBSAEQQF0NgIIIAVBCGogBUEMahBYKAIAIQMLIAVBEGokACADDAELEHUACyEFIAAQiwEhBkEAIQMjAEEQayIEJAAgBEEANgIMIAJBDGogBEEMaiAIEEcgBQRAIAIoAhAaIAVB1arVqgVLBEAQRgALIAVBA2wQJyEDCyACIAM2AgAgAiADIAZBA2xqIgY2AgggAiAGNgIEIAIQMiADIAVBA2xqNgIAIARBEGokACACKAIICyABEMIDIAIgAigCCEEDajYCCCAAEMYDIAAQKRogAkEEaiIDIgEgASgCACAAKAIEIAAoAgAiBWsiAUF9bUEDbGoiBDYCACABQQFOBEAgBCAFIAEQZRoLIAAgAxA2IABBBGogAkEIahA2IAAQKSACEDIQNiACIAIoAgQ2AgAgABCLARogACgCABogACgCACAAEIkBQQNsahogACgCACAAEIkBQQNsahogACgCABogAigCBCEAA0AgACACKAIIRwRAIAIoAhAaIAIgAigCCEEDazYCCAwBCwsgAigCAARAIAIoAhAaIAIoAgAhACACEDIoAgAgAigCAGsaIAAQMAsgB0EgaiQACxkAIABBADoAAiAAIAI6AAEgACABOgAAIAALQAEBfyMAQRBrIgMkACAAQShqIANBCGpBACAAQQRqIgAQTkH/AXEQ0gMQ0QMgACADIAEgAhBAELQBIANBEGokAAsnAQF/IwBBEGsiAyQAIABBBGogA0EIaiABIAIQQBC0ASADQRBqJAALnwEBAn8gACgCBCAAECkoAgBHBEAjAEEQayIDJAAgAyAAQQEQvwEhAiAAECkgAigCBCABEMADIAIgAigCBEEEajYCBCACEGggA0EQaiQADwsjAEEgayIDJAAgABApIgIgA0EIaiAAIAAQL0EBahBKIAAQLyACEMQDIgIoAgggARDAAyACIAIoAghBBGo2AgggACACEEwgAhBJIANBIGokAAuJCAIOfwJ9IwBBEGsiCSQAIAkgATYCDCMAQSBrIgUkAAJAAkAgAUE0aiIKEKECDQACQCACQQAQJioCACABQdAAaiIEQQAQJioCAFwNACACQQEQJioCACAEQQEQJioCAFwNACACQQIQJioCACAEQQIQJioCAFwNACACQQMQJioCACAEQQMQJioCAFwNACACQQQQJioCACAEQQQQJioCAFwNACACQQUQJioCACAEQQUQJioCAFshAwsgA0UNACABKgJMIREMAQsgASACKQIANwJQIAEgAikCEDcCYCABIAIpAgg3AlggChDZASABQRxqIgsQogIgAUEEaiINEE4hAwJAIAMgAUEQaiIMIgQQTiIGSwRAIwBBIGsiDiQAAkAgAyAGayIGIAQQKSgCACAEKAIEa0EDdU0EQCMAQRBrIggkACAIIAQgBhCbAiIDKAIEIQYDQCADKAIIIAZHBEAgBBApGiADKAIEEMEDIAMgAygCBEEIaiIGNgIEDAELCyADEGggCEEQaiQADAELIAQQKSEDIA5BCGogBCAEEE4gBmoQmgIgBBBOIAMQmQIiDyEIIwBBEGsiAyQAIAMgCCgCCDYCACAIKAIIIRAgAyAIQQhqNgIIIAMgECAGQQN0ajYCBCADKAIAIQYDQCADKAIEIAZHBEAgCCgCEBogAygCABDBAyADIAMoAgBBCGoiBjYCAAwBCwsgAxDXASADQRBqJAAgBCAPEMMDIA8QmAILIA5BIGokAAwBCyADIAZJBEAgBCgCACADQQN0aiEDIAQQTiEGIAQgAxDFAyAEIAYQ2QMLCyANEE4hBANAIAQgB0YEQCAMQQAQTSEHIAUgAUEoaiICECo2AhggBSACECs2AhBBASECA0AgBUEYaiAFQRBqECwEQAJ/IAUoAhgiBC0AAEUEQCAFIAcgDCACEE0iBxDrAzgCDCAKIAVBDGoQ1QMgBSoCDCESIAJBAWoMAQsgBCALEE4iA0EBajoAACAFIAcgB0EIaiAHQRBqIAdBGGoiB0MAAAAAQwAAAABDAACAPyALEKACOAIMIAogBUEMahDVAyAFKgIMIRIgBCALEE4gA2s6AAIgAkEDagshAiARIBKSIREgBSAFKAIYQQNqNgIYDAEFIAEgETgCTAsLBSAMIAcQTSANIAcQTSACEKoCIAdBAWohBwwBCwsLIAVBIGokACAAIBEgACoCTJI4AkwgCUEMaiECAkAgAEFAayIAKAIEIAAQKSgCAEkEQCAAIAIQSwwBCyMAQSBrIgUkACAAECkiASAFQQhqIAAgABAvQQFqEEogABAvIAEQxAMiASgCCCACEEggASABKAIIQQRqNgIIIAAgARBMIAEQSSAFQSBqJAALIAlBEGokAAsrACAAKAIAGiAAKAIAIAAQkgFBAnRqGiAAKAIAGiAAKAIAIAAQL0ECdGoaCzIBAn8gACgCACECIAAoAgQhAQNAIAEgAkcEQCAAECkaIAFBA2shAQwBCwsgACACNgIECysAIAAoAgAaIAAoAgAgABCKAUEDdGoaIAAoAgAaIAAoAgAgABBOQQN0ahoLDAAgACAAKAIAEMUDC2UBAX8gAEEANgJMIABBHGoQogIgAEEEahCiAiAAQShqIgEQiwEaIAEQ2AMgASgCABogASgCACABEIkBQQNsahogASgCABogASgCACABEIsBQQNsahogAEE0ahDZASAAQUBrENkBCyMBAX0CQCAAQwAAAABdDQBDAACAPyIBIABdDQAgACEBCyABCzcAIABB6NQANgIAIABByANqEEMaIABB6AJqEEMaIABBiAJqEEMaIABBqAFqEEMaIAAQiAEaIAALRAAgACABKgIwOAIwIAAgASoCNDgCNCAAIAEqAjg4AjggACABKgI8OAI8IAAgASoCQDgCQCAAIAEqAkQ4AkQgACABEGcLYAEEfyAAENoBIABB6BQ2AgAgAEHo1AA2AgAgAEGoAWoQqwEhASAAQYgCahCrASECIABB6AJqEKsBIQMgAEHIA2oQqwEhBCAAIAEQZCAAIAIQZCAAIAMQZCAAIAQQZCAACw4AIAAQsQEgAEEAOwE8CyUAIAAtAD1FBEAgACAAKAIAKAJIEQIAIABBAToAPQsgAEHIAGoLVAAgABCVASAAQgA3AkAgAEKAgICAgICAwD83AjggAEKAgID8AzcCMCAAQewONgIAIABBxMgANgIAIABByABqEFQaIABB4ABqEDoaIABBADYCbCAACyQAIAAtADxFBEAgACAAKAIAKAJEEQIAIABBAToAPAsgAEFAawsIACAAQdAAagtPAQF/IwBBEGsiASQAIABBQGsgAUEIaiAAKgIwIAAqAjQQQCABIAAqAlAQmQEgACoCVIyUIAAqAlAQmgEgACoCVIyUEEAQtwEgAUEQaiQACxkAIABB5NAANgIAIABBPGoQPiAAEEMaIAALCwAgACgChAFBAXELCAAgAEGwAWoLEQAgAEEDIAAoAgAoAgwRAQALMAEBfSABQQAQJioCACECIABBABAmIAI4AgAgAUEBECYqAgAhAiAAQQEQJiACOAIACzYBAX0gAUEAECYqAgAgAEEAECYqAgCTIgIgApQgAUEBECYqAgAgAEEBECYqAgCTIgIg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qwQDAX8EfgJ8AnwgALshBwJAIAG3Igi9IgVCAYYiBFAgBUL///////////8Ag0KAgICAgICA+P8AVnJFBEAgB70iBkI0iKdB/w9xIgJB/w9HDQELIAcgCKIiCCAIowwBCwJ+AkAgBCAGQgGGIgNUBEAgBUI0iKdB/w9xIQEgAkUEQCAGQgyGIgNCAFMEQEEAIQIMAwtBfyECA0AgA0IBhiIDQgBTDQMgAkEBayECDAALAAsgBkL/////////B4NCgICAgICAgAiEDAILIAdEAAAAAAAAAACiIAcgAyAEURsMAgsgBkEBIAJrrYYLIQMCfgJAIAFFBEAgBUIMhiIEQgBTBEBBACEBDAILQX8hAQNAIARCAYYiBEIAUw0CIAFBAWshAQwACwALIAVC/////////weDQoCAgICAgIAIhAwBCyAFQQEgAWuthgshBSABIAJIBEADQAJAIAMgBX0iBEIAUw0AIAQiA0IAUg0AIAdEAAAAAAAAAACiDAMLIANCAYYhAyACQQFrIgIgAUoNAAsgASECCwJAIAMgBX0iBEIAUw0AIAQiA0IAUg0AIAdEAAAAAAAAAACiDAELAkAgA0L/////////B1YEQCADIQQMAQsDQCACQQFrIQIgA0KAgICAgICABFQhASADQgGGIgQhAyABDQALCyAGQoCAgICAgICAgH+DIARCgICAgICAgAh9IAKtQjSGhCAEQQEgAmutiCACQQFOG4S/CwsdACAALQAoBH0gACgCILIFQwAAAAALIAAoAhCylQtxAQN/IwBBEGsiASQAIABB7D42AgAgASAAQSxqIgIQKjYCCCABIAIQKzYCAANAIAFBCGogARAsBEAgASgCCCgCACIDBEAgAyADKAIAKAIEEQIACyABQQhqEC0MAQsLIAIQPiAAEMABGiABQRBqJAAgAAsaACABQTkQUSIBRQRAQQEPCyABIAAQ8ANBAAswACAAIAEqAjA4AjAgACABKgI0OAI0IAAgASoCODgCOCAAIAEqAjw4AjwgACABEGcLIwAgASAAKAKAAUcEQCAAIAE2AoABIAAgACgCACgCXBECAAsLIQAgASAAKAIkRwRAIAAgATYCJCAAIAAoAgAoAjwRAgALCyEAIAEgACgCDEcEQCAAIAE2AgwgACAAKAIAKAIsEQIACwshACABIAAoAghHBEAgACABNgII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CBDkASABkyAFlZMhBCACQQFqIQIMAAsACyAHQwAAAABbDQAgBUPNzMw9kiEHQQAhAgNAIAUgByAFk0MAAAA/lJIiBCAGIAgQ5AEgAZMiCYshCiACQQhLDQEgBSAEIAlDAAAAAF4iAxshBSAEIAcgAxshByACQQFqIQIgCkOVv9YzXg0ACwsgBAsgACoCCCAAKgIQEOQBC0IBAX0gAUMAAEBAlCIDIAJDAABAQJQiAiABQwAAwMCUkiIBIAGSIACUIANDAACAPyACk5JDAABAQJQgAJQgAJSSkgsMACAAELACGiAAEDALZgEBfyMAQRBrIgIkACACIABBCGoiABAqNgIIIAIgABArNgIAA0ACQAJ/QQAgAkEIaiACECxFDQAaIAIoAggiACgCACABRw0BIAAQPQshACACQRBqJAAgAA8LIAJBCGoQvQEMAAsACw0AIAAqAgAgASoCAF0LVQEBfyAAKAIEIQEDQCABIAAoAghHBEAgACgCEBogACAAKAIIQShrNgIIDAELCyAAKAIABEAgACgCEBogACgCACEBIAAQMigCACAAKAIAaxogARAwCwueAQEEfyAAELcEIAAQKRogAUEEaiIDIgIgAigCACAAKAIEIAAoAgAiBGsiAkFYbUEobGoiBTYCACACQQFOBEAgBSAEIAIQZRoLIAAgAxA2IABBBGogAUEIahA2IAAQKSABEDIQNiABIAEoAgQ2AgAgABCCARogACgCABogACgCACAAEKUBQShsahogACgCACAAEKUBQShsahogACgCABoLkwEBA38jAEEQayICJAAgAiABNgIMAn8jAEEQayIDJAAgABApGiADQebMmTM2AgwgA0H/////BzYCCCADQQxqIANBCGoQvgEoAgAhBCADQRBqJAAgASAETQsEQCAAEKUBIgAgBEEBdkkEQCACIABBAXQ2AgggAkEIaiACQQxqEFgoAgAhBAsgAkEQaiQAIAQPCxB1AAtUAQJ/IwBBEGsiAyQAIAMgADYCACADIAAoAgQiAjYCBCADIAJBKGo2AgggAyECIAAQKSACKAIEIAEQvgIgAiACKAIEQShqNgIEIAIQaCADQRBqJAALNQAgACgCABogACgCACAAEKUBQShsahogACgCACAAEIIBQShsahogACgCACAAEKUBQShsahoLVQECfyAAELcEIAAoAgAEQCAAKAIAIQIgACgCBCEBA0AgASACRwRAIAAQKRogAUEoayEBDAELCyAAIAI2AgQgABApGiAAKAIAIQEgABClARogARAwCwsHACAALQAUC1wBAX8jAEEQayIDJAAgAyAAQQhqIgAQKjYCCCADIAAQKzYCAANAIANBCGogAxAsBEAgAygCCCIAQQRqIAEgACoCJCAClBDJAiADQQhqEL0BDAEFIANBEGokAAsLCwkAIAAgATgCJAsHACAAKgIMCyAAIAAgATYCACAAQQRqIAEoAggQtQIaIABBADYCJCAAC0MBAX8jAEEQayIBJAAgABApGiABQf////8DNgIMIAFB/////wc2AgggAUEMaiABQQhqEL4BKAIAIQAgAUEQaiQAIAALDQAgAC8BACABLwEARgsJACABIAIQvwQLoAEBBX8jAEEQayIDJAAgABAyGiABLwEAIQQCQAJAIAAQVSIFRQ0AIAAgBCAFEDsiBhAuKAIAIgJFDQADQCACKAIAIgJFDQEgBCACKAIERwRAIAIoAgQgBRA7IAZHDQILIAQgAigCBEcNACAAEEUgAkEIaiABEMAERQ0ACyADQQhqIAIQQSgCACECDAELIAMQkwEiAjYCCAsgA0EQaiQAIAILCQAgACABEMcCCykBAX8jAEEQayICJAAgAkEIaiAAIAEQwQQQQSgCACEAIAJBEGokACAACwoAIABB6ABqEC8L+AIBC38gAUE8EFEiAkUEQEEBDwsCfyACKAIEEPEDIgsEQCACKAIEIQIjAEEQayIFJAAgBSAANgIMIAVBDGohCQJAIAJBEGoiAygCBCADECkoAgBHBEAgAyAJEEsMAQsjAEEgayIKJAAgAxApIgYCfyADIAMQL0EBahBKIQQgAxAvIQwjAEEQayIHJAAgB0EANgIMIApBCGoiAkEMaiAHQQxqIAYQRyAEBEAgAigCEBogBEH/////A0sEQBBGAAsgBEECdBAnIQgLIAIgCDYCACACIAggDEECdGoiBjYCCCACIAY2AgQgAhAyIAggBEECdGo2AgAgB0EQaiQAIAIoAggLIAkQSCACIAIoAghBBGo2AgggAyACEEwgAhBJIApBIGokAAsgBUEQaiQAC0ECIAtFDQAaQQEgAUEBEFEiAUUNABogASgCBBDEBCECAkAgACgCBEEASA0AIAIgACgCBE0NACAAIAEoAgQgACgCBBCKAjYCCAtBAAsLBwAgAC0AKAsaACAAEMkEIABBkDM2AgAgAEGAxgA2AgAgAAshACAAEMoEIABBADYCDCAAQdAyNgIAIABBwMUANgIAIAALHgAgABBpIABBfzYCBCAAQaAyNgIAIABBiMUANgIACx4AIAAQyQQgAEEANgIIIABB5DE2AgAgAEGoMTYCAAsEAEEBCxoAIAFBmwFGBEAgACACEDU2AgQLIAFBmwFGCyAAIAFBnAFGBEAgACACEDU2AghBAQ8LIAAgASACEMwECxMAIAAgASgCCDYCCCAAIAEQ7gELGgAgABDKBCAAQewwNgIAIABBzMQANgIAIAALVgACQAJAAkACQAJAIAFBlwFrDgoAAQQEBAQEAgQDBAsgACACEDU2AgRBAQ8LIAAgAhA1NgIIQQEPCyAAIAIQNTYCDEEBDwsgACACEDU2AhBBAQ8LQQALGQAgABDMAiAAQdAvNgIAIABBgDA2AgAgAAsgACAAEMwCIABBADYCECAAQeguNgIAIABBnC82AgAgAAswACAAENUEIABBuC42AgAgAEG0wgA2AgAgAEEQahA6GiAAQQA2AiQgAEIANwIcIAALEwAgACABKgJ4OAJ4IAAgARCaBAshACAAEGkgAEGELjYCACAAQQRqQawuEJQBIABB1C02AgALIAAgABDMAiAAQQA6ABAgAEG8LDYCACAAQfAsNgIAIAALKwAgABDvARogAEGMLDYCACAAQZjAADYCACAAQRBqEDoaIABBHGoQOhogAAtHACAAEO8BGiAAQQA6ACggAEJ/NwIgIABCgICA/AM3AhggAEK8gICAwAc3AhAgAEHAKzYCACAAQew+NgIAIABBLGoQOhogAAsgACAAEM4CIABBfzYCGCAAQfwqNgIAIABBtD02AgAgAAsgACAAEM4CIABBADYCGCAAQbgqNgIAIABB8Dw2AgAgAAsgACAAIAEoAgQ2AgQgACABKAIINgIIIAAgASgCDDYCDAsTACAAIAEoAhg2AhggACABENsECyAAIAAQzgIgAEEANgIYIABBvCk2AgAgAEGsPDYCACAACycAIAAQaSAAQQA2AgQgAEGMKTYCACAAQfg6NgIAIABBCGoQOhogAAsnACAAEGkgAEEANgIEIABB3Cg2AgAgAEGEOjYCACAAQQhqEDoaIAALGgAgABCnARogAEH8JzYCACAAQawoNgIAIAALGgAgABCnARogAEGcJzYCACAAQcwnNgIAIAALMgAgABBpIABC4fXR+IOAgMA/NwIMIABCvZTc9gM3AgQgAEHgJjYCACAAQcg5NgIAIAALGgAgABCnARogAEGAJjYCACAAQbAmNgIAIAALFgAgABBpIABB1CU2AgAgAEGoJTYCAAsEAEEACygAIAAQpwEaIABBfzYCECAAQcgkNgIAIABBADYCFCAAQcgzNgIAIAALNgEBfyMAQRBrIgMkACABQTdGBEAgAyACEMgBIABBBGogAxDLAiADEG8LIANBEGokACABQTdGCzoAIAAQ8gQgAEEBOgBEIABBADYCQCAAQoCAgPwDNwI4IABBtCI2AgAgAEEANgJIIABByPoANgIAIAALEgAgACABKAIwNgIwIAAgARBnCzgBAX8gABBzIABB9OjRezYCMCAAQfAhNgIAIABBNGoQ7gQhASAAQfT5ADYCACABQbz6ADYCACAACwwAIAAQ0QIaIAAQMAssACAAENICGiAAQeQhNgJEIABBiCE2AgAgAEGY+QA2AkQgAEG8+AA2AgAgAAtOACAAEJUBIABCgICA/IOAgMA/NwI4IABCgICAgICAgMA/NwIwIABBoAo2AgAgAEGY9QA2AgAgAEFAaxBUGiAAQdgAahBUGiAAQgA3AnALHgAgAEEANgIMIABCgICA/AM3AgQgAEH8IDYCACAACzoAIAAgASoCMDgCMCAAIAEqAjQ4AjQgACABKgI4OAI4IAAgASoCPDgCPCAAIAEqAkA4AkAgACABEGcLJAAgABBzIABC/////w83AjAgAEHgHzYCACAAQcj2ADYCACAACy8BAX8jAEEQayIBJAAgAEIANwIAIAFBADYCDCAAQQhqIAFBDGoQvQIgAUEQaiQACyYAIAAQlQEgAEEBOgAuIABBnB82AgAgAEIANwIwIABBpPkANgIACxIAIAAgAS0ALjoALiAAIAEQZwshACAAEPIEIABBADYCOCAAQcgeNgIAIABB9PUANgIAIAALDAAgABCRAhogABAwCxkAIABB7Bo2AgAgAEGIAWoQPiAAEEMaIAALOgACQAJAAkAgAUH9AGsOAgABAgsgACACEDU2AqgBQQEPCyAAIAIQMbY4AqwBQQEPCyAAIAEgAhDhAgshACAAIAEoAqgBNgKoASAAIAEq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AigCACIBQQRqNgIAIAAgATMBADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATAAADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATEAADcDAA8LIAIgAigCAEEHakF4cSIBQQhqNgIAIAAgASsDADkDAA8LIAAgAiADEQMACwtSAQN/AkAgACgCACwAABDBAUUEQAwBCwNAIAAoAgAiAiwAACEDIAAgAkEBajYCACABIANqQTBrIQEgAiwAARDBAUUNASABQQpsIQEMAAsACyABC9YCAQN/IwBB0AFrIgUkACAFIAI2AswBQQAhAiAFQaABakEAQSgQMxogBSAFKALMATYCyAECQEEAIAEgBUHIAWogBUHQAGogBUGgAWogAyAEEOMCQQBIDQAgACgCTEEATiECIAAoAgAhBiAALABKQQBMBEAgACAGQV9xNgIACyAGQSBxIQcCfyAAKAIwBEAgACABIAVByAFqIAVB0ABqIAVBoAFqIAMgBBDjAgwBCyAAQdAANgIwIAAgBUHQAGo2AhAgACAFNgIcIAAgBTYCFCAAKAIsIQYgACAFNgIsIAAgASAFQcgBaiAFQdAAaiAFQaABaiADIAQQ4wIgBkUNABogAEEAQQAgACgCJBEEABogAEEANgIwIAAgBjYCLCAAQQA2AhwgAEEANgIQIAAoAhQaIABBADYCFEEACxogACAAKAIAIAdyNgIAIAJFDQALIAVB0AFqJAALfwIBfwF+IAC9IgNCNIinQf8PcSICQf8PRwR8IAJFBEAgASAARAAAAAAAAAAAYQR/QQAFIABEAAAAAAAA8EOiIAEQiQUhACABKAIAQUBqCzYCACAADwsgASACQf4HazYCACADQv////////+HgH+DQoCAgICAgIDwP4S/BSAACwuVDwITfwJ8IwBBEGsiCiQAAkAgALwiEEH/////B3EiA0Han6TuBE0EQCABIAC7IhUgFUSDyMltMF/kP6JEAAAAAAAAOEOgRAAAAAAAADjDoCIVRAAAAFD7Ifm/oqAgFURjYhphtBBRvqKgOQMAIBWZRAAAAAAAAOBBYwRAIBWqIQMMAgtBgICAgHghAwwBCyADQYCAgPwHTwRAIAEgACAAk7s5AwBBACEDDAELIAogAyADQRd2QZYBayIDQRd0a767OQMIIwBBsARrIgUkACADIANBA2tBGG0iAkEAIAJBAEobIg1BaGxqIQZBwJoBKAIAIghBAE4EQCAIQQFqIQMgDSECA0AgBUHAAmogBEEDdGogAkEASAR8RAAAAAAAAAAABSACQQJ0QdCaAWooAgC3CzkDACACQQFqIQIgBEEBaiIEIANHDQALCyAKQQhqIQ4gBkEYayEHIAhBACAIQQBKGyEEQQAhAwNARAAAAAAAAAAAIRVBACECA0AgFSAOIAJBA3RqKwMAIAVBwAJqIAMgAmtBA3RqKwMAoqAhFSACQQFqIgJBAUcNAAsgBSADQQN0aiAVOQMAIAMgBEYhAiADQQFqIQMgAkUNAAtBLyAGayERQTAgBmshDyAGQRlrIRIgCCEDAkADQCAFIANBA3RqKwMAIRVBACECIAMhBCADQQFIIgxFBEADQCAFQeADaiACQQJ0agJ/IBUCfyAVRAAAAAAAAHA+oiIVmUQAAAAAAADgQWMEQCAVqgwBC0GAgICAeAu3IhVEAAAAAAAAcMGioCIWmUQAAAAAAADgQWMEQCAWqgwBC0GAgICAeAs2AgAgBSAEQQFrIgRBA3RqKwMAIBWgIRUgAkEBaiICIANHDQALCwJ/IBUgBxDxASIVIBVEAAAAAAAAwD+inEQAAAAAAAAgwKKgIhWZRAAAAAAAAOBBYwRAIBWqDAELQYCAgIB4CyEJIBUgCbehIRUCQAJAAkACfyAHQQFIIhNFBEAgA0ECdCAFaiICIAIoAtwDIgIgAiAPdSICIA90ayIENgLcAyACIAlqIQkgBCARdQwBCyAHDQEgA0ECdCAFaigC3ANBF3ULIgtBAUgNAgwBC0ECIQsgFUQAAAAAAADgP2YNAEEAIQsMAQsCQCAMBEBBACEEDAELQQAhAkEBIQwDQCAFQeADaiACQQJ0aiIUKAIAIQQCfyAUIAwEf0EAIARFDQEaQYCAgAggBGsFQf///wcgBGsLNgIAQQELIQQgAkEBaiICIANGDQEgBEUhDAwACwALAkAgEw0AAkACQCASDgIAAQILIANBAnQgBWoiAiACKALcA0H///8DcTYC3AMMAQsgA0ECdCAFaiICIAIoAtwDQf///wFxNgLcAwsgCUEBaiEJIAtBAkcNAEQAAAAAAADwPyAVoSEVQQIhCyAERQ0AIBVEAAAAAAAA8D8gBxDxAaEhFQsgFUQAAAAAAAAAAGEEQEEAIQQCQCADIgIgCEwNAANAIAVB4ANqIAJBAWsiAkECdGooAgAgBHIhBCACIAhKDQALIARFDQAgByEGA0AgBkEYayEGIAVB4ANqIANBAWsiA0ECdGooAgBFDQALDAMLQQEhAgNAIAIiBEEBaiECIAVB4ANqIAggBGtBAnRqKAIARQ0ACyADIARqIQQDQCAFQcACaiADQQFqIglBA3RqIANBAWoiAyANakECdEHQmgFqKAIAtzkDAEEAIQJEAAAAAAAAAAAhFQNAIBUgDiACQQN0aisDACAFQcACaiAJIAJrQQN0aisDAKKgIRUgAkEBaiICQQFHDQALIAUgA0EDdGogFTkDACADIARIDQALIAQhAwwBCwsCQCAVQRggBmsQ8QEiFUQAAAAAAABwQWYEQCAFQeADaiADQQJ0agJ/IBUCfyAVRAAAAAAAAHA+oiIVmUQAAAAAAADgQWMEQCAVqgwBC0GAgICAeAsiArdEAAAAAAAAcMGioCIVmUQAAAAAAADgQWMEQCAVqgwBC0GAgICAeAs2AgAgA0EBaiEDDAELAn8gFZlEAAAAAAAA4EFjBEAgFaoMAQtBgICAgHgLIQIgByEGCyAFQeADaiADQQJ0aiACNgIAC0QAAAAAAADwPyAGEPEBIRUCQCADQX9MDQAgAyECA0AgBSACQQN0aiAVIAVB4ANqIAJBAnRqKAIAt6I5AwAgFUQAAAAAAABwPqIhFSACQQBKIQYgAkEBayECIAYNAAsgA0F/TA0AIAMhAgNAIAMgAiIGayEHRAAAAAAAAAAAIRVBACECA0ACQCAVIAJBA3RBoLABaisDACAFIAIgBmpBA3RqKwMAoqAhFSACIAhODQAgAiAHSSEEIAJBAWohAiAEDQELCyAFQaABaiAHQQN0aiAVOQMAIAZBAWshAiAGQQBKDQALC0QAAAAAAAAAACEVIANBAE4EQANAIBUgBUGgAWogA0EDdGorAwCgIRUgA0EASiECIANBAWshAyACDQALCyAKIBWaIBUgCxs5AwAgBUGwBGokACAJQQdxIQMgCisDACEVIBBBf0wEQCABIBWaOQMAQQAgA2shAwwBCyABIBU5AwALIApBEGokACADCygBAX8jAEEQayIBJAAgASAANgIMQeC/AUEFIAEoAgwQBiABQRBqJAALKAEBfyMAQRBrIgEkACABIAA2AgxB378BQQQgASgCDBAGIAFBEGokAAsoAQF/IwBBEGsiASQAIAEgADYCDEHevwFBAyABKAIMEAYgAUEQaiQACygBAX8jAEEQayIBJAAgASAANgIMQd2/AUECIAEoAgwQBiABQRBqJAALKAEBfyMAQRBrIgEkACABIAA2AgxB8L0BQQEgASgCDBAGIAFBEGokAAsoAQF/IwBBEGsiASQAIAEgADYCDEHcvwFBACABKAIMEAYgAUEQaiQAC9MGAQF/Qfy9AUGllAEQG0GkvwFBqpQBQQFBAUEAEBojAEEQayIAJAAgAEGvlAE2AgxB1r8BIAAoAgxBAUGAf0H/ABAHIABBEGokACMAQRBrIgAkACAAQbSUATYCDEHXvwEgACgCDEEBQYB/Qf8AEAcgAEEQaiQAIwBBEGsiACQAIABBwJQBNgIMQdi/ASAAKAIMQQFBAEH/ARAHIABBEGokACMAQRBrIgAkACAAQc6UATYCDEHZvwEgACgCDEECQYCAfkH//wEQByAAQRBqJAAjAEEQayIAJAAgAEHUlAE2AgxBxb8BIAAoAgxBAkEAQf//AxAHIABBEGokACMAQRBrIgAkACAAQeOUATYCDEG5vwEgACgCDEEEQYCAgIB4Qf////8HEAcgAEEQaiQAIwBBEGsiACQAIABB55QBNgIMQe+9ASAAKAIMQQRBAEF/EAcgAEEQaiQAIwBBEGsiACQAIABB9JQBNgIMQdq/ASAAKAIMQQRBgICAgHhB/////wcQByAAQRBqJAAjAEEQayIAJAAgAEH5lAE2AgxBob8BIAAoAgxBBEEAQX8QByAAQRBqJAAjAEEQayIAJAAgAEGHlQE2AgxBrr4BIAAoAgxBBBAPIABBEGokACMAQRBrIgAkACAAQY2VATYCDEGlvwEgACgCDEEIEA8gAEEQaiQAQai+AUGUlQEQEEHSvwFBoJUBEBBB078BQQRBwZUBEAxB1L8BQQJBzpUBEAxB1b8BQQRB3ZUBEAxB7L0BQeyVARAZIwBBEGsiACQAIABB/JUBNgIMQdu/AUEAIAAoAgwQBiAAQRBqJABBmpYBEJAFQb+WARCPBUHmlgEQjgVBhZcBEI0FQa2XARCMBUHKlwEQiwUjAEEQayIAJAAgAEHwlwE2AgxB4b8BQQQgACgCDBAGIABBEGokACMAQRBrIgAkACAAQY6YATYCDEHivwFBBSAAKAIMEAYgAEEQaiQAQbWYARCQBUHVmAEQjwVB9pgBEI4FQZeZARCNBUG5mQEQjAVB2pkBEIsFIwBBEGsiACQAIABB/JkBNgIMQeO/AUEGIAAoAgwQBiAAQRBqJAAjAEEQayIAJAAgAEGbmgE2AgxB5L8BQQcgACgCDBAGIABBEGokAAspAQF/IwBBEGsiAiQAIAIgATYCDCACQQxqIAARAAAhACACQRBqJAAgAAssAQF/IAAQkAFBBGoQ8gEiASAAEJABNgIAIAFBBGogABBxIAAQkAEQZRogAQsVACAAIAEoAoABNgKAASAAIAEQ1wILJQAgAEHQjwE2AgAgAC0ABARAIABBxIoBEIYBCyAAQQhqEF4gAAu4AQEDfyAAKAIIIQAjAEEgayIGJAACfwJAQZC/AS0AAEEBcQ0AQZC/ARBTRQ0AIwBBEGsiByQAQQVB8JABEAMhCCAHQRBqJABBjL8BIAg2AgBBkL8BEFILQYy/ASgCAAsgACABAn8jAEEQayIAJAAgACAGNgIMIABBDGogAioCABBdIABBDGogAyoCABBdIABBDGogBCoCABBdIABBDGogBSoCABBdIABBEGokACAGCxAEIAZBIGokAAs5AQF/IAAoAgQiBEEBdSABaiEBIAAoAgAhACABIAIgAyAEQQFxBH8gASgCACAAaigCAAUgAAsRCgALoAEBA38gACgCCCEAIwBBEGsiBCQAAn8CQEG8vgEtAABBAXENAEG8vgEQU0UNACMAQRBrIgUkAEEDQbCNARADIQYgBUEQaiQAQbi+ASAGNgIAQby+ARBSC0G4vgEoAgALIAAgAQJ/IwBBEGsiACQAIAAgBDYCDCAAQQxqIAIqAgAQXSAAQQxqIAMqAgAQXSAAQRBqJAAgBAsQBCAEQRBqJAALJQAgAEHIjAE2AgAgAC0ABARAIABBxIoBEIYBCyAAQQhqEF4gAAsRACAAIAFBBGogASgCABCBBAsLAEEYECcgABDuAwslACAAQYSKATYCACAALQAEBEAgAEHEigEQhgELIABBCGoQXiAACzkBAX8gACgCBCIEQQF1IAFqIQEgACgCACEAIAEgAiADIARBAXEEfyABKAIAIABqKAIABSAACxEFAAsOACAAKAIAEBwgACgCAAsdAQF/IwBBEGsiASQAIAEgADYCDCABQRBqJAAgAAshACAAEIACIABCADcCUCAAQYwUNgIAIABBuNMANgIAIAALPAEBfyMAQRBrIgIkACACIAEpAgA3AwhBv78BIABBAkHIkwFBoIgBQa8IIAJBCGoQOEEAEAAgAkEQaiQACzwBAX8jAEEQayICJAAgAiABKQIANwMIQaK/ASAAQQJBpJIBQaCIAUGcCCACQQhqEDhBABAAIAJBEGokAAsHACAAKgIACzwBAX8jAEEQayICJAAgAiABKQIANwMIQda+ASAAQQZBwI4BQdiOAUGJCCACQQhqEDhBARAAIAJBEGokAAsUACAABEAgACAAKAIAKAIsEQIACwsOAEGtvgEgASACEAkgAAsWACAAIAEQcUGrvgEgAigCABANEPYBC0UBAn9BDBAnIgIiAUEANgIAIAEQzAMgAUH8jAE2AgAgAUEEahC5ASABQciMATYCACABQQhqIAAQ5gIgAkGUjAE2AgAgAgsGAEGrvgELBgBBqb4BCxYAIAAgARBxQYG+ASACKAIAEA0Q9gELVAEBfyMAQSBrIgMkACADQQhqIAEQmgUgAyACEOkCIANBGGogA0EIaiADIAARBQAgA0EYahCeBSEAIANBGGoQXiADEF4gA0EIahBvIANBIGokACAAC0ABAn9BDBAnIgIiAUEANgIAIAFBqIoBNgIAIAFBBGoQuQEgAUGEigE2AgAgAUEIaiAAEOYCIAJB4IkBNgIAIAILHwAgAUEKayIAQf//A3FBBE0EQEETIAB2QQFxDwtBAAsGAEGBvgELggUCDH0BfyMAQeAAayIRJAAgBEECECYqAgAgBEEAECYqAgCTIQYgBEEDECYqAgAgBEEBECYqAgCTIQcgBEEAECYqAgAhDSACKgIAIQ4gBEEBECYqAgAhD0MAAIA/IQUgAioCBCEQQwAAgD8hCAJAAn0CQAJAAkACQAJAAkAgAQ4HAAECBAMHBQcLIAMQjQEgBpUhCCADEIwBIAeVIQUMBgsgAxCNASAGlSADEIwBIAeVEO8DDAQLIAMQjQEgBpUiBSAFIAMQjAEgB5UiCJcgCLxB/////wdxQYCAgPwHSxsgCCAFvEH/////B3FBgICA/AdNGwwDCyADEIwBIAeVDAILIAMQjQEgBpUMAQsgAxCNASAGlSADEIwBIAeVEO8DIgVDAACAPyAFQwAAgD9dGwsiBSEICyARQcgAahBUIQEgA0EAECYqAgAhCSADEI0BIQogAioCACELIAMQjQEhDCABQQQQJiAKu0QAAAAAAADgP6IgCbugIAsgDJS7RAAAAAAAAOA/oqC2OAIAIANBARAmKgIAIQkgAxCMASEKIAIqAgQhCyADEIwBIQwgAUEFECYgCrtEAAAAAAAA4D+iIAm7oCALIAyUu0QAAAAAAADgP6KgtjgCACARQTBqEFQiA0EAECYgCDgCACADQQMQJiAFOAIAIBFBGGoQVCIEQQQQJiANjLsgBrtEAAAAAAAA4D+ioSAGIA6Uu0QAAAAAAADgP6KhtjgCACAEQQUQJiAPjLsgB7tEAAAAAAAA4D+ioSAHIBCUu0QAAAAAAADgP6KhtjgCACAREFQiAiABIAMQuAEgAiACIAQQuAEgACACIAAoAgAoAhARAwAgEUHgAGokAAsGAEH+vQELqzUEF38BfQF+AXwjAEEwayINJAAgDUEgahA6IQkjAEEQayIDJAAgDUEIaiAAKAIAAn8gA0EIaiIBQcX8ABAeNgIAIAEoAgALEBQQQRogARBeIANBEGokACMAQRBrIgMkACANKAIIQciHASgCACADQQRqEAshGiADIAMoAgQQQSEBIBoQ9wEhAiABEMQBIANBEGokACANQQhqEF4CQCACIAkQgAEiA0sEQCMAQSBrIgYkAAJAIAIgA2siBSAJECkoAgAgCSgCBGtNBEAgCSAFEP8DDAELIAkQKSEIIAZBCGohAwJ/IAkQgAEgBWohCiMAQRBrIgEkACABIAo2AgwgCiAJEPsDIgRNBEAgCRCOASIKIARBAXZJBEAgASAKQQF0NgIIIAFBCGogAUEMahBYKAIAIQQLIAFBEGokACAEDAELEHUACyEBIAkQgAEhCiMAQRBrIgQkACAEQQA2AgwgA0EMaiAEQQxqIAgQRyABBEAgAygCEBogARAnIQcLIAMgBzYCACADIAcgCmoiCjYCCCADIAo2AgQgAxAyIAEgB2o2AgAgBEEQaiQAIwBBEGsiASQAIAEgAygCCDYCACADKAIIIQQgASADQQhqNgIIIAEgBCAFajYCBCABKAIAIQQDQCABKAIEIARHBEAgAygCEBogASgCABC5ASABIAEoAgBBAWoiBDYCAAwBCwsgARDXASABQRBqJAAgCRD+AyAJECkgCSgCACAJKAIEIANBBGoiARDqASAJIAEQNiAJQQRqIANBCGoQNiAJECkgAxAyEDYgAyADKAIENgIAIAkgCRCAARD6AyADKAIEIQEDQCABIAMoAghHBEAgAygCEBogAyADKAIIQQFrNgIIDAELCyADKAIABEAgAygCEBogAygCACEBIAMQMigCACADKAIAaxogARAwCwsgBkEgaiQADAELIAIgA0kEQCAJKAIAIAJqIQMgCRCAARogCSADEPkDIAkoAgAaIAkoAgAgCRCOAWoaIAkoAgAaIAkoAgAgCRCAAWoaCwsgDSAJKAIANgIMIA0gAjYCCCMAQRBrIgEkACMAQRBrIgMkACADIAFBCGoiBDYCBCADQQhqIA1BCGoQOSADKAIEIAMoAgg2AgAgAygCBCADKAIMNgIEIAMgAygCBEEIajYCBCADQRBqJAAgDUEYaiIWQfC9ASAEEBM2AgAgAUEQaiQAIBYoAgAhAyMAQRBrIgEkAAJ/AkBB+L0BLQAAQQFxDQBB+L0BEFNFDQAjAEEQayIEJABBAkGQiAEQAyECIARBEGokAEH0vQEgAjYCAEH4vQEQUgtB9L0BKAIACyADQdD8AAJ/IwBBEGsiAyQAIAMgAUEIaiIENgIMIANBDGogABCeBRB3IANBEGokACAECxAEIAFBEGokACAJKAIAIQAgDUEIaiIDIAkQgAEiATYCDCADQQA6AAggAyAANgIAIAMgACABajYCBCANQQA2AgRBACEAQQAhBSMAQTBrIhIkAAJAAn8gEkEQaiIKQQxqEI0CGiMAQTBrIgckAAJAAkADQCAFQQRGDQEgBUHP6gBqIQEgBUEBaiEFIAEsAAAgAxD8A0YNAAtBACEFDAELIAogAxCBAT4CAEEAIQUgAy0ACA0AIAogAxCBAT4CBCADLQAIDQAgCiADEIEBPgIIIAMtAAgNACAHQSBqEDohCwJ/AkADQCAHIAMQgQGnIgE2AhggAUUNASALIAdBGGoQjQMgAy0ACEUNAAtBAAwBCyAHIAsQKjYCGCAHIAsQKzYCECAKQQxqIQFBCCEFA0ACQCAHQRhqIAdBEGoQLCIQRQ0AIAcgBygCGCgCADYCDCAFQQhGBEBBACEFIAMQugEhAAtBACEGIwBBIGsiDCQAIAwgB0EMaiIOEIwCNgIQIAxBGGohDyAMQRBqIRMgDEEIaiEUIwBBIGsiBCQAIAEQMhogDigCACERIAEQVSECIARBADoAHwJAAkAgAkUNACABIBEgAhA7IgYQLigCACIIRQ0AA0AgCCgCACIIRQ0BIBEgCCgCBEcEQCAIKAIEIAIQOyAGRw0CCyABEEUgCEEIaiAOEJ8BRQ0ACwwBCyMAQRBrIg4kACABECkiCCAEQRBqQRAQJyAOQQhqIAhBABCuARCtASIIKAIAQQhqQZjrACATIBQQmQMgCBA9QQE6AAQgCCgCACARNgIEIAgoAgBBADYCACAOQRBqJAACQCABAn8gARAyKAIAQQFqsyABEEUqAgAgArOUXkVBACACG0UEQCAEIAIQe0EBcyACQQF0cjYCDCAEAn8gARAyKAIAQQFqsyABEEUqAgCVjSIYQwAAgE9dIBhDAAAAAGBxBEAgGKkMAQtBAAs2AgggBEEMaiAEQQhqEFgoAgAhAiMAQRBrIgYkACAGIAI2AgwCQCAGIAJBAUYEf0ECBSACIAJBAWtxRQ0BIAIQhAELIgI2AgwLAkAgARBVIgggAkkEQCABIAIQiQMMAQsgAiAITw0AIAgQeyEOAn8gARAyKAIAsyABEEUqAgCVjSIYQwAAgE9dIBhDAAAAAGBxBEAgGKkMAQtBAAshAiAGAn8gDgRAIAIQywEMAQsgAhCEAQs2AgggBiAGQQxqIAZBCGoQWCgCACICNgIMIAIgCE8NACABIAIQiQMLIAZBEGokACARIAEQVSICEDshBgsgBgsQLigCACIIRQRAIAQoAhAgAUEIaiIIKAIANgIAIAEgBCgCEDYCCCABIAYQLiAINgIAIAQoAhAoAgBFDQEgBCgCECEGIAEgBCgCECgCACgCBCACEDsQLiAGNgIADAELIAQoAhAgCCgCADYCACAIIAQoAhA2AgALIARBEGoQzwEhCCABEDIiAiACKAIAQQFqNgIAIARBAToAHyAEQRBqEM4BCyAPIARBEGogCBBBIARBH2oQzQEgBEEgaiQAIAxBGGoQciEEIAxBIGokACAEIAAgBXVBA3E2AgQgAy0ACA0AIAVBAmohBSAHQRhqEC0MAQsLIBBBAXMLIQUgCxA+CyAHQTBqJAAgBUULBEBBmOoAQQtB4LABKAIAENkCDAELIAooAgBBB0cEQCAKKAIAIQAgCigCBCEDIBJCBzcDCCASIAM2AgQgEiAANgIAQeCwASgCAEGk6gAgEhDiAgwBC0EQECciCEIANwMAIAhCADcDCAJ/IAhBADYCACAIQQRqEDoaIwBBMGsiESQAIAhBBGohDiARQRBqIgQQjQIaIARBFGoQOhoCfwNAAkACQAJAAn9BASADKAIAIAMoAgRGDQAaIAMtAAgLRQRAAn9BACEAIwBBIGsiBSQAAn8CQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgAxCBAadBAWsOTjAiIyokLicpODg4ODg4OCYcHh8hOBsxHQIGCww4DhI4OCUoOA84ODM0KzU2MjcgAC8HLC0QODgEChMZOAEJERUNODgFOAgXOBQ4GhYDGDgLQcQAECdBAEHEABAzEKsCDDgLQRgQJyIAQgA3AwAgAEIANwMQIABCADcDCCAAEOYEDDcLQRQQJyIAQgA3AwAgAEEANgIQIABCADcDCCAAEN8EDDYLQRAQJyIAQgA3AwAgAEIANwMIIAAQiAMgAEF/NgIMIABB2OsANgIAIABB/DQ2AgAgAAw1C0EUECciAEIANwMAIABBADYCECAAQgA3AwggABDSBAw0C0EIECciAEIANwMAIAAQxwQMMwtBFBAnIgBCADcDACAAQQA2AhAgAEIANwMIIAAQ3gQMMgtBHBAnIgBCADcDACAAQQA2AhggAEIANwMQIABCADcDCCAAENkEDDELQRAQJyIAQgA3AwAgAEIANwMIIAAQyAQMMAtBEBAnIgBCADcDACAAQgA3AwggABDjBAwvC0EoECdBAEEoEDMQ0wQMLgtBEBAnIgBCADcDACAAQgA3AwggABDvAQwtC0HAABAnQQBBwAAQMxDiBAwsC0EkECdBAEEkEDMQygIMKwtBHBAnIgBCADcDACAAQQA2AhggAEIANwMQIABCADcDCCAAENoEDCoLQRwQJyIAQgA3AwAgAEEANgIYIABCADcDECAAQgA3AwggABDdBAwpC0EoECdBAEEoEDMQ1wQMKAtBEBAnIgBCADcDACAAQgA3AwggABDhBAwnC0E4ECdBAEE4EDMQ2AQMJgtBEBAnIgBCADcDACAAQgA3AwggABDRBAwlC0EcECciAEIANwMAIABBADYCGCAAQgA3AxAgAEIANwMIIAAQhwMgAEG87AA2AgAgAEHUNzYCACAADCQLQRAQJyIAQgA3AwAgAEIANwMIIAAQ4AQMIwtBIBAnIgBCADcDACAAQgA3AxggAEIANwMQIABCADcDCCAAEIcDIABBfzYCHCAAQZztADYCACAAQfQ1NgIAIAAMIgtBDBAnIgBCADcDACAAQQA2AgggABDPBAwhC0EsECdBAEEsEDMiABDKAhogAEF/NgIkIABB0O0ANgIAIABBADYCKCAAQYA5NgIAIAAMIAtBFBAnIgBCADcDACAAQQA2AhAgAEIANwMIIAAQ1gQMHwtBEBAnIgBCADcDACAAQgA3AwggABCIAyAAQQA2AgwgAEGY7gA2AgAgAEHINDYCACAADB4LQeQAECdBAEHkABAzENICDB0LQeQAECdBAEHkABAzEOwEDBwLQcwAECdBAEHMABAzEOgEDBsLQcQAECdBAEHEABAzEOoEDBoLQTgQJ0EAQTgQMxDwBAwZC0HMABAnEPcCDBgLQTwQJ0EAQTwQMxD0BAwXC0GAARAnQQBBgAEQMxDwAQwWC0H8ARAnELADDBULQcAAECdBAEHAABAzEG4MFAtB3AAQJ0EAQdwAEDMQmAMMEwtBpAEQJ0EAQaQBEDMQ+gQMEgtBvAMQJxCyAwwRC0HYABAnQQBB2AAQMxCgBQwQC0HoAhAnEKkDDA8LQagEECcQ3wMMDgtB0AAQJ0EAQdAAEDMQqgMMDQtBsAEQJxCSAgwMC0G0ARAnEKsDDAsLQeAAECdBAEHgABAzEKsBDAoLQTgQJ0EAQTgQMxD0AwwJC0G0ARAnQQBBtAEQMxD4AwwIC0EEECciAEEANgIAIAAQ9QMMBwtBwAAQJ0EAQcAAEDMQrgIMBgtBiAEQJ0EAQYgBEDMQ0AIMBQtBkAEQJ0EAQZABEDMQgwQMBAtB9AAQJ0EAQfQAEDMQ4gMMAwtB6AAQJ0EAQegAEDMQyAMMAgtB4AAQJ0EAQeAAEDMQlAQhAAsgAAshAQNAAkACQCADEIEBIhlQBEAgASEADAELIAMtAAgEQEEAIQAgAUUNASABIAEoAgAoAgQRAgAMAQsgAQRAIAEgGadB//8DcSADIAEoAgAoAhARBAANAwsCfyAZpyIHQQRrIgBBpwFNBEAgAEECdEHE7gBqKAIADAELQX8LIgBBf0cNASMAQRBrIgIkACACIAc2AgwjAEEQayILJAAgC0EIagJ/IwBBEGsiByQAIApBDGoiBhAyGiACQQxqIg8oAgAhDAJAAkAgBhBVIhBFDQAgBiAMIBAQOyITEC4oAgAiAEUNAANAIAAoAgAiAEUNASAMIAAoAgRHBEAgACgCBCAQEDsgE0cNAgsgDCAAKAIERw0AIAYQRSAAQQhqIA8QnwFFDQALIAdBCGogABBBKAIAIQAMAQsgBxCTASIANgIICyAHQRBqJAAgAAsQQSgCACEAIAtBEGokACACIAA2AgggAhCmATYCAEF/IQAgAkEIaiACEMIERQRAIAJBCGoQcigCBCEACyACQRBqJAAgAEF/Rw0BIAUgGTcDAEEAIQBB4LABKAIAQZnrACAFEOICIAFFDQAgASABKAIAKAIEEQIACyAFQSBqJAAgAAwCCwJAAkACQAJAIAAOBAABAgMECyADEDUaDAMLIAVBEGogAxDIASAFQRBqEG8MAgsgAxAxGgwBCyADELoBGgwACwALIgdFBEAjAEEQayIAJAAgAEEIaiAEQRRqIgIQKxCGAwJAA0AgACACECoQhgMjAEEQayIBJAAgASAAKAIMNgIIIAEgACgCBDYCACABQQhqIAEQLCEFIAFBEGokACAFRQ0BAn8jAEEQayIBJAAgASAAKAIMNgIIIAFBCGoQhQMoAgAhBSABQRBqJAAgBSgCACIBCyABKAIAKAIMEQAARQRAIAAgAEEIaiIBKQIANwIAIAFBBGoQhQMaDAELCyAAQRBqJAAMBgsgAEEQaiQADAULIAcgBygCACgCCBEAACICQTlrIgBBFUsNAQJAQQEgAHQiAUHwgSRxRQRAIAFBgIKAAXENASAADQMgBEEBEFEiAUUNBUE5IQJBDBAnIQAgASgCBCEBIAAQfyAAIAE2AgggACAHNgIEIABBnNAANgIADAQLQTwhAkEIECciABB/IAAgBzYCBCAAQdTPADYCAAwDC0HBACECQQgQJyIAEH8gACAHNgIEIABBtNAANgIADAILIwBBEGsiACQAIAAgBBCKAzYCCCAAEKYBNgIAA0ACQCAAQQhqIAAQ0wFFBEBBACEDDAELIABBCGoQcigCBCIDIAMoAgAoAggRAAAiAw0AIABBCGoQhwIMAQsLIABBEGokACADQQBHQQF0DAQLQQAhAAJAAkACQAJAAkAgAkEZaw4HAgMFBQUFAQALIAJBNUYNAyACQQFHDQRBASECQQgQJyIAEH8gACAHNgIEIABB9M4ANgIADAQLQR8hAkEIECciABB/IAAgBzYCBCAAQezPADYCAAwDC0EZIQJBCBAnIgAQfyAAIAc2AgQgAEGkzwA2AgAMAgsgBEEfEFEiAUUNAkEaIQJBDBAnIQAgASgCBCEBIAAQfyAAIAc2AgggACABNgIEIABBvM8ANgIADAELQTUhAkEIECciABB/IAAgBzYCBCAAQYTQADYCAAsjAEEwayIBJAAgASAANgIoIAEgAjsBLiABIAQgAUEuahDDBDYCICABEKYBNgIYAkACQAJ/IAFBIGogAUEYahDTAQRAIAEgAUEgahByKAIENgIYIARBFGoiAhAqIQUgAhArIQYjAEEQayIAJAAgACAGNgIAIAAgBTYCCANAAkAgAEEIaiAAECxFDQAgACgCCCgCACABKAIYRg0AIABBCGoQLQwBCwsgACgCCCEFIABBEGokACABIAU2AhAgASACECs2AgggAUEQaiABQQhqECwEQCABIAFBEGoQngEoAgAhBSMAQRBrIgAkACAAIAU2AgggACACECo2AgAgAEEIaiAAEIgCIQUgAiACKAIAIAVBAnRqIgVBBGogAigCBCAFEI8DELUDIAUQ5QEaIABBEGokAAsgASgCGCIAIAAoAgAoAggRAAAhACABKAIYIgIEQCACIAIoAgAoAgQRAgALIAAEQCAEIAFBLmoQjAMMBAsgASgCKCEACyAARQsEQCAEIAFBLmoQjAMMAQsjAEEgayIMJAAgDCABQS5qIg8QjAI2AhAgDEEYaiEXQQAhCyMAQSBrIgUkACAEEDIaIA8vAQAhECAEEFUhAiAFQQA6AB8CQAJAIAJFDQAgBCAQIAIQOyILEC4oAgAiBkUNAANAIAYoAgAiBkUNASAQIAYoAgRHBEAgBigCBCACEDsgC0cNAgsgBBBFIAZBCGogDxDABEUNAAsMAQsjAEEQayITJAAgBBApIQYgBUEQakEQECcgE0EIaiAGQQAQrgEQrQEiBigCACEUIAwoAhAhFSMAQRBrIg8kACAPIBU2AgggDygCCC8BACEVIBRBADYCDCAUIBU7AQggD0EQaiQAIAYQPUEBOgAEIAYoAgAgEDYCBCAGKAIAQQA2AgAgE0EQaiQAAkAgBAJ/IAQQMigCAEEBarMgBBBFKgIAIAKzlF5FQQAgAhtFBEAgBSACEHtBAXMgAkEBdHI2AgwgBQJ/IAQQMigCAEEBarMgBBBFKgIAlY0iGEMAAIBPXSAYQwAAAABgcQRAIBipDAELQQALNgIIIAVBDGogBUEIahBYKAIAIQIjAEEQayIGJAAgBiACNgIMAkAgBiACQQFGBH9BAgUgAiACQQFrcUUNASACEIQBCyICNgIMCwJAIAQQVSILIAJJBEAgBCACEIQDDAELIAIgC08NACALEHshDwJ/IAQQMigCALMgBBBFKgIAlY0iGEMAAIBPXSAYQwAAAABgcQRAIBipDAELQQALIQIgBgJ/IA8EQCACEMsBDAELIAIQhAELNgIIIAYgBkEMaiAGQQhqEFgoAgAiAjYCDCACIAtPDQAgBCACEIQDCyAGQRBqJAAgECAEEFUiAhA7IQsLIAsLEC4oAgAiBkUEQCAFKAIQIARBCGoiBigCADYCACAEIAUoAhA2AgggBCALEC4gBjYCACAFKAIQKAIARQ0BIAUoAhAhBiAEIAUoAhAoAgAoAgQgAhA7EC4gBjYCAAwBCyAFKAIQIAYoAgA2AgAgBiAFKAIQNgIACyAFQRBqEM8BIQYgBBAyIgIgAigCAEEBajYCACAFQQE6AB8gBUEQahDOAQsgFyAFQRBqIAYQQSAFQR9qEM0BIAVBIGokACAMQRhqEHIhAiAMQSBqJAAgAiAANgIEIARBFGogAUEoahCNAwtBACEACyABQTBqJAAgAA0AIAcgBCAHKAIAKAIgEQEADQEgByAHKAIAKAIIEQAAIgBBAUcEQCAAQRdHDQIgCCAHNgIABSARIAc2AgwgEUEMaiEAAkAgDigCBCAOECkoAgBJBEAgDiAAEEsMAQsgDiAAEIsDCwsMAQsLQQILIQEjAEEQayIAJAAgACAEEIoDNgIIIAAQpgE2AgADQCAAQQhqIAAQ0wEEQCAAQQhqEHIoAgQiAwRAIAMgAygCACgCBBECAAsgAEEIahCHAgwBCwsgBEEUahA+IAQQrwEgAEEQaiQAIBFBMGokACABCwRAIAgQjgMgCBAwDAELIA0gCDYCBAsgCkEMahCvASASQTBqJAAgDSgCBCEAIBYQXiAJEIAEIA1BMGokACAACwQAQQ4LCgAgAEFAahD0AgsMACAAQUBqIAEQ9QILHwAgACgCFBCOAgR/IAAoAhQgAEFAazYCSEEABUECCwsJACAAEPYCEDALIgAgAUEKa0H//wNxIgBBGk0EQEGTgIAgIAB2QQFxDwtBAAsbAQF/IAAoAjAiASAAKAJAIAEoAgAoAgwRAwALGwEBfyAAKAIwIgEgACgCPCABKAIAKAIQEQMACxsBAX8gACgCMCIBIAAqAjggASgCACgCCBEIAAtJAQF/IAAtAC4EQCABAn8gACgCSCIDBEAgAyACIAMoAgAoAgARAQAhAgsgAgsgAigCACgCJBEAACAAKAIwIAEoAgAoAhQRBQALC1AAIAAgARD7ASIBQQAgASgCACgCABEDACABIAAqAjggASgCACgCCBEIACABIAAoAjwgASgCACgCEBEDACABIAAoAkAgASgCACgCDBEDACABCwwAQQJBBCAALQBEGwsPACAAIAAoAgAoAjwRAgALCgAgAEE0axD4AgsEAEEkCzMAAkAgACABEGAiAQ0AQQEhASAAQTRqIAAQ+QJFDQAgACAAKAIAKAI8EQIAQQAhAQsgAQvZAgEIfwJ/AkACQAJAIAAoAhQiASABKAIAKAIIEQAAQQFrDgMAAgECCyABQcwAakEAIAEbDAILIAFBoAFqQQAgARshAgsgAgsiAUUEQEEBDwtBACECIwBBEGsiBCQAIAQgADYCDCAEQQxqIQcCQCABQQRqIgEoAgQgARApKAIARwRAIAEgBxBLDAELIwBBIGsiCCQAIAEQKSIFAn8gASABEC9BAWoQSiEDIAEQLyEJIwBBEGsiBiQAIAZBADYCDCAIQQhqIgBBDGogBkEMaiAFEEcgAwRAIAAoAhAaIANB/////wNLBEAQRgALIANBAnQQJyECCyAAIAI2AgAgACACIAlBAnRqIgU2AgggACAFNgIEIAAQMiACIANBAnRqNgIAIAZBEGokACAAKAIICyAHEEggACAAKAIIQQRqNgIIIAEgABBMIAAQSSAIQSBqJAALIARBEGokAEEACzgAIAAoAkwiACABQQAQJioCACABQQEQJioCACACQQAQJioCACACQQEQJioCACAAKAIAKAIcEREACwkAIAAQ0QIQMAsLACAAQcQAaxD/AQs4ACAAKAJMIgAgAUEAECYqAgAgAUEBECYqAgAgAkEAECYqAgAgAkEBECYqAgAgACgCACgCGBERAAsNACAAKgI0IAEqAjRdC6kDAgV/An0jAEEgayIDJAAgAUGA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BAsJACAAQQA6AAwLBABBLgsXACAALQAMRQRAIABBAToADCAAELECCwsZACABIAAqAgxcBEAgACABOAIMIAAQsQILCxkAIAEgAC0ADEcEQCAAIAE6AAwgABCxAgsLCQAgACgCCBA9Cx0AIAFBNRBRIgFFBEBBAQ8LIAEoAgQgABCRBEEAC0ABAX8gAUEBEFEiAQR/IAEoAgQhAiMAQRBrIgEkACABIAA2AgwgAkH0AGogAUEMahDUASABQRBqJABBAAVBAQsLzgEBA38jAEEQayICJAAgAiAAQRxqIgMQKjYCCCACIAMQKzYCAANAAkAgAkEIaiACECwiBEUNACACKAIIKAIAIgMgASADKAIAKAIcEQEAIgMNACACQQhqEC0MAQsLAkAgBEUEQCACIABBEGoiABAqNgIIIAIgABArNgIAA0AgAkEIaiACECxFBEBBACEDDAMLIAIoAggoAgAiACABIAAoAgAoAhwRAQAiAw0CIAJBCGoQLQwACwALIAJBEGokACADQf8BcQ8LIAJBEGokACADC84BAQN/IwBBEGsiAiQAIAIgAEEcaiIDECo2AgggAiADECs2AgADQAJAIAJBCGogAhAsIgRFDQAgAigCCCgCACIDIAEgAygCACgCGBEBACIDDQAgAkEIahAtDAELCwJAIARFBEAgAiAAQRBqIgAQKjYCCCACIAAQKzYCAANAIAJBCGogAhAsRQRAQQAhAwwDCyACKAIIKAIAIgAgASAAKAIAKAIYEQEAIgMNAiACQQhqEC0MAAsACyACQRBqJAAgA0H/AXEPCyACQRBqJAAgAwsJACAAEJMEEDALBwAgACgCJAsHACAAKAIgC0ABAX8gAUEBEFEiAQR/IAEoAgQhAiMAQRBrIgEkACABIAA2AgwgAkHoAGogAUEMahDUASABQRBqJABBAAVBAQsLRgECf0HgABAnQQBB4AAQMxCUBCICIgEgACgCQDYCQCABIAAoAkQ2AkQgASAAKAJINgJIIAEgACgCTDYCTCABIAAQswIgAgtqAQF/IwBBEGsiAiQAIAIgAEEsaiIAECo2AgggAiAAECs2AgADQAJAIAJBCGogAhAsRQRAQQAhAAwBCyACKAIIKAIAIgAgASAAKAIAKAIcEQEAIgANACACQQhqEC0MAQsLIAJBEGokACAAC2oBAX8jAEEQayICJAAgAiAAQSxqIgAQKjYCCCACIAAQKzYCAANAAkAgAkEIaiACECxFBEBBACEADAELIAIoAggoAgAiACABIAAoAgAoAhgRAQAiAA0AIAJBCGoQLQwBCwsgAkEQaiQAIAALCQAgABCYBBAwCwsAQQgQJyAAEIcEC2oBAX8jAEEQayICJAAgAiAAQQRqIgAQKjYCCCACIAAQKzYCAANAAkAgAkEIaiACECxFBEBBACEADAELIAIoAggoAgAiACABIAAoAgAoAhwRAQAiAA0AIAJBCGoQLQwBCwsgAkEQaiQAIAALagEBfyMAQRBrIgIkACACIABBBGoiABAqNgIIIAIgABArNgIAA0ACQCACQQhqIAIQLEUEQEEAIQAMAQsgAigCCCgCACIAIAEgACgCACgCGBEBACIADQAgAkEIahAtDAELCyACQRBqJAAgAAsJACAAEOIBEDALDgAgASACIAAoAhgQnwQLDgAgASACIAAoAhgQnwQLBwAgACoCOAsHACAAKgI0CwcAIAAqAjALSgEBfyADIAAqAhSTIAQqAhQgACoCFJOVIQMgACgCECIGBEAgBiADEK4EIQMLIAEgAiAFIAAqAhggAyAEKgIYIAAqAhiTlJIQpwQLBwAgACoCGAsQACABIAIgAyAAKgIYEKcECwcAIAAoAhALRQEBfyADIAAqAhSTIAQqAhQgACoCFJOVIQMgACgCECIGBEAgBiADEK4EIQMLIAEgAiAFIAAoAhggBCgCGCADEP8CEKkECxAAIAEgAiADIAAoAhgQqQQLtAIBCH8gAUEaEFEiAUUEQEEBDwsgACAAKAIEsiABKAIEKAIQspU4AhQgASgCCCEBIwBBEGsiBCQAIAQgADYCDCAEQQxqIQcCQCABQQhqIgEoAgQgARApKAIARwRAIAEgBxBLDAELIwBBIGsiCCQAIAEQKSIFAn8gASABEC9BAWoQSiEDIAEQLyEJIwBBEGsiBiQAIAZBADYCDCAIQQhqIgBBDGogBkEMaiAFEEcgAwRAIAAoAhAaIANB/////wNLBEAQRgALIANBAnQQJyECCyAAIAI2AgAgACACIAlBAnRqIgU2AgggACAFNgIEIAAQMiACIANBAnRqNgIAIAZBEGokACAAKAIICyAHEEggACAAKAIIQQRqNgIIIAEgABBMIAAQSSAIQSBqJAALIARBEGokAEEAC0wBAX9BASECAkAgACgCDEEBTgRAIAEgACgCDCABKAIAKAIAEQEAIgFFDQEgAUEcIAEoAgAoAgwRAQBFDQEgACABNgIQC0EAIQILIAILnwIBCH8gAUEZEFEiAUUEQEEBDwsgASgCBCEBIwBBEGsiBCQAIAQgADYCDCAEQQxqIQcCQCABQQhqIgEoAgQgARApKAIARwRAIAEgBxBLDAELIwBBIGsiCCQAIAEQKSIFAn8gASABEC9BAWoQSiEDIAEQLyEJIwBBEGsiBiQAIAZBADYCDCAIQQhqIgBBDGogBkEMaiAFEEcgAwRAIAAoAhAaIANB/////wNLBEAQRgALIANBAnQQJyECCyAAIAI2AgAgACACIAlBAnRqIgU2AgggACAFNgIEIAAQMiACIANBAnRqNgIAIAZBEGokACAAKAIICyAHEEggACAAKAIIQQRqNgIIIAEgABBMIAAQSSAIQSBqJAALIARBEGokAEEAC2oBAX8jAEEQayICJAAgAiAAQQhqIgAQKjYCCCACIAAQKzYCAANAAkAgAkEIaiACECxFBEBBACEADAELIAIoAggoAgAiACABIAAoAgAoAhwRAQAiAA0AIAJBCGoQLQwBCwsgAkEQaiQAIAALagEBfyMAQRBrIgIkACACIABBCGoiABAqNgIIIAIgABArNgIAA0ACQCACQQhqIAIQLEUEQEEAIQAMAQsgAigCCCgCACIAIAEgACgCACgCGBEBACIADQAgAkEIahAtDAELCyACQRBqJAAgAAsHACAAKgIUCwkAIAAQqgQQMAufAgEIfyABQR8QUSIBRQRAQQEPCyABKAIEIQEjAEEQayIDJAAgAyAANgIMIANBDGohBwJAIAFBLGoiASgCBCABECkoAgBHBEAgASAHEEsMAQsjAEEgayIIJAAgARApIgQCfyABIAEQL0EBahBKIQIgARAvIQkjAEEQayIFJAAgBUEANgIMIAhBCGoiAEEMaiAFQQxqIAQQRyACBEAgACgCEBogAkH/////A0sEQBBGAAsgAkECdBAnIQYLIAAgBjYCACAAIAYgCUECdGoiBDYCCCAAIAQ2AgQgABAyIAYgAkECdGo2AgAgBUEQaiQAIAAoAggLIAcQSCAAIAAoAghBBGo2AgggASAAEEwgABBJIAhBIGokAAsgA0EQaiQAQQALXgEBfyMAQRBrIgIkACACIABB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CyABQR9HBEAgACABIAIQ4QIPCyAAIAIQMbY4AqwBQQELJgAgAUECayIAQf//A3FBJE0EQEKhzoCAgAIgAK2Ip0EBcQ8LQQALBABBBwtTAQJ/QbwDECcQsgMiAiIBIAAtAKgBOgCoASABIAAqAqwBOAKsASABIAAqArABOAKwASABIAAqArQBOAK0ASABIAAqArgBOAK4ASABIAAQ9AEgAgsoACABQQJrIgBB//8DcUExTQRAQoHOgICAgoABIACtiKdBAXEPC0EACwQAQTMLFQEBf0GwARAnEJICIgEgABD4BCABCyYAIAFBAmsiAEH//wNxQSRNBEBCgY6AgIACIACtiKdBAXEPC0EACwQAQQwLIQAgAUEgRgRAIAAgAhCHAToAmAFBAQ8LIAAgASACENwCCyYAIAFBAmsiAEH//wNxQSRNBEBCgY6BgIACIACtiKdBAXEPC0EACwQAQRALLAECf0GkARAnQQBBpAEQMyIBEPoEIQIgASAALQCYAToAmAEgASAAEJQFIAILIgEBfiABIAKtIAOtQiCGhCAEIAARIAAiBUIgiKcQFiAFpwsHACAAKgJ8CwMAAAszAQF/IAAoAhQiAyABIAIgACgCECADayIBIAEgAksbIgEQZRogACAAKAIUIAFqNgIUIAILjwUCBn4BfyABIAEoAgBBD2pBcHEiAUEQajYCACAAAnwgASkDACEEIAEpAwghBSMAQSBrIgAkAAJAIAVC////////////AIMiA0KAgICAgIDAgDx9IANCgICAgICAwP/DAH1UBEAgBUIEhiAEQjyIhCEDIARC//////////8PgyIEQoGAgICAgICACFoEQCADQoGAgICAgICAwAB8IQIMAgsgA0KAgICAgICAgEB9IQIgBEKAgICAgICAgAiFQgBSDQEgAiADQgGDfCECDAELIARQIANCgICAgICAwP//AFQgA0KAgICAgIDA//8AURtFBEAgBUIEhiAEQjyIhEL/////////A4NCgICAgICAgPz/AIQhAgwBC0KAgICAgICA+P8AIQIgA0L///////+//8MAVg0AQgAhAiADQjCIpyIBQZH3AEkNACAEIQIgBUL///////8/g0KAgICAgIDAAIQiAyEGAkAgAUGB9wBrIghBwABxBEAgAiAIQUBqrYYhBkIAIQIMAQsgCEUNACAGIAitIgeG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IAEoAgRrCyEEIANBIGokACAECwkAIAAoAjwQGAtCAQF/IwBBEGsiAyQAIAAoAjwgAacgAUIgiKcgAkH/AXEgA0EIahAVEOACIQAgAykDCCEBIANBEGokAEJ/IAEgABsLBABBBAsnAQF/IwBBEGsiASQAIAEgADYCDCABKAIMIQAQkQUgAUEQaiQAIAAL+gEBBH8jAEHwAGsiAiQAIAIgADYCbCACIAIoAmw2AgAjAEEQayIDJAAgAyACNgIMIwBBoAFrIgAkACAAQQhqQYi1AUGQARBlGiAAIAJBEGoiATYCNCAAIAE2AhwgAEF+IAFrIgRB/////wcgBEH/////B0kbIgQ2AjggACABIARqIgE2AiQgACABNgIYIABBCGpBopQBIAJB6ghB6wgQiAUgBARAIAAoAhwiASABIAAoAhhGa0EAOgAACyAAQaABaiQAIANBEGokAAJ/QQAgAkEQaiIAEPwEQQFqIgEQ8gEiA0UNABogAyAAIAEQZQshACACQfAAaiQAIAALLwEBfyMAQRBrIgMkACADIAEgAiAAKAIAEQUAIAMQkwUhACADEG8gA0EQaiQAIAALOQEBfyAAKAIEIgRBAXUgAWohASAAKAIAIQAgASACIAMgBEEBcQR/IAEoAgAgAGooAgAFIAALERQACzcBAX8gACgCBCIDQQF1IAFqIQEgACgCACEAIAEgAiADQQFxBH8gASgCACAAaigCAAUgAAsRGQALOwEBfyAAKAIEIgVBAXUgAWohASAAKAIAIQAgASACIAMgBCAFQQFxBH8gASgCACAAaigCAAUgAAsRFgALNwEBfyAAKAIEIgNBAXUgAWohASAAKAIAIQAgASACIANBAXEEfyABKAIAIABqKAIABSAACxEeAAszAQF/IAAoAgAhAiAAKAIEIgBBAXUgAWoiASAAQQFxBH8gASgCACACaigCAAUgAgsRAAALDAAgABCVBRogABAwCwsAIABBxoABEIYBC8YBAQN/IwBBEGsiAyQAIAMgAjgCCCADIAE2AgwgACgCCCEAIwBBEGsiASQAAn8CQEGYvwEtAABBAXENAEGYvwEQU0UNACMAQRBrIgQkAEEDQYSRARADIQUgBEEQaiQAQZS/ASAFNgIAQZi/ARBSC0GUvwEoAgALIABBvoABAn8jAEEQayIAJAAgACABNgIMIABBDGogA0EM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EGoQLyIANgIQQX9BfyAArUIsfiIGpyIBQQRqIgIgASACSxsgBkIgiKcbECciASAANgIAIAFBBGohASAABEAgASAAQSxsaiECIAEhAANAIABCADcCACAAQgA3AiQgAEEAOwEgIABCgICA/IOAgMA/NwIYIABCADcADSAAQgA3AgggAEEsaiIAIAJHDQALCyADIAE2AhRBAAVBACEBAkAgBCAAEOABIgJFDQACQAJAAkAgAiACKAIAKAIIEQAAQThrDgQBAwIAAwtBEBAnIgEgAiADELICIAFB0MEANgIAIAEgAi0AEDoADAwCC0EQECciASACIAMQsgIgAUHkwQA2AgAgASACKgIQOAIMDAELQRAQJyIBIAIgAxCyAiABQQA6AAwgAUH4wQA2AgALIAMoAgwgAEECdGogATYCACAAQQFqIQAgAygCCCEBDAELCyEAA0AgAygCECAASwRAIAMoAhQgAEEsbGohASAEQRBqIgIQLyAASwR/IAIgABAuKAIABUEACyICKAIcIgUgBSgCACgCJBEAACEFIAEgAjYCACABIAU2AgQgASACKAIgEJAEGiAAQQFqIQAMAQsLIAML0gEBBH8gAARAAkADQCAAKAIMIQIgACgCCCABTQRAIAIEQCACEDALIAAoAhQiAgRAIAJBBGsiBCgCACIBBEAgAiABQSxsaiEBA0AgAUEsayIBKAIEIgMEQCADIAMoAgAoAgQRAgALIAEoAggiAwRAIAMgAygCACgCBBECAAsgASgCDCIDBEAgAyADKAIAKAIEEQIACyABIAJHDQALCyAEEDALDAILIAIgAUECdGooAgAiAgRAIAIgAigCACgCCBECAAsgAUEBaiEBDAALAAsLIAAQMAtbAAJAAkACQAJAAkAgAUHUAGsOBAABAgMECyAAIAIQMbY4AlBBAQ8LIAAgAhAxtjgCVEEBDwsgACACEDG2OAJYQQEPCyAAIAIQMbY4AlxBAQ8LIAAgASACEKwBCwYAQb+/AQsGAEG9vwELBwAgAC0AGAsOAEEgECcgACgCABC1AgsGAEG6vwELUQECfyMAQRBrIgIkACAAKAIAIQMgAiABIAAoAgQiAEEBdWoiASAAQQFxBH8gASgCACADaigCAAUgAwsRAAA2AgwgAigCDCEAIAJBEGokACAACwYAQbe/AQsGAEG0vwELBgBBsr8BCyMA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qwEAAKwBAAAaAAAALwAAAB8AAAAwAAAApgEAQdQtCyadAQAArQEAAK4BAACvAQAArAEAABoAAAAvAAAAHwAAADAAAACmAQBBhC4LJp0BAACwAQAArgEAAK8BAACsAQAAGgAAAC8AAAAfAAAAMAAAAKYBAEG4LgsmnQEAALEBAACyAQAAswEAAKwBAAC0AQAALwAAAB8AAAAwAAAApgEAQeguCyqdAQAAtQEAALYBAAC3AQAAuAEAALkBAACjAQAApAEAAKUBAACmAQAAugEAQZwvCyqdAQAAuwEAALYBAAC3AQAAuAEAALkBAACjAQAApAEAAKUBAACmAQAAugEAQdAvCyadAQAAvAEAAL0BAAC+AQAArAEAAL8BAACjAQAApAEAAKUBAACmAQBBgDALJp0BAADAAQAAvQEAAL4BAACsAQAAvwEAAKMBAACkAQAApQEAAKYBAEGwMAsyMQAAAMEBAADCAQAAwwEAAMQBAADFAQAALwAAAB8AAAAwAAAAxgEAAMcBAADIAQAAyQEAQewwCzIxAAAAygEAAMsBAADMAQAAzQEAAM4BAADPAQAA0AEAANEBAADSAQAA0wEAANQBAADVAQBBqDELMjEAAADWAQAA1wEAANgBAADNAQAAGgAAAM8BAADQAQAA0QEAANIBAADTAQAA1AEAANUBAEHkMQsyMQAAANkBAADXAQAA2AEAAM0BAAAaAAAAzwEAANABAADRAQAA0gEAANMBAADUAQAA1QEAQaAyCyYxAAAA2gEAANsBAADcAQAA3QEAABoAAAAvAAAAHwAAADAAAADSAQBB0DILNjEAAADeAQAA3wEAAOABAADhAQAA4gEAAM8BAADQAQAA0QEAANIBAADTAQAA1AEAANUBAADjAQBBkDMLLjEAAADkAQAA5QEAAOYBAADdAQAA5wEAAM8BAADQAQAA0QEAANIBAADTAQAA1AEAQcgzCyo7AQAA6AEAAD0BAAA+AQAAPwEAAEABAABBAQAAQgEAAEMBAADpAQAARQEAQfwzCxLqAQAA6wEAAOwBAADtAQAA7gEAQZg0CyYxAAAA7wEAAPABAADxAQAA8gEAABoAAAAvAAAAHwAAAPMBAAD0AQBByDQLKjEAAAD1AQAA9gEAAPcBAAD4AQAAGgAAAPkBAAD6AQAA8wEAAPQBAAD7AQBB/DQLbzEAAAD8AQAA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AgAAAAAAAAACAAAAAgAAAAIAAAD/////AwAAAAMAAAACAEHc7wALFQIAAAD///////////////8CAAAAAgBBhPAACw3/////AAAAAP////8BAEGc8AALAQIAQbDwAAsNAgAAAAIAAAACAAAAAgBBzPAAC1UCAAAA//////////////////////////////////////////8CAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAADAAAAAgAAAAIAAAACAEG08QALFQIAAAACAAAAAgAAAAIAAAACAAAAAgBB1PEACxUCAAAAAgAAAAIAAAACAAAAAgAAAAIAQfzxAAsUAgAAAAIAAAACAAAAAAAAAP////8AQaDyAAsRAgAAAAIAAAAAAAAAAgAAAAIAQbzyAAuFAf//////////////////////////////////////////AQAAAP////8CAAAAAAAAAP////////////////////////////////////8AAAAA/////wAAAAAAAAAA//////////8AAAAAAAAAAAIAAAAAAAAA/////wAAAAACAAAAAgAAAAIAQczzAAsBAgBB2PMACyj//////////wAAAAAAAIC/AACAvwAAAAAAAIC/AACAPwAAgL8AAIC/AEGO9AALf4A/AAAAAAAAgL8AAIA/AAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAQAAAC8DAACdAgAAngIAAJ8CAAC5AAAABwAAAAgAAAAJAAAACgAAAAsAAAAMAAAADQAAAA4AAAAPAAAAEAAAABEAAAASAAAAEwAAAKMAAACkAAAApQAAAKYAQZj1AAtRAQAAADADAAAdAAAAHgAAABkAAAAaAAAABwAAAAgAAAAJAAAACgAAAAsAAAAMAAAADQAAAA4AAAAPAAAAEAAAABEAAAASAAAAEwAAABQAAAAUAEH09QALSewAAAAxAwAA7gAAAO8AAADwAAAA8QAAAAcAAADyAAAACQAAAAoAAAALAAAAIAAAAA0AAAAhAAAA8wAAADIDAAAzAwAANAMAAPUAQcj2AAs+AQAAADUDAAD7AAAA/AAAAP0AAAD+AAAANgMAAB8AAAAJAAAACgAAAAsAAAAgAAAADQAAACEAAAA3AwAAOAMAQZD3AAujAQsBAAA6AwAAAgEAAAMBAAAEAQAABQEAABABAAAfAAAACQAAAAoAAAALAAAAEQEAAA0AAAASAQAAEwEAABQBAAAVAQAAFgEAABcBAAAYAQAAGQEAALz///8AAAAAGgEAAGFsbG9jYXRvcjxUPjo6YWxsb2NhdGUoc2l6ZV90IG4pICduJyBleGNlZWRzIG1heGltdW0gc3VwcG9ydGVkIHNpemUAQbz4AAteCwEAADsDAAANAQAADgEAAAQBAAAPAQAAEAEAAB8AAAAJAAAACgAAAAsAAAARAQAADQAAABIBAAATAQAAFAEAABUBAAAWAQAAFwEAABgBAAA8AwAAvP///wAAAAAaAQBBpPkAC0XsAAAAPQMAAPcAAAD4AAAA+QAAABoAAAAHAAAA8gAAAAkAAAAKAAAACwAAACAAAAANAAAAIQAAAPMAAAD0AAAAFAAAABQAQfT5AAtKAQAAAD4DAAAcAQAAHQEAAB4BAAAfAQAAPwMAAB8AAAAJAAAACgAAAAsAAAAgAAAADQAAACEAAABAAwAAQQMAAMz///8AAAAAQgMAQcj6AAtW7AAAAEMDAAAiAQAAIwEAACQBAAAlAQAABwAAAPIAAAAJAAAACgAAAAsAAAAgAAAADQAAACEAAADzAAAARAMAAEUDAABGAwAARwMAAEgDAABJAwAAKQEAQaj7AAteSgMAAEsDAAArAQAALAEAAC0BAAAuAQAABwAAAEwDAAAJAAAACgAAAAsAAAAgAAAADQAAACEAAABNAwAATgMAAE8DAABQAwAAUQMAAFIDAADA////AAAAAFMDAABUAwBBkPwAC+IMFAAAABQAAAByZW5kZXJGYWN0b3J5AG1ha2VSZW5kZXJQYWludABtYWtlUmVuZGVyUGF0aABieXRlTGVuZ3RoAHNldABsb2FkAFJlbmRlcmVyAHNhdmUAcmVzdG9yZQB0cmFuc2Zvcm0AZHJhd1BhdGgAY2xpcFBhdGgAYWxpZ24AUmVuZGVyZXJXcmFwcGVyAFJlbmRlclBhdGgAcmVzZXQAYWRkUGF0aABmaWxsUnVsZQBtb3ZlVG8AbGluZVRvAGN1YmljVG8AY2xvc2UAUmVuZGVyUGF0aFdyYXBwZXIAUmVuZGVyUGFpbnRTdHlsZQBmaWxsAHN0cm9rZQBGaWxsUnVsZQBub25aZXJvAGV2ZW5PZGQAU3Ryb2tlQ2FwAGJ1dHQAcm91bmQAc3F1YXJlAFN0cm9rZUpvaW4AbWl0ZXIAYmV2ZWwAQmxlbmRNb2RlAHNyY092ZXIAc2NyZWVuAG92ZXJsYXkAZGFya2VuAGxpZ2h0ZW4AY29sb3JEb2RnZQBjb2xvckJ1cm4AaGFyZExpZ2h0AHNvZnRMaWdodABkaWZmZXJlbmNlAGV4Y2x1c2lvbgBtdWx0aXBseQBodWUAc2F0dXJhdGlvbgBjb2xvcgBsdW1pbm9zaXR5AFJlbmRlclBhaW50AHN0eWxlAHRoaWNrbmVzcwBqb2luAGNhcABibGVuZE1vZGUAbGluZWFyR3JhZGllbnQAcmFkaWFsR3JhZGllbnQAYWRkU3RvcABjb21wbGV0ZUdyYWRpZW50AFJlbmRlclBhaW50V3JhcHBlcgBNYXQyRAB4eAB4eQB5eAB5eQB0eAB0eQBGaWxlAGRlZmF1bHRBcnRib2FyZABhcnRib2FyZEJ5TmFtZQBhcnRib2FyZEJ5SW5kZXgAYXJ0Ym9hcmRDb3VudABBcnRib2FyZABuYW1lAGFkdmFuY2UAZHJhdwB0cmFuc2Zvcm1Db21wb25lbnQAbm9kZQBib25lAHJvb3RCb25lAGFuaW1hdGlvbkJ5SW5kZXgAYW5pbWF0aW9uQnlOYW1lAGFuaW1hdGlvbkNvdW50AHN0YXRlTWFjaGluZUJ5SW5kZXgAc3RhdGVNYWNoaW5lQnlOYW1lAHN0YXRlTWFjaGluZUNvdW50AGJvdW5kcwBUcmFuc2Zvcm1Db21wb25lbnQAc2NhbGVYAHNjYWxlWQByb3RhdGlvbgBOb2RlAHgAeQBCb25lAGxlbmd0aABSb290Qm9uZQBBbmltYXRpb24ATGluZWFyQW5pbWF0aW9uAGR1cmF0aW9uAGZwcwB3b3JrU3RhcnQAd29ya0VuZABlbmFibGVXb3JrQXJlYQBsb29wVmFsdWUAc3BlZWQAYXBwbHkATGluZWFyQW5pbWF0aW9uSW5zdGFuY2UAdGltZQBkaWRMb29wAFN0YXRlTWFjaGluZQBTdGF0ZU1hY2hpbmVJbnN0YW5jZQBpbnB1dENvdW50AGlucHV0AHN0YXRlQ2hhbmdlZENvdW50AHN0YXRlQ2hhbmdlZE5hbWVCeUluZGV4AFNNSUlucHV0AHR5cGUAYm9vbAA7AG51bWJlcgAA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AKFfAADGXwAAw18AAMdfAADDXwAAyF8AAMNfAAD8XgAAyF8AAGkAJXAAdm9pZABib29sAGNoYXIAc2lnbmVkIGNoYXIAdW5zaWduZWQgY2hhcgBzaG9ydAB1bnNpZ25lZCBzaG9ydABpbnQAdW5zaWduZWQgaW50AGxvbmcAdW5zaWduZWQgbG9uZwBmbG9hdABkb3VibGUAc3RkOjpzdHJpbmcAc3RkOjpiYXNpY19zdHJpbmc8dW5zaWduZWQgY2hhcj4Ac3RkOjp3c3RyaW5nAHN0ZDo6dTE2c3RyaW5nAHN0ZDo6dTMyc3RyaW5nAGVtc2NyaXB0ZW46OnZhbABlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxzaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2hvcnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIHNob3J0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGludD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8bG9uZz4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgbG9uZz4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50OF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50OF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQxNl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50MTZfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50MzJfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDMyX3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGZsb2F0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxkb3VibGU+AAAAAAAAAwAAAAQAAAAEAAAABgAAAIP5ogBETm4A/CkVANFXJwDdNPUAYtvAADyZlQBBkEMAY1H+ALveqwC3YcUAOm4k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APz0VQABWU0A4HGAAEGjsAELUUD7Ifk/AAAAAC1EdD4AAACAmEb4PAAAAGBRzHg7AAAAgIMb8DkAAABAICV6OAAAAIAiguM2AAAAAB3zaTUgXQAALSsgICAwWDB4AChudWxsKQBBgLEBC0ERAAoAERERAAAAAAUAAAAAAAAJAAAAAAsAAAAAAAAAABEADwoREREDCgcAAQAJCwsAAAkGCwAACwAGEQAAABEREQBB0bEBCyELAAAAAAAAAAARAAoKERERAAoAAAIACQsAAAAJAAsAAAsAQYuyAQsBDABBl7IBCxUMAAAAAAwAAAAACQwAAAAAAAwAAAwAQcWyAQsBDgBB0bIBCxUNAAAABA0AAAAACQ4AAAAAAA4AAA4AQf+yAQsBEABBi7MBCx4PAAAAAA8AAAAACRAAAAAAABAAABAAABIAAAASEhIAQcKzAQsOEgAAABISEgAAAAAAAAkAQfOzAQsBCwBB/7MBCxUKAAAAAAoAAAAACQsAAAAAAAsAAAsAQa20AQsBDABBubQBC0sMAAAAAAwAAAAACQwAAAAAAAwAAAwAADAxMjM0NTY3ODlBQkNERUYtMFgrMFggMFgtMHgrMHggMHgAaW5mAElORgBuYW4ATkFOAC4AQay1AQsCbAQAQdO1AQsF//////8AQZi2AQsTYmFzaWNfc3RyaW5nAHZlY3RvcgBBtLYBC+UDAgAAAAMAAAAFAAAABwAAAAsAAAANAAAAEQAAABMAAAAXAAAAHQAAAB8AAAAlAAAAKQAAACsAAAAvAAAANQAAADsAAAA9AAAAQwAAAEcAAABJAAAATwAAAFMAAABZAAAAYQAAAGUAAABnAAAAawAAAG0AAABxAAAAfwAAAIMAAACJAAAAiwAAAJUAAACXAAAAnQAAAKMAAACnAAAArQAAALMAAAC1AAAAvwAAAMEAAADFAAAAxwAAANMAAAABAAAACwAAAA0AAAARAAAAEwAAABcAAAAdAAAAHwAAACUAAAApAAAAKwAAAC8AAAA1AAAAOwAAAD0AAABDAAAARwAAAEkAAABPAAAAUwAAAFkAAABhAAAAZQAAAGcAAABrAAAAbQAAAHEAAAB5AAAAfwAAAIMAAACJAAAAiwAAAI8AAACVAAAAlwAAAJ0AAACjAAAApwAAAKkAAACtAAAAswAAALUAAAC7AAAAvwAAAMEAAADFAAAAxwAAANEAAABfX25leHRfcHJpbWUgb3ZlcmZsb3cAX19jeGFfZ3VhcmRfYWNxdWlyZSBkZXRlY3RlZCByZWN1cnNpdmUgaW5pdGlhbGl6YXRpb24AUHVyZSB2aXJ0dWFsIGZ1bmN0aW9uIGNhbGxlZCEAQaC6AQsBBQBBrLoBCwJnBABBxLoBCwpoBAAAaQQAAO1fAEHcugELAQIAQeu6AQsF//////8AQdy8AQsCHGAAQZS9AQsDMGJQ\";\n\nif (!isDataURI(wasmBinaryFile)) {\n wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary(file) {\n try {\n  if (file == wasmBinaryFile && wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  var binary = tryParseAsDataURI(file);\n  if (binary) {\n   return binary;\n  }\n  if (readBinary) {\n   return readBinary(file);\n  } else {\n   throw \"both async and sync fetching of the wasm failed\";\n  }\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise() {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    if (!response[\"ok\"]) {\n     throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(function() {\n    return getBinary(wasmBinaryFile);\n   });\n  } else {\n   if (readAsync) {\n    return new Promise(function(resolve, reject) {\n     readAsync(wasmBinaryFile, function(response) {\n      resolve(new Uint8Array(response));\n     }, reject);\n    });\n   }\n  }\n }\n return Promise.resolve().then(function() {\n  return getBinary(wasmBinaryFile);\n });\n}\n\nfunction createWasm() {\n var info = {\n  \"a\": asmLibraryArg\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  Module[\"asm\"] = exports;\n  wasmMemory = Module[\"asm\"][\"M\"];\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  wasmTable = Module[\"asm\"][\"O\"];\n  addOnInit(Module[\"asm\"][\"N\"]);\n  removeRunDependency(\"wasm-instantiate\");\n }\n addRunDependency(\"wasm-instantiate\");\n function receiveInstantiatedSource(output) {\n  receiveInstance(output[\"instance\"]);\n }\n function instantiateArrayBuffer(receiver) {\n  return getBinaryPromise().then(function(binary) {\n   var result = WebAssembly.instantiate(binary, info);\n   return result;\n  }).then(receiver, function(reason) {\n   err(\"failed to asynchronously prepare wasm: \" + reason);\n   abort(reason);\n  });\n }\n function instantiateAsync() {\n  if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    var result = WebAssembly.instantiateStreaming(response, info);\n    return result.then(receiveInstantiatedSource, function(reason) {\n     err(\"wasm streaming compile failed: \" + reason);\n     err(\"falling back to ArrayBuffer instantiation\");\n     return instantiateArrayBuffer(receiveInstantiatedSource);\n    });\n   });\n  } else {\n   return instantiateArrayBuffer(receiveInstantiatedSource);\n  }\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n   return exports;\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   return false;\n  }\n }\n instantiateAsync().catch(readyPromiseReject);\n return {};\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  var callback = callbacks.shift();\n  if (typeof callback == \"function\") {\n   callback(Module);\n   continue;\n  }\n  var func = callback.func;\n  if (typeof func === \"number\") {\n   if (callback.arg === undefined) {\n    wasmTable.get(func)();\n   } else {\n    wasmTable.get(func)(callback.arg);\n   }\n  } else {\n   func(callback.arg === undefined ? null : callback.arg);\n  }\n }\n}\n\nvar char_0 = 48;\n\nvar char_9 = 57;\n\nfunction makeLegalFunctionName(name) {\n if (undefined === name) {\n  return \"_unknown\";\n }\n name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n var f = name.charCodeAt(0);\n if (f >= char_0 && f <= char_9) {\n  return \"_\" + name;\n } else {\n  return name;\n }\n}\n\nfunction createNamedFunction(name, body) {\n name = makeLegalFunctionName(name);\n return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\n}\n\nvar emval_free_list = [];\n\nvar emval_handle_array = [ {}, {\n value: undefined\n}, {\n value: null\n}, {\n value: true\n}, {\n value: false\n} ];\n\nfunction count_emval_handles() {\n var count = 0;\n for (var i = 5; i < emval_handle_array.length; ++i) {\n  if (emval_handle_array[i] !== undefined) {\n   ++count;\n  }\n }\n return count;\n}\n\nfunction get_first_emval() {\n for (var i = 5; i < emval_handle_array.length; ++i) {\n  if (emval_handle_array[i] !== undefined) {\n   return emval_handle_array[i];\n  }\n }\n return null;\n}\n\nfunction init_emval() {\n Module[\"count_emval_handles\"] = count_emval_handles;\n Module[\"get_first_emval\"] = get_first_emval;\n}\n\nfunction __emval_register(value) {\n switch (value) {\n case undefined:\n  {\n   return 1;\n  }\n\n case null:\n  {\n   return 2;\n  }\n\n case true:\n  {\n   return 3;\n  }\n\n case false:\n  {\n   return 4;\n  }\n\n default:\n  {\n   var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n   emval_handle_array[handle] = {\n    refcount: 1,\n    value: value\n   };\n   return handle;\n  }\n }\n}\n\nfunction extendError(baseErrorType, errorName) {\n var errorClass = createNamedFunction(errorName, function(message) {\n  this.name = errorName;\n  this.message = message;\n  var stack = new Error(message).stack;\n  if (stack !== undefined) {\n   this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n  }\n });\n errorClass.prototype = Object.create(baseErrorType.prototype);\n errorClass.prototype.constructor = errorClass;\n errorClass.prototype.toString = function() {\n  if (this.message === undefined) {\n   return this.name;\n  } else {\n   return this.name + \": \" + this.message;\n  }\n };\n return errorClass;\n}\n\nvar PureVirtualError = undefined;\n\nfunction embind_init_charCodes() {\n var codes = new Array(256);\n for (var i = 0; i < 256; ++i) {\n  codes[i] = String.fromCharCode(i);\n }\n embind_charCodes = codes;\n}\n\nvar embind_charCodes = undefined;\n\nfunction readLatin1String(ptr) {\n var ret = \"\";\n var c = ptr;\n while (HEAPU8[c]) {\n  ret += embind_charCodes[HEAPU8[c++]];\n }\n return ret;\n}\n\nfunction getInheritedInstanceCount() {\n return Object.keys(registeredInstances).length;\n}\n\nfunction getLiveInheritedInstances() {\n var rv = [];\n for (var k in registeredInstances) {\n  if (registeredInstances.hasOwnProperty(k)) {\n   rv.push(registeredInstances[k]);\n  }\n }\n return rv;\n}\n\nvar deletionQueue = [];\n\nfunction flushPendingDeletes() {\n while (deletionQueue.length) {\n  var obj = deletionQueue.pop();\n  obj.$$.deleteScheduled = false;\n  obj[\"delete\"]();\n }\n}\n\nvar delayFunction = undefined;\n\nfunction setDelayFunction(fn) {\n delayFunction = fn;\n if (deletionQueue.length && delayFunction) {\n  delayFunction(flushPendingDeletes);\n }\n}\n\nfunction init_embind() {\n Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n Module[\"setDelayFunction\"] = setDelayFunction;\n}\n\nvar registeredInstances = {};\n\nvar BindingError = undefined;\n\nfunction throwBindingError(message) {\n throw new BindingError(message);\n}\n\nfunction getBasestPointer(class_, ptr) {\n if (ptr === undefined) {\n  throwBindingError(\"ptr should not be undefined\");\n }\n while (class_.baseClass) {\n  ptr = class_.upcast(ptr);\n  class_ = class_.baseClass;\n }\n return ptr;\n}\n\nfunction registerInheritedInstance(class_, ptr, instance) {\n ptr = getBasestPointer(class_, ptr);\n if (registeredInstances.hasOwnProperty(ptr)) {\n  throwBindingError(\"Tried to register registered instance: \" + ptr);\n } else {\n  registeredInstances[ptr] = instance;\n }\n}\n\nfunction requireHandle(handle) {\n if (!handle) {\n  throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n }\n return emval_handle_array[handle].value;\n}\n\nvar registeredTypes = {};\n\nfunction getTypeName(type) {\n var ptr = ___getTypeName(type);\n var rv = readLatin1String(ptr);\n _free(ptr);\n return rv;\n}\n\nfunction requireRegisteredType(rawType, humanName) {\n var impl = registeredTypes[rawType];\n if (undefined === impl) {\n  throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n }\n return impl;\n}\n\nfunction unregisterInheritedInstance(class_, ptr) {\n ptr = getBasestPointer(class_, ptr);\n if (registeredInstances.hasOwnProperty(ptr)) {\n  delete registeredInstances[ptr];\n } else {\n  throwBindingError(\"Tried to unregister unregistered instance: \" + ptr);\n }\n}\n\nfunction detachFinalizer(handle) {}\n\nvar finalizationGroup = false;\n\nfunction runDestructor($$) {\n if ($$.smartPtr) {\n  $$.smartPtrType.rawDestructor($$.smartPtr);\n } else {\n  $$.ptrType.registeredClass.rawDestructor($$.ptr);\n }\n}\n\nfunction releaseClassHandle($$) {\n $$.count.value -= 1;\n var toDelete = 0 === $$.count.value;\n if (toDelete) {\n  runDestructor($$);\n }\n}\n\nfunction attachFinalizer(handle) {\n if (\"undefined\" === typeof FinalizationGroup) {\n  attachFinalizer = function(handle) {\n   return handle;\n  };\n  return handle;\n }\n finalizationGroup = new FinalizationGroup(function(iter) {\n  for (var result = iter.next(); !result.done; result = iter.next()) {\n   var $$ = result.value;\n   if (!$$.ptr) {\n    console.warn(\"object already deleted: \" + $$.ptr);\n   } else {\n    releaseClassHandle($$);\n   }\n  }\n });\n attachFinalizer = function(handle) {\n  finalizationGroup.register(handle, handle.$$, handle.$$);\n  return handle;\n };\n detachFinalizer = function(handle) {\n  finalizationGroup.unregister(handle.$$);\n };\n return attachFinalizer(handle);\n}\n\nfunction __embind_create_inheriting_constructor(constructorName, wrapperType, properties) {\n constructorName = readLatin1String(constructorName);\n wrapperType = requireRegisteredType(wrapperType, \"wrapper\");\n properties = requireHandle(properties);\n var arraySlice = [].slice;\n var registeredClass = wrapperType.registeredClass;\n var wrapperPrototype = registeredClass.instancePrototype;\n var baseClass = registeredClass.baseClass;\n var baseClassPrototype = baseClass.instancePrototype;\n var baseConstructor = registeredClass.baseClass.constructor;\n var ctor = createNamedFunction(constructorName, function() {\n  registeredClass.baseClass.pureVirtualFunctions.forEach(function(name) {\n   if (this[name] === baseClassPrototype[name]) {\n    throw new PureVirtualError(\"Pure virtual function \" + name + \" must be implemented in JavaScript\");\n   }\n  }.bind(this));\n  Object.defineProperty(this, \"__parent\", {\n   value: wrapperPrototype\n  });\n  this[\"__construct\"].apply(this, arraySlice.call(arguments));\n });\n wrapperPrototype[\"__construct\"] = function __construct() {\n  if (this === wrapperPrototype) {\n   throwBindingError(\"Pass correct 'this' to __construct\");\n  }\n  var inner = baseConstructor[\"implement\"].apply(undefined, [ this ].concat(arraySlice.call(arguments)));\n  detachFinalizer(inner);\n  var $$ = inner.$$;\n  inner[\"notifyOnDestruction\"]();\n  $$.preservePointerOnDelete = true;\n  Object.defineProperties(this, {\n   $$: {\n    value: $$\n   }\n  });\n  attachFinalizer(this);\n  registerInheritedInstance(registeredClass, $$.ptr, this);\n };\n wrapperPrototype[\"__destruct\"] = function __destruct() {\n  if (this === wrapperPrototype) {\n   throwBindingError(\"Pass correct 'this' to __destruct\");\n  }\n  detachFinalizer(this);\n  unregisterInheritedInstance(registeredClass, this.$$.ptr);\n };\n ctor.prototype = Object.create(wrapperPrototype);\n for (var p in properties) {\n  ctor.prototype[p] = properties[p];\n }\n return __emval_register(ctor);\n}\n\nvar structRegistrations = {};\n\nfunction runDestructors(destructors) {\n while (destructors.length) {\n  var ptr = destructors.pop();\n  var del = destructors.pop();\n  del(ptr);\n }\n}\n\nfunction simpleReadValueFromPointer(pointer) {\n return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n}\n\nvar awaitingDependencies = {};\n\nvar typeDependencies = {};\n\nvar InternalError = undefined;\n\nfunction throwInternalError(message) {\n throw new InternalError(message);\n}\n\nfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n myTypes.forEach(function(type) {\n  typeDependencies[type] = dependentTypes;\n });\n function onComplete(typeConverters) {\n  var myTypeConverters = getTypeConverters(typeConverters);\n  if (myTypeConverters.length !== myTypes.length) {\n   throwInternalError(\"Mismatched type converter count\");\n  }\n  for (var i = 0; i < myTypes.length; ++i) {\n   registerType(myTypes[i], myTypeConverters[i]);\n  }\n }\n var typeConverters = new Array(dependentTypes.length);\n var unregisteredTypes = [];\n var registered = 0;\n dependentTypes.forEach(function(dt, i) {\n  if (registeredTypes.hasOwnProperty(dt)) {\n   typeConverters[i] = registeredTypes[dt];\n  } else {\n   unregisteredTypes.push(dt);\n   if (!awaitingDependencies.hasOwnProperty(dt)) {\n    awaitingDependencies[dt] = [];\n   }\n   awaitingDependencies[dt].push(function() {\n    typeConverters[i] = registeredTypes[dt];\n    ++registered;\n    if (registered === unregisteredTypes.length) {\n     onComplete(typeConverters);\n    }\n   });\n  }\n });\n if (0 === unregisteredTypes.length) {\n  onComplete(typeConverters);\n }\n}\n\nfunction __embind_finalize_value_object(structType) {\n var reg = structRegistrations[structType];\n delete structRegistrations[structType];\n var rawConstructor = reg.rawConstructor;\n var rawDestructor = reg.rawDestructor;\n var fieldRecords = reg.fields;\n var fieldTypes = fieldRecords.map(function(field) {\n  return field.getterReturnType;\n }).concat(fieldRecords.map(function(field) {\n  return field.setterArgumentType;\n }));\n whenDependentTypesAreResolved([ structType ], fieldTypes, function(fieldTypes) {\n  var fields = {};\n  fieldRecords.forEach(function(field, i) {\n   var fieldName = field.fieldName;\n   var getterReturnType = fieldTypes[i];\n   var getter = field.getter;\n   var getterContext = field.getterContext;\n   var setterArgumentType = fieldTypes[i + fieldRecords.length];\n   var setter = field.setter;\n   var setterContext = field.setterContext;\n   fields[fieldName] = {\n    read: function(ptr) {\n     return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n    },\n    write: function(ptr, o) {\n     var destructors = [];\n     setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n     runDestructors(destructors);\n    }\n   };\n  });\n  return [ {\n   name: reg.name,\n   \"fromWireType\": function(ptr) {\n    var rv = {};\n    for (var i in fields) {\n     rv[i] = fields[i].read(ptr);\n    }\n    rawDestructor(ptr);\n    return rv;\n   },\n   \"toWireType\": function(destructors, o) {\n    for (var fieldName in fields) {\n     if (!(fieldName in o)) {\n      throw new TypeError('Missing field:  \"' + fieldName + '\"');\n     }\n    }\n    var ptr = rawConstructor();\n    for (fieldName in fields) {\n     fields[fieldName].write(ptr, o[fieldName]);\n    }\n    if (destructors !== null) {\n     destructors.push(rawDestructor, ptr);\n    }\n    return ptr;\n   },\n   \"argPackAdvance\": 8,\n   \"readValueFromPointer\": simpleReadValueFromPointer,\n   destructorFunction: rawDestructor\n  } ];\n });\n}\n\nfunction getShiftFromSize(size) {\n switch (size) {\n case 1:\n  return 0;\n\n case 2:\n  return 1;\n\n case 4:\n  return 2;\n\n case 8:\n  return 3;\n\n default:\n  throw new TypeError(\"Unknown type size: \" + size);\n }\n}\n\nfunction registerType(rawType, registeredInstance, options) {\n options = options || {};\n if (!(\"argPackAdvance\" in registeredInstance)) {\n  throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n }\n var name = registeredInstance.name;\n if (!rawType) {\n  throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n }\n if (registeredTypes.hasOwnProperty(rawType)) {\n  if (options.ignoreDuplicateRegistrations) {\n   return;\n  } else {\n   throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n  }\n }\n registeredTypes[rawType] = registeredInstance;\n delete typeDependencies[rawType];\n if (awaitingDependencies.hasOwnProperty(rawType)) {\n  var callbacks = awaitingDependencies[rawType];\n  delete awaitingDependencies[rawType];\n  callbacks.forEach(function(cb) {\n   cb();\n  });\n }\n}\n\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(wt) {\n   return !!wt;\n  },\n  \"toWireType\": function(destructors, o) {\n   return o ? trueValue : falseValue;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": function(pointer) {\n   var heap;\n   if (size === 1) {\n    heap = HEAP8;\n   } else if (size === 2) {\n    heap = HEAP16;\n   } else if (size === 4) {\n    heap = HEAP32;\n   } else {\n    throw new TypeError(\"Unknown boolean type size: \" + name);\n   }\n   return this[\"fromWireType\"](heap[pointer >> shift]);\n  },\n  destructorFunction: null\n });\n}\n\nfunction ClassHandle_isAliasOf(other) {\n if (!(this instanceof ClassHandle)) {\n  return false;\n }\n if (!(other instanceof ClassHandle)) {\n  return false;\n }\n var leftClass = this.$$.ptrType.registeredClass;\n var left = this.$$.ptr;\n var rightClass = other.$$.ptrType.registeredClass;\n var right = other.$$.ptr;\n while (leftClass.baseClass) {\n  left = leftClass.upcast(left);\n  leftClass = leftClass.baseClass;\n }\n while (rightClass.baseClass) {\n  right = rightClass.upcast(right);\n  rightClass = rightClass.baseClass;\n }\n return leftClass === rightClass && left === right;\n}\n\nfunction shallowCopyInternalPointer(o) {\n return {\n  count: o.count,\n  deleteScheduled: o.deleteScheduled,\n  preservePointerOnDelete: o.preservePointerOnDelete,\n  ptr: o.ptr,\n  ptrType: o.ptrType,\n  smartPtr: o.smartPtr,\n  smartPtrType: o.smartPtrType\n };\n}\n\nfunction throwInstanceAlreadyDeleted(obj) {\n function getInstanceTypeName(handle) {\n  return handle.$$.ptrType.registeredClass.name;\n }\n throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n}\n\nfunction ClassHandle_clone() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.preservePointerOnDelete) {\n  this.$$.count.value += 1;\n  return this;\n } else {\n  var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n   $$: {\n    value: shallowCopyInternalPointer(this.$$)\n   }\n  }));\n  clone.$$.count.value += 1;\n  clone.$$.deleteScheduled = false;\n  return clone;\n }\n}\n\nfunction ClassHandle_delete() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n  throwBindingError(\"Object already scheduled for deletion\");\n }\n detachFinalizer(this);\n releaseClassHandle(this.$$);\n if (!this.$$.preservePointerOnDelete) {\n  this.$$.smartPtr = undefined;\n  this.$$.ptr = undefined;\n }\n}\n\nfunction ClassHandle_isDeleted() {\n return !this.$$.ptr;\n}\n\nfunction ClassHandle_deleteLater() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n  throwBindingError(\"Object already scheduled for deletion\");\n }\n deletionQueue.push(this);\n if (deletionQueue.length === 1 && delayFunction) {\n  delayFunction(flushPendingDeletes);\n }\n this.$$.deleteScheduled = true;\n return this;\n}\n\nfunction init_ClassHandle() {\n ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n}\n\nfunction ClassHandle() {}\n\nvar registeredPointers = {};\n\nfunction ensureOverloadTable(proto, methodName, humanName) {\n if (undefined === proto[methodName].overloadTable) {\n  var prevFunc = proto[methodName];\n  proto[methodName] = function() {\n   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n    throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n   }\n   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n  };\n  proto[methodName].overloadTable = [];\n  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n }\n}\n\nfunction exposePublicSymbol(name, value, numArguments) {\n if (Module.hasOwnProperty(name)) {\n  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n   throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n  }\n  ensureOverloadTable(Module, name, name);\n  if (Module.hasOwnProperty(numArguments)) {\n   throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n  }\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  if (undefined !== numArguments) {\n   Module[name].numArguments = numArguments;\n  }\n }\n}\n\nfunction RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n this.name = name;\n this.constructor = constructor;\n this.instancePrototype = instancePrototype;\n this.rawDestructor = rawDestructor;\n this.baseClass = baseClass;\n this.getActualType = getActualType;\n this.upcast = upcast;\n this.downcast = downcast;\n this.pureVirtualFunctions = [];\n}\n\nfunction upcastPointer(ptr, ptrClass, desiredClass) {\n while (ptrClass !== desiredClass) {\n  if (!ptrClass.upcast) {\n   throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n  }\n  ptr = ptrClass.upcast(ptr);\n  ptrClass = ptrClass.baseClass;\n }\n return ptr;\n}\n\nfunction constNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\nfunction genericPointerToWireType(destructors, handle) {\n var ptr;\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  if (this.isSmartPointer) {\n   ptr = this.rawConstructor();\n   if (destructors !== null) {\n    destructors.push(this.rawDestructor, ptr);\n   }\n   return ptr;\n  } else {\n   return 0;\n  }\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n if (!this.isConst && handle.$$.ptrType.isConst) {\n  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n if (this.isSmartPointer) {\n  if (undefined === handle.$$.smartPtr) {\n   throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n  }\n  switch (this.sharingPolicy) {\n  case 0:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n   }\n   break;\n\n  case 1:\n   ptr = handle.$$.smartPtr;\n   break;\n\n  case 2:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    var clonedHandle = handle[\"clone\"]();\n    ptr = this.rawShare(ptr, __emval_register(function() {\n     clonedHandle[\"delete\"]();\n    }));\n    if (destructors !== null) {\n     destructors.push(this.rawDestructor, ptr);\n    }\n   }\n   break;\n\n  default:\n   throwBindingError(\"Unsupporting sharing policy\");\n  }\n }\n return ptr;\n}\n\nfunction nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n if (handle.$$.ptrType.isConst) {\n  throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\nfunction RegisteredPointer_getPointee(ptr) {\n if (this.rawGetPointee) {\n  ptr = this.rawGetPointee(ptr);\n }\n return ptr;\n}\n\nfunction RegisteredPointer_destructor(ptr) {\n if (this.rawDestructor) {\n  this.rawDestructor(ptr);\n }\n}\n\nfunction RegisteredPointer_deleteObject(handle) {\n if (handle !== null) {\n  handle[\"delete\"]();\n }\n}\n\nfunction downcastPointer(ptr, ptrClass, desiredClass) {\n if (ptrClass === desiredClass) {\n  return ptr;\n }\n if (undefined === desiredClass.baseClass) {\n  return null;\n }\n var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n if (rv === null) {\n  return null;\n }\n return desiredClass.downcast(rv);\n}\n\nfunction getInheritedInstance(class_, ptr) {\n ptr = getBasestPointer(class_, ptr);\n return registeredInstances[ptr];\n}\n\nfunction makeClassHandle(prototype, record) {\n if (!record.ptrType || !record.ptr) {\n  throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n }\n var hasSmartPtrType = !!record.smartPtrType;\n var hasSmartPtr = !!record.smartPtr;\n if (hasSmartPtrType !== hasSmartPtr) {\n  throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n }\n record.count = {\n  value: 1\n };\n return attachFinalizer(Object.create(prototype, {\n  $$: {\n   value: record\n  }\n }));\n}\n\nfunction RegisteredPointer_fromWireType(ptr) {\n var rawPointer = this.getPointee(ptr);\n if (!rawPointer) {\n  this.destructor(ptr);\n  return null;\n }\n var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n if (undefined !== registeredInstance) {\n  if (0 === registeredInstance.$$.count.value) {\n   registeredInstance.$$.ptr = rawPointer;\n   registeredInstance.$$.smartPtr = ptr;\n   return registeredInstance[\"clone\"]();\n  } else {\n   var rv = registeredInstance[\"clone\"]();\n   this.destructor(ptr);\n   return rv;\n  }\n }\n function makeDefaultHandle() {\n  if (this.isSmartPointer) {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this.pointeeType,\n    ptr: rawPointer,\n    smartPtrType: this,\n    smartPtr: ptr\n   });\n  } else {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this,\n    ptr: ptr\n   });\n  }\n }\n var actualType = this.registeredClass.getActualType(rawPointer);\n var registeredPointerRecord = registeredPointers[actualType];\n if (!registeredPointerRecord) {\n  return makeDefaultHandle.call(this);\n }\n var toType;\n if (this.isConst) {\n  toType = registeredPointerRecord.constPointerType;\n } else {\n  toType = registeredPointerRecord.pointerType;\n }\n var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n if (dp === null) {\n  return makeDefaultHandle.call(this);\n }\n if (this.isSmartPointer) {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp,\n   smartPtrType: this,\n   smartPtr: ptr\n  });\n } else {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp\n  });\n }\n}\n\nfunction init_RegisteredPointer() {\n RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n}\n\nfunction RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n this.name = name;\n this.registeredClass = registeredClass;\n this.isReference = isReference;\n this.isConst = isConst;\n this.isSmartPointer = isSmartPointer;\n this.pointeeType = pointeeType;\n this.sharingPolicy = sharingPolicy;\n this.rawGetPointee = rawGetPointee;\n this.rawConstructor = rawConstructor;\n this.rawShare = rawShare;\n this.rawDestructor = rawDestructor;\n if (!isSmartPointer && registeredClass.baseClass === undefined) {\n  if (isConst) {\n   this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  } else {\n   this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  }\n } else {\n  this[\"toWireType\"] = genericPointerToWireType;\n }\n}\n\nfunction replacePublicSymbol(name, value, numArguments) {\n if (!Module.hasOwnProperty(name)) {\n  throwInternalError(\"Replacing nonexistant public symbol\");\n }\n if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  Module[name].argCount = numArguments;\n }\n}\n\nfunction dynCallLegacy(sig, ptr, args) {\n var f = Module[\"dynCall_\" + sig];\n return args && args.length ? f.apply(null, [ ptr ].concat(args)) : f.call(null, ptr);\n}\n\nfunction dynCall(sig, ptr, args) {\n if (sig.indexOf(\"j\") != -1) {\n  return dynCallLegacy(sig, ptr, args);\n }\n return wasmTable.get(ptr).apply(null, args);\n}\n\nfunction getDynCaller(sig, ptr) {\n var argCache = [];\n return function() {\n  argCache.length = arguments.length;\n  for (var i = 0; i < arguments.length; i++) {\n   argCache[i] = arguments[i];\n  }\n  return dynCall(sig, ptr, argCache);\n };\n}\n\nfunction embind__requireFunction(signature, rawFunction) {\n signature = readLatin1String(signature);\n function makeDynCaller() {\n  if (signature.indexOf(\"j\") != -1) {\n   return getDynCaller(signature, rawFunction);\n  }\n  return wasmTable.get(rawFunction);\n }\n var fp = makeDynCaller();\n if (typeof fp !== \"function\") {\n  throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n }\n return fp;\n}\n\nvar UnboundTypeError = undefined;\n\nfunction throwUnboundTypeError(message, types) {\n var unboundTypes = [];\n var seen = {};\n function visit(type) {\n  if (seen[type]) {\n   return;\n  }\n  if (registeredTypes[type]) {\n   return;\n  }\n  if (typeDependencies[type]) {\n   typeDependencies[type].forEach(visit);\n   return;\n  }\n  unboundTypes.push(type);\n  seen[type] = true;\n }\n types.forEach(visit);\n throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([ \", \" ]));\n}\n\nfunction __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n name = readLatin1String(name);\n getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n if (upcast) {\n  upcast = embind__requireFunction(upcastSignature, upcast);\n }\n if (downcast) {\n  downcast = embind__requireFunction(downcastSignature, downcast);\n }\n rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n var legalFunctionName = makeLegalFunctionName(name);\n exposePublicSymbol(legalFunctionName, function() {\n  throwUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [ baseClassRawType ]);\n });\n whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], function(base) {\n  base = base[0];\n  var baseClass;\n  var basePrototype;\n  if (baseClassRawType) {\n   baseClass = base.registeredClass;\n   basePrototype = baseClass.instancePrototype;\n  } else {\n   basePrototype = ClassHandle.prototype;\n  }\n  var constructor = createNamedFunction(legalFunctionName, function() {\n   if (Object.getPrototypeOf(this) !== instancePrototype) {\n    throw new BindingError(\"Use 'new' to construct \" + name);\n   }\n   if (undefined === registeredClass.constructor_body) {\n    throw new BindingError(name + \" has no accessible constructor\");\n   }\n   var body = registeredClass.constructor_body[arguments.length];\n   if (undefined === body) {\n    throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n   }\n   return body.apply(this, arguments);\n  });\n  var instancePrototype = Object.create(basePrototype, {\n   constructor: {\n    value: constructor\n   }\n  });\n  constructor.prototype = instancePrototype;\n  var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n  var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n  var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n  var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n  registeredPointers[rawType] = {\n   pointerType: pointerConverter,\n   constPointerType: constPointerConverter\n  };\n  replacePublicSymbol(legalFunctionName, constructor);\n  return [ referenceConverter, pointerConverter, constPointerConverter ];\n });\n}\n\nfunction new_(constructor, argumentList) {\n if (!(constructor instanceof Function)) {\n  throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n }\n var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\n dummy.prototype = constructor.prototype;\n var obj = new dummy();\n var r = constructor.apply(obj, argumentList);\n return r instanceof Object ? r : obj;\n}\n\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n var argCount = argTypes.length;\n if (argCount < 2) {\n  throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n }\n var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n var needsDestructorStack = false;\n for (var i = 1; i < argTypes.length; ++i) {\n  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n   needsDestructorStack = true;\n   break;\n  }\n }\n var returns = argTypes[0].name !== \"void\";\n var argsList = \"\";\n var argsListWired = \"\";\n for (var i = 0; i < argCount - 2; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n }\n var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n if (needsDestructorStack) {\n  invokerFnBody += \"var destructors = [];\\n\";\n }\n var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n var args1 = [ \"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\" ];\n var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];\n if (isClassMethodFunc) {\n  invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n }\n for (var i = 0; i < argCount - 2; ++i) {\n  invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n  args1.push(\"argType\" + i);\n  args2.push(argTypes[i + 2]);\n }\n if (isClassMethodFunc) {\n  argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n }\n invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n if (needsDestructorStack) {\n  invokerFnBody += \"runDestructors(destructors);\\n\";\n } else {\n  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n   var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n   if (argTypes[i].destructorFunction !== null) {\n    invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n    args1.push(paramName + \"_dtor\");\n    args2.push(argTypes[i].destructorFunction);\n   }\n  }\n }\n if (returns) {\n  invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n } else {}\n invokerFnBody += \"}\\n\";\n args1.push(invokerFnBody);\n var invokerFunction = new_(Function, args1).apply(null, args2);\n return invokerFunction;\n}\n\nfunction heap32VectorToArray(count, firstElement) {\n var array = [];\n for (var i = 0; i < count; i++) {\n  array.push(HEAP32[(firstElement >> 2) + i]);\n }\n return array;\n}\n\nfunction __embind_register_class_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, fn) {\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n methodName = readLatin1String(methodName);\n rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + methodName;\n  function unboundTypesHandler() {\n   throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n  }\n  var proto = classType.registeredClass.constructor;\n  if (undefined === proto[methodName]) {\n   unboundTypesHandler.argCount = argCount - 1;\n   proto[methodName] = unboundTypesHandler;\n  } else {\n   ensureOverloadTable(proto, methodName, humanName);\n   proto[methodName].overloadTable[argCount - 1] = unboundTypesHandler;\n  }\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\n   var func = craftInvokerFunction(humanName, invokerArgsArray, null, rawInvoker, fn);\n   if (undefined === proto[methodName].overloadTable) {\n    func.argCount = argCount - 1;\n    proto[methodName] = func;\n   } else {\n    proto[methodName].overloadTable[argCount - 1] = func;\n   }\n   return [];\n  });\n  return [];\n });\n}\n\nfunction validateThis(this_, classType, humanName) {\n if (!(this_ instanceof Object)) {\n  throwBindingError(humanName + ' with invalid \"this\": ' + this_);\n }\n if (!(this_ instanceof classType.registeredClass.constructor)) {\n  throwBindingError(humanName + ' incompatible with \"this\" of type ' + this_.constructor.name);\n }\n if (!this_.$$.ptr) {\n  throwBindingError(\"cannot call emscripten binding method \" + humanName + \" on deleted object\");\n }\n return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);\n}\n\nfunction __embind_register_class_class_property(rawClassType, fieldName, rawFieldType, rawFieldPtr, getterSignature, getter, setterSignature, setter) {\n fieldName = readLatin1String(fieldName);\n getter = embind__requireFunction(getterSignature, getter);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + fieldName;\n  var desc = {\n   get: function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ rawFieldType ]);\n   },\n   enumerable: true,\n   configurable: true\n  };\n  if (setter) {\n   desc.set = function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ rawFieldType ]);\n   };\n  } else {\n   desc.set = function(v) {\n    throwBindingError(humanName + \" is a read-only property\");\n   };\n  }\n  Object.defineProperty(classType.registeredClass.constructor, fieldName, desc);\n  whenDependentTypesAreResolved([], [ rawFieldType ], function(fieldType) {\n   fieldType = fieldType[0];\n   var desc = {\n    get: function() {\n     return fieldType[\"fromWireType\"](getter(rawFieldPtr));\n    },\n    enumerable: true\n   };\n   if (setter) {\n    setter = embind__requireFunction(setterSignature, setter);\n    desc.set = function(v) {\n     var destructors = [];\n     setter(rawFieldPtr, fieldType[\"toWireType\"](destructors, v));\n     runDestructors(destructors);\n    };\n   }\n   Object.defineProperty(classType.registeredClass.constructor, fieldName, desc);\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n assert(argCount > 0);\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n invoker = embind__requireFunction(invokerSignature, invoker);\n var args = [ rawConstructor ];\n var destructors = [];\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = \"constructor \" + classType.name;\n  if (undefined === classType.registeredClass.constructor_body) {\n   classType.registeredClass.constructor_body = [];\n  }\n  if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n   throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n  }\n  classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n   throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n  };\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n    if (arguments.length !== argCount - 1) {\n     throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n    }\n    destructors.length = 0;\n    args.length = argCount;\n    for (var i = 1; i < argCount; ++i) {\n     args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n    }\n    var ptr = invoker.apply(null, args);\n    runDestructors(destructors);\n    return argTypes[0][\"fromWireType\"](ptr);\n   };\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n methodName = readLatin1String(methodName);\n rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + methodName;\n  if (isPureVirtual) {\n   classType.registeredClass.pureVirtualFunctions.push(methodName);\n  }\n  function unboundTypesHandler() {\n   throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n  }\n  var proto = classType.registeredClass.instancePrototype;\n  var method = proto[methodName];\n  if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n   unboundTypesHandler.argCount = argCount - 2;\n   unboundTypesHandler.className = classType.name;\n   proto[methodName] = unboundTypesHandler;\n  } else {\n   ensureOverloadTable(proto, methodName, humanName);\n   proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n  }\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n   if (undefined === proto[methodName].overloadTable) {\n    memberFunction.argCount = argCount - 2;\n    proto[methodName] = memberFunction;\n   } else {\n    proto[methodName].overloadTable[argCount - 2] = memberFunction;\n   }\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_property(classType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n fieldName = readLatin1String(fieldName);\n getter = embind__requireFunction(getterSignature, getter);\n whenDependentTypesAreResolved([], [ classType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + fieldName;\n  var desc = {\n   get: function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ getterReturnType, setterArgumentType ]);\n   },\n   enumerable: true,\n   configurable: true\n  };\n  if (setter) {\n   desc.set = function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ getterReturnType, setterArgumentType ]);\n   };\n  } else {\n   desc.set = function(v) {\n    throwBindingError(humanName + \" is a read-only property\");\n   };\n  }\n  Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n  whenDependentTypesAreResolved([], setter ? [ getterReturnType, setterArgumentType ] : [ getterReturnType ], function(types) {\n   var getterReturnType = types[0];\n   var desc = {\n    get: function() {\n     var ptr = validateThis(this, classType, humanName + \" getter\");\n     return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n    },\n    enumerable: true\n   };\n   if (setter) {\n    setter = embind__requireFunction(setterSignature, setter);\n    var setterArgumentType = types[1];\n    desc.set = function(v) {\n     var ptr = validateThis(this, classType, humanName + \" setter\");\n     var destructors = [];\n     setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, v));\n     runDestructors(destructors);\n    };\n   }\n   Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __emval_decref(handle) {\n if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n  emval_handle_array[handle] = undefined;\n  emval_free_list.push(handle);\n }\n}\n\nfunction __embind_register_emval(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(handle) {\n   var rv = emval_handle_array[handle].value;\n   __emval_decref(handle);\n   return rv;\n  },\n  \"toWireType\": function(destructors, value) {\n   return __emval_register(value);\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: null\n });\n}\n\nfunction enumReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return function(pointer) {\n   var heap = signed ? HEAP8 : HEAPU8;\n   return this[\"fromWireType\"](heap[pointer]);\n  };\n\n case 1:\n  return function(pointer) {\n   var heap = signed ? HEAP16 : HEAPU16;\n   return this[\"fromWireType\"](heap[pointer >> 1]);\n  };\n\n case 2:\n  return function(pointer) {\n   var heap = signed ? HEAP32 : HEAPU32;\n   return this[\"fromWireType\"](heap[pointer >> 2]);\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_enum(rawType, name, size, isSigned) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n function ctor() {}\n ctor.values = {};\n registerType(rawType, {\n  name: name,\n  constructor: ctor,\n  \"fromWireType\": function(c) {\n   return this.constructor.values[c];\n  },\n  \"toWireType\": function(destructors, c) {\n   return c.value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": enumReadValueFromPointer(name, shift, isSigned),\n  destructorFunction: null\n });\n exposePublicSymbol(name, ctor);\n}\n\nfunction __embind_register_enum_value(rawEnumType, name, enumValue) {\n var enumType = requireRegisteredType(rawEnumType, \"enum\");\n name = readLatin1String(name);\n var Enum = enumType.constructor;\n var Value = Object.create(enumType.constructor.prototype, {\n  value: {\n   value: enumValue\n  },\n  constructor: {\n   value: createNamedFunction(enumType.name + \"_\" + name, function() {})\n  }\n });\n Enum.values[enumValue] = Value;\n Enum[name] = Value;\n}\n\nfunction _embind_repr(v) {\n if (v === null) {\n  return \"null\";\n }\n var t = typeof v;\n if (t === \"object\" || t === \"array\" || t === \"function\") {\n  return v.toString();\n } else {\n  return \"\" + v;\n }\n}\n\nfunction floatReadValueFromPointer(name, shift) {\n switch (shift) {\n case 2:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n  };\n\n case 3:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n  };\n\n default:\n  throw new TypeError(\"Unknown float type: \" + name);\n }\n}\n\nfunction __embind_register_float(rawType, name, size) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   return value;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n    throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n   }\n   return value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n name = readLatin1String(name);\n rawInvoker = embind__requireFunction(signature, rawInvoker);\n exposePublicSymbol(name, function() {\n  throwUnboundTypeError(\"Cannot call \" + name + \" due to unbound types\", argTypes);\n }, argCount - 1);\n whenDependentTypesAreResolved([], argTypes, function(argTypes) {\n  var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\n  replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n  return [];\n });\n}\n\nfunction integerReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return signed ? function readS8FromPointer(pointer) {\n   return HEAP8[pointer];\n  } : function readU8FromPointer(pointer) {\n   return HEAPU8[pointer];\n  };\n\n case 1:\n  return signed ? function readS16FromPointer(pointer) {\n   return HEAP16[pointer >> 1];\n  } : function readU16FromPointer(pointer) {\n   return HEAPU16[pointer >> 1];\n  };\n\n case 2:\n  return signed ? function readS32FromPointer(pointer) {\n   return HEAP32[pointer >> 2];\n  } : function readU32FromPointer(pointer) {\n   return HEAPU32[pointer >> 2];\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n name = readLatin1String(name);\n if (maxRange === -1) {\n  maxRange = 4294967295;\n }\n var shift = getShiftFromSize(size);\n var fromWireType = function(value) {\n  return value;\n };\n if (minRange === 0) {\n  var bitshift = 32 - 8 * size;\n  fromWireType = function(value) {\n   return value << bitshift >>> bitshift;\n  };\n }\n var isUnsignedType = name.indexOf(\"unsigned\") != -1;\n registerType(primitiveType, {\n  name: name,\n  \"fromWireType\": fromWireType,\n  \"toWireType\": function(destructors, value) {\n   if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n    throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n   }\n   if (value < minRange || value > maxRange) {\n    throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n   }\n   return isUnsignedType ? value >>> 0 : value | 0;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\n var TA = typeMapping[dataTypeIndex];\n function decodeMemoryView(handle) {\n  handle = handle >> 2;\n  var heap = HEAPU32;\n  var size = heap[handle];\n  var data = heap[handle + 1];\n  return new TA(buffer, data, size);\n }\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": decodeMemoryView,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": decodeMemoryView\n }, {\n  ignoreDuplicateRegistrations: true\n });\n}\n\nfunction __embind_register_std_string(rawType, name) {\n name = readLatin1String(name);\n var stdStringIsUTF8 = name === \"std::string\";\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >> 2];\n   var str;\n   if (stdStringIsUTF8) {\n    var decodeStartPtr = value + 4;\n    for (var i = 0; i <= length; ++i) {\n     var currentBytePtr = value + 4 + i;\n     if (i == length || HEAPU8[currentBytePtr] == 0) {\n      var maxRead = currentBytePtr - decodeStartPtr;\n      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n      if (str === undefined) {\n       str = stringSegment;\n      } else {\n       str += String.fromCharCode(0);\n       str += stringSegment;\n      }\n      decodeStartPtr = currentBytePtr + 1;\n     }\n    }\n   } else {\n    var a = new Array(length);\n    for (var i = 0; i < length; ++i) {\n     a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);\n    }\n    str = a.join(\"\");\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value);\n   }\n   var getLength;\n   var valueIsOfTypeString = typeof value === \"string\";\n   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n    throwBindingError(\"Cannot pass non-string to std::string\");\n   }\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    getLength = function() {\n     return lengthBytesUTF8(value);\n    };\n   } else {\n    getLength = function() {\n     return value.length;\n    };\n   }\n   var length = getLength();\n   var ptr = _malloc(4 + length + 1);\n   HEAPU32[ptr >> 2] = length;\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    stringToUTF8(value, ptr + 4, length + 1);\n   } else {\n    if (valueIsOfTypeString) {\n     for (var i = 0; i < length; ++i) {\n      var charCode = value.charCodeAt(i);\n      if (charCode > 255) {\n       _free(ptr);\n       throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n      }\n      HEAPU8[ptr + 4 + i] = charCode;\n     }\n    } else {\n     for (var i = 0; i < length; ++i) {\n      HEAPU8[ptr + 4 + i] = value[i];\n     }\n    }\n   }\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_std_wstring(rawType, charSize, name) {\n name = readLatin1String(name);\n var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n if (charSize === 2) {\n  decodeString = UTF16ToString;\n  encodeString = stringToUTF16;\n  lengthBytesUTF = lengthBytesUTF16;\n  getHeap = function() {\n   return HEAPU16;\n  };\n  shift = 1;\n } else if (charSize === 4) {\n  decodeString = UTF32ToString;\n  encodeString = stringToUTF32;\n  lengthBytesUTF = lengthBytesUTF32;\n  getHeap = function() {\n   return HEAPU32;\n  };\n  shift = 2;\n }\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >> 2];\n   var HEAP = getHeap();\n   var str;\n   var decodeStartPtr = value + 4;\n   for (var i = 0; i <= length; ++i) {\n    var currentBytePtr = value + 4 + i * charSize;\n    if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n     var maxReadBytes = currentBytePtr - decodeStartPtr;\n     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n     if (str === undefined) {\n      str = stringSegment;\n     } else {\n      str += String.fromCharCode(0);\n      str += stringSegment;\n     }\n     decodeStartPtr = currentBytePtr + charSize;\n    }\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (!(typeof value === \"string\")) {\n    throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n   }\n   var length = lengthBytesUTF(value);\n   var ptr = _malloc(4 + length + charSize);\n   HEAPU32[ptr >> 2] = length >> shift;\n   encodeString(value, ptr + 4, length + charSize);\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_value_object(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n structRegistrations[rawType] = {\n  name: readLatin1String(name),\n  rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n  rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n  fields: []\n };\n}\n\nfunction __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n structRegistrations[structType].fields.push({\n  fieldName: readLatin1String(fieldName),\n  getterReturnType: getterReturnType,\n  getter: embind__requireFunction(getterSignature, getter),\n  getterContext: getterContext,\n  setterArgumentType: setterArgumentType,\n  setter: embind__requireFunction(setterSignature, setter),\n  setterContext: setterContext\n });\n}\n\nfunction __embind_register_void(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  isVoid: true,\n  name: name,\n  \"argPackAdvance\": 0,\n  \"fromWireType\": function() {\n   return undefined;\n  },\n  \"toWireType\": function(destructors, o) {\n   return undefined;\n  }\n });\n}\n\nfunction __emval_as(handle, returnType, destructorsRef) {\n handle = requireHandle(handle);\n returnType = requireRegisteredType(returnType, \"emval::as\");\n var destructors = [];\n var rd = __emval_register(destructors);\n HEAP32[destructorsRef >> 2] = rd;\n return returnType[\"toWireType\"](destructors, handle);\n}\n\nfunction __emval_allocateDestructors(destructorsRef) {\n var destructors = [];\n HEAP32[destructorsRef >> 2] = __emval_register(destructors);\n return destructors;\n}\n\nvar emval_symbols = {};\n\nfunction getStringOrSymbol(address) {\n var symbol = emval_symbols[address];\n if (symbol === undefined) {\n  return readLatin1String(address);\n } else {\n  return symbol;\n }\n}\n\nvar emval_methodCallers = [];\n\nfunction __emval_call_method(caller, handle, methodName, destructorsRef, args) {\n caller = emval_methodCallers[caller];\n handle = requireHandle(handle);\n methodName = getStringOrSymbol(methodName);\n return caller(handle, methodName, __emval_allocateDestructors(destructorsRef), args);\n}\n\nfunction __emval_call_void_method(caller, handle, methodName, args) {\n caller = emval_methodCallers[caller];\n handle = requireHandle(handle);\n methodName = getStringOrSymbol(methodName);\n caller(handle, methodName, null, args);\n}\n\nfunction __emval_addMethodCaller(caller) {\n var id = emval_methodCallers.length;\n emval_methodCallers.push(caller);\n return id;\n}\n\nfunction __emval_lookupTypes(argCount, argTypes) {\n var a = new Array(argCount);\n for (var i = 0; i < argCount; ++i) {\n  a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i], \"parameter \" + i);\n }\n return a;\n}\n\nfunction __emval_get_method_caller(argCount, argTypes) {\n var types = __emval_lookupTypes(argCount, argTypes);\n var retType = types[0];\n var signatureName = retType.name + \"_$\" + types.slice(1).map(function(t) {\n  return t.name;\n }).join(\"_\") + \"$\";\n var params = [ \"retType\" ];\n var args = [ retType ];\n var argsList = \"\";\n for (var i = 0; i < argCount - 1; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  params.push(\"argType\" + i);\n  args.push(types[1 + i]);\n }\n var functionName = makeLegalFunctionName(\"methodCaller_\" + signatureName);\n var functionBody = \"return function \" + functionName + \"(handle, name, destructors, args) {\\n\";\n var offset = 0;\n for (var i = 0; i < argCount - 1; ++i) {\n  functionBody += \"    var arg\" + i + \" = argType\" + i + \".readValueFromPointer(args\" + (offset ? \"+\" + offset : \"\") + \");\\n\";\n  offset += types[i + 1][\"argPackAdvance\"];\n }\n functionBody += \"    var rv = handle[name](\" + argsList + \");\\n\";\n for (var i = 0; i < argCount - 1; ++i) {\n  if (types[i + 1][\"deleteObject\"]) {\n   functionBody += \"    argType\" + i + \".deleteObject(arg\" + i + \");\\n\";\n  }\n }\n if (!retType.isVoid) {\n  functionBody += \"    return retType.toWireType(destructors, rv);\\n\";\n }\n functionBody += \"};\\n\";\n params.push(functionBody);\n var invokerFunction = new_(Function, params).apply(null, args);\n return __emval_addMethodCaller(invokerFunction);\n}\n\nfunction __emval_get_module_property(name) {\n name = getStringOrSymbol(name);\n return __emval_register(Module[name]);\n}\n\nfunction __emval_get_property(handle, key) {\n handle = requireHandle(handle);\n key = requireHandle(key);\n return __emval_register(handle[key]);\n}\n\nfunction __emval_incref(handle) {\n if (handle > 4) {\n  emval_handle_array[handle].refcount += 1;\n }\n}\n\nfunction __emval_new_cstring(v) {\n return __emval_register(getStringOrSymbol(v));\n}\n\nfunction __emval_run_destructors(handle) {\n var destructors = emval_handle_array[handle].value;\n runDestructors(destructors);\n __emval_decref(handle);\n}\n\nfunction __emval_take_value(type, argv) {\n type = requireRegisteredType(type, \"_emval_take_value\");\n var v = type[\"readValueFromPointer\"](argv);\n return __emval_register(v);\n}\n\nfunction _abort() {\n abort();\n}\n\nfunction emscripten_realloc_buffer(size) {\n try {\n  wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  return 1;\n } catch (e) {}\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n var maxHeapSize = 2147483648;\n if (requestedSize > maxHeapSize) {\n  return false;\n }\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  var replacement = emscripten_realloc_buffer(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n return false;\n}\n\nvar SYSCALLS = {\n mappings: {},\n buffers: [ null, [], [] ],\n printChar: function(stream, curr) {\n  var buffer = SYSCALLS.buffers[stream];\n  if (curr === 0 || curr === 10) {\n   (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n   buffer.length = 0;\n  } else {\n   buffer.push(curr);\n  }\n },\n varargs: undefined,\n get: function() {\n  SYSCALLS.varargs += 4;\n  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n },\n get64: function(low, high) {\n  return low;\n }\n};\n\nfunction _fd_close(fd) {\n return 0;\n}\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAP32[iov + i * 8 >> 2];\n  var len = HEAP32[iov + (i * 8 + 4) >> 2];\n  for (var j = 0; j < len; j++) {\n   SYSCALLS.printChar(fd, HEAPU8[ptr + j]);\n  }\n  num += len;\n }\n HEAP32[pnum >> 2] = num;\n return 0;\n}\n\nfunction _setTempRet0($i) {\n setTempRet0($i | 0);\n}\n\ninit_emval();\n\nPureVirtualError = Module[\"PureVirtualError\"] = extendError(Error, \"PureVirtualError\");\n\nembind_init_charCodes();\n\ninit_embind();\n\nBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n\nInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n\ninit_ClassHandle();\n\ninit_RegisteredPointer();\n\nUnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n\nvar ASSERTIONS = false;\n\nfunction intArrayToString(array) {\n var ret = [];\n for (var i = 0; i < array.length; i++) {\n  var chr = array[i];\n  if (chr > 255) {\n   if (ASSERTIONS) {\n    assert(false, \"Character code \" + chr + \" (\" + String.fromCharCode(chr) + \")  at offset \" + i + \" not in 0x00-0xFF.\");\n   }\n   chr &= 255;\n  }\n  ret.push(String.fromCharCode(chr));\n }\n return ret.join(\"\");\n}\n\nvar decodeBase64 = typeof atob === \"function\" ? atob : function(input) {\n var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n var output = \"\";\n var chr1, chr2, chr3;\n var enc1, enc2, enc3, enc4;\n var i = 0;\n input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n do {\n  enc1 = keyStr.indexOf(input.charAt(i++));\n  enc2 = keyStr.indexOf(input.charAt(i++));\n  enc3 = keyStr.indexOf(input.charAt(i++));\n  enc4 = keyStr.indexOf(input.charAt(i++));\n  chr1 = enc1 << 2 | enc2 >> 4;\n  chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n  chr3 = (enc3 & 3) << 6 | enc4;\n  output = output + String.fromCharCode(chr1);\n  if (enc3 !== 64) {\n   output = output + String.fromCharCode(chr2);\n  }\n  if (enc4 !== 64) {\n   output = output + String.fromCharCode(chr3);\n  }\n } while (i < input.length);\n return output;\n};\n\nfunction intArrayFromBase64(s) {\n if (typeof ENVIRONMENT_IS_NODE === \"boolean\" && ENVIRONMENT_IS_NODE) {\n  var buf;\n  try {\n   buf = Buffer.from(s, \"base64\");\n  } catch (_) {\n   buf = new Buffer(s, \"base64\");\n  }\n  return new Uint8Array(buf[\"buffer\"], buf[\"byteOffset\"], buf[\"byteLength\"]);\n }\n try {\n  var decoded = decodeBase64(s);\n  var bytes = new Uint8Array(decoded.length);\n  for (var i = 0; i < decoded.length; ++i) {\n   bytes[i] = decoded.charCodeAt(i);\n  }\n  return bytes;\n } catch (_) {\n  throw new Error(\"Converting base64 string to bytes failed.\");\n }\n}\n\nfunction tryParseAsDataURI(filename) {\n if (!isDataURI(filename)) {\n  return;\n }\n return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n}\n\nvar asmLibraryArg = {\n \"n\": __embind_create_inheriting_constructor,\n \"H\": __embind_finalize_value_object,\n \"A\": __embind_register_bool,\n \"c\": __embind_register_class,\n \"i\": __embind_register_class_class_function,\n \"f\": __embind_register_class_class_property,\n \"r\": __embind_register_class_constructor,\n \"a\": __embind_register_class_function,\n \"b\": __embind_register_class_property,\n \"z\": __embind_register_emval,\n \"k\": __embind_register_enum,\n \"j\": __embind_register_enum_value,\n \"p\": __embind_register_float,\n \"K\": __embind_register_function,\n \"h\": __embind_register_integer,\n \"g\": __embind_register_memory_view,\n \"q\": __embind_register_std_string,\n \"m\": __embind_register_std_wstring,\n \"J\": __embind_register_value_object,\n \"I\": __embind_register_value_object_field,\n \"B\": __embind_register_void,\n \"l\": __emval_as,\n \"G\": __emval_call_method,\n \"e\": __emval_call_void_method,\n \"D\": __emval_decref,\n \"d\": __emval_get_method_caller,\n \"L\": __emval_get_module_property,\n \"u\": __emval_get_property,\n \"C\": __emval_incref,\n \"E\": __emval_new_cstring,\n \"F\": __emval_run_destructors,\n \"t\": __emval_take_value,\n \"s\": _abort,\n \"x\": _emscripten_resize_heap,\n \"y\": _fd_close,\n \"v\": _fd_seek,\n \"o\": _fd_write,\n \"w\": _setTempRet0\n};\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"N\"]).apply(null, arguments);\n};\n\nvar _malloc = Module[\"_malloc\"] = function() {\n return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"P\"]).apply(null, arguments);\n};\n\nvar ___getTypeName = Module[\"___getTypeName\"] = function() {\n return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"Q\"]).apply(null, arguments);\n};\n\nvar ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"R\"]).apply(null, arguments);\n};\n\nvar _free = Module[\"_free\"] = function() {\n return (_free = Module[\"_free\"] = Module[\"asm\"][\"S\"]).apply(null, arguments);\n};\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"T\"]).apply(null, arguments);\n};\n\nvar calledRun;\n\nfunction ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = \"Program terminated with exit(\" + status + \")\";\n this.status = status;\n}\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction run(args) {\n args = args || arguments_;\n if (runDependencies > 0) {\n  return;\n }\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  preMain();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n}\n\nModule[\"run\"] = run;\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nrun();\n\nfunction makeMatrix(m2d) {\n    const m = new DOMMatrix();\n    m.a = m2d.xx;\n    m.b = m2d.xy;\n    m.c = m2d.yx;\n    m.d = m2d.yy;\n    m.e = m2d.tx;\n    m.f = m2d.ty;\n    return m;\n}\n\nModule.onRuntimeInitialized = function () {\n    const {\n        RenderPaintStyle,\n        FillRule,\n        RenderPath,\n        RenderPaint,\n        Renderer,\n        StrokeCap,\n        StrokeJoin,\n        BlendMode\n    } = Module;\n\n    const {\n        fill,\n        stroke\n    } = RenderPaintStyle;\n\n    const {\n        evenOdd,\n        nonZero\n    } = FillRule;\n\n    var CanvasRenderPath = RenderPath.extend(\"CanvasRenderPath\", {\n        __construct: function () {\n            this.__parent.__construct.call(this);\n            this._path2D = new Path2D();\n        },\n        reset: function () {\n            this._path2D = new Path2D();\n        },\n        addPath: function (path, m2d) {\n            this._path2D.addPath(path._path2D, makeMatrix(m2d));\n        },\n        fillRule: function(fillRule) {\n            this._fillRule = fillRule;\n        },\n        moveTo: function (x, y) {\n            this._path2D.moveTo(x, y);\n        },\n        lineTo: function (x, y) {\n            this._path2D.lineTo(x, y);\n        },\n        cubicTo: function (ox, oy, ix, iy, x, y) {\n            this._path2D.bezierCurveTo(ox, oy, ix, iy, x, y);\n        },\n        close: function () {\n            this._path2D.closePath();\n        }\n    });\n\n    function _colorStyle(value) {\n        return 'rgba(' + ((0x00ff0000 & value) >>>\n                16) + ',' + ((0x0000ff00 &\n                value) >>> 8) + ',' + ((0x000000ff & value) >>> 0) + ',' +\n            (((0xff000000 & value) >>> 24) / 0xFF) + ')'\n    }\n    var CanvasRenderPaint = RenderPaint.extend(\"CanvasRenderPaint\", {\n        color: function (value) {\n            this._value = _colorStyle(value);\n        },\n        thickness: function (value) {\n            this._thickness = value;\n        },\n        join: function (value) {\n            switch (value) {\n                case StrokeJoin.miter:\n                    this._join = 'miter';\n                    break;\n                case StrokeJoin.round:\n                    this._join = 'round';\n                    break;\n                case StrokeJoin.bevel:\n                    this._join = 'bevel';\n                    break;\n            }\n        },\n        cap: function (value) {\n            switch (value) {\n                case StrokeCap.butt:\n                    this._cap = 'butt';\n                    break;\n                case StrokeCap.round:\n                    this._cap = 'round';\n                    break;\n                case StrokeCap.square:\n                    this._cap = 'square';\n                    break;\n            }\n        },\n        style: function (value) {\n            this._style = value;\n        },\n        blendMode: function (value) {\n            switch (value) {\n                case BlendMode.srcOver:\n                    this._blend = 'source-over';\n                    break;\n                case BlendMode.screen:\n                    this._blend = 'screen';\n                    break;\n                case BlendMode.overlay:\n                    this._blend = 'overlay';\n                    break;\n                case BlendMode.darken:\n                    this._blend = 'darken';\n                    break;\n                case BlendMode.lighten:\n                    this._blend = 'lighten';\n                    break;\n                case BlendMode.colorDodge:\n                    this._blend = 'color-dodge';\n                    break;\n                case BlendMode.colorBurn:\n                    this._blend = 'color-burn';\n                    break;\n                case BlendMode.hardLight:\n                    this._blend = 'hard-light';\n                    break;\n                case BlendMode.softLight:\n                    this._blend = 'soft-light';\n                    break;\n                case BlendMode.difference:\n                    this._blend = 'difference';\n                    break;\n                case BlendMode.exclusion:\n                    this._blend = 'exclusion';\n                    break;\n                case BlendMode.multiply:\n                    this._blend = 'multiply';\n                    break;\n                case BlendMode.hue:\n                    this._blend = 'hue';\n                    break;\n                case BlendMode.saturation:\n                    this._blend = 'saturation';\n                    break;\n                case BlendMode.color:\n                    this._blend = 'color';\n                    break;\n                case BlendMode.luminosity:\n                    this._blend = 'luminosity';\n                    break;\n            }\n        },\n        linearGradient: function (sx, sy, ex, ey) {\n            this._gradient = {\n                sx,\n                sy,\n                ex,\n                ey,\n                stops: []\n            };\n        },\n        radialGradient: function (sx, sy, ex, ey) {\n            this._gradient = {\n                sx,\n                sy,\n                ex,\n                ey,\n                stops: [],\n                isRadial: true\n            };\n        },\n        addStop: function (color, stop) {\n            this._gradient.stops.push({\n                color,\n                stop\n            });\n        },\n\n        completeGradient: function () {\n\n        },\n\n        draw: function (ctx, path) {\n            let {\n                _style,\n                _value,\n                _gradient,\n                _blend\n            } = this;\n\n            ctx.globalCompositeOperation = _blend;\n\n            if (_gradient != null) {\n                const {\n                    sx,\n                    sy,\n                    ex,\n                    ey,\n                    stops,\n                    isRadial\n                } = _gradient;\n\n                if (isRadial) {\n                    var dx = ex - sx;\n                    var dy = ey - sy;\n                    var radius = Math.sqrt(dx * dx + dy * dy);\n                    _value = ctx.createRadialGradient(sx, sy, 0, sx, sy, radius);\n                } else {\n                    _value = ctx.createLinearGradient(sx, sy, ex, ey);\n                }\n\n                for (const {\n                        stop,\n                        color\n                    } of stops) {\n                    _value.addColorStop(stop, _colorStyle(color));\n                }\n                this._value = _value;\n                this._gradient = null;\n            }\n            switch (_style) {\n                case stroke:\n                    ctx.strokeStyle = _value;\n                    ctx.lineWidth = this._thickness;\n                    ctx.lineCap = this._cap;\n                    ctx.lineJoin = this._join;\n                    ctx.stroke(path._path2D);\n                    break;\n                case fill:\n                    ctx.fillStyle = _value;\n                    ctx.fill(path._path2D, path._fillRule === evenOdd ? 'evenodd' : 'nonzero');\n                    break;\n            }\n        }\n    });\n\n    Module.CanvasRenderer = Renderer.extend(\"Renderer\", {\n        __construct: function (ctx) {\n            this.__parent.__construct.call(this);\n            this._ctx = ctx;\n        },\n        save: function () {\n            this._ctx.save();\n        },\n        restore: function () {\n            this._ctx.restore();\n        },\n        transform: function (matrix) {\n            this._ctx.transform(matrix.xx, matrix.xy, matrix.yx, matrix.yy, matrix.tx,\n                matrix.ty);\n        },\n        drawPath: function (path, paint) {\n            paint.draw(this._ctx, path);\n        },\n        clipPath: function (path) {\n            this._ctx.clip(path._path2D, path._fillRule === evenOdd ? 'evenodd' : 'nonzero');\n        }\n    });\n\n    Module.renderFactory = {\n        makeRenderPaint: function () {\n            return new CanvasRenderPaint();\n        },\n        makeRenderPath: function () {\n            return new CanvasRenderPath();\n        }\n    };\n};\n\n\n  return Rive.ready\n}\n);\n})();\nexport default Rive;\n","import * as rc from 'rive-canvas';\n\n/**\n * Generic type for a parameterless void callback\n */\nexport type VoidCallback = () => void;\n\n// Tracks playback states; numbers map to the runtime's numerical values\n// i.e. play: 0, pause: 1, stop: 2\nenum PlaybackState {\n  Play = 0,\n  Pause,\n  Stop\n}\n\n/**\n * Interface for artboard bounds\n */\nexport interface Bounds extends rc.AABB {}\n\n// #region layout\n\n// Fit options for the canvas\nexport enum Fit {\n  Cover = 'cover',\n  Contain = 'contain',\n  Fill = 'fill',\n  FitWidth = 'fitWidth',\n  FitHeight = 'fitHeight',\n  None = 'none',\n  ScaleDown = 'scaleDown'\n}\n\n// Alignment options for the canvas\nexport enum Alignment {\n  Center = 'center',\n  TopLeft = 'topLeft',\n  TopCenter = 'topCenter',\n  TopRight = 'topRight',\n  CenterLeft = 'centerLeft',\n  CenterRight = 'centerRight',\n  BottomLeft = 'bottomLeft',\n  BottomCenter = 'bottomCenter',\n  BottomRight = 'bottomRight'\n}\n\n// Interface for the Layout static method contructor\nexport interface LayoutParameters {\n  fit?: Fit,\n  alignment?: Alignment,\n  minX?: number,\n  minY?: number,\n  maxX?: number,\n  maxY?: number\n}\n\n// Alignment options for Rive animations in a HTML canvas\nexport class Layout {\n\n  // Runtime fit and alignment are accessed every frame, so we cache their\n  // values to save cycles\n  private cachedRuntimeFit: rc.Fit;\n  private cachedRuntimeAlignment: rc.Alignment;\n\n  public readonly fit: Fit;\n  public readonly alignment: Alignment;\n  public readonly minX: number;\n  public readonly minY: number;\n  public readonly maxX: number;\n  public readonly maxY: number;\n\n  constructor(params?: LayoutParameters) {\n    this.fit = params?.fit ?? Fit.Contain;\n    this.alignment = params?.alignment ?? Alignment.Center;\n    this.minX = params?.minX ?? 0;\n    this.minY = params?.minY ?? 0;\n    this.maxX = params?.maxX ?? 0;\n    this.maxY = params?.maxY ?? 0;\n  }\n\n  // Alternative constructor to build a Layout from an interface/object\n  static new({ fit, alignment, minX, minY, maxX, maxY }: LayoutParameters): Layout {\n    console.warn('This function is deprecated: please use `new Layout({})` instead');\n    return new Layout({ fit, alignment, minX, minY, maxX, maxY });\n  }\n\n  /**\n   * Makes a copy of the layout, replacing any specified parameters\n   */\n  public copyWith({ fit, alignment, minX, minY, maxX, maxY }: LayoutParameters): Layout {\n    return new Layout({\n      fit: fit ?? this.fit,\n      alignment: alignment ?? this.alignment,\n      minX: minX ?? this.minX,\n      minY: minY ?? this.minY,\n      maxX: maxX ?? this.maxX,\n      maxY: maxY ?? this.maxY\n    });\n  }\n\n  // Returns fit for the Wasm runtime format\n  public runtimeFit(rive: rc.RiveCanvas): rc.Fit {\n    if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n\n    let fit;\n    if (this.fit === Fit.Cover) fit = rive.Fit.cover;\n    else if (this.fit === Fit.Contain) fit = rive.Fit.contain;\n    else if (this.fit === Fit.Fill) fit = rive.Fit.fill;\n    else if (this.fit === Fit.FitWidth) fit = rive.Fit.fitWidth;\n    else if (this.fit === Fit.FitHeight) fit = rive.Fit.fitHeight;\n    else if (this.fit === Fit.ScaleDown) fit = rive.Fit.scaleDown;\n    else fit = rive.Fit.none;\n\n    this.cachedRuntimeFit = fit;\n    return fit;\n  }\n\n  // Returns alignment for the Wasm runtime format\n  public runtimeAlignment(rive: rc.RiveCanvas): rc.Alignment {\n    if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n\n    let alignment;\n    if (this.alignment === Alignment.TopLeft) alignment = rive.Alignment.topLeft;\n    else if (this.alignment === Alignment.TopCenter) alignment = rive.Alignment.topCenter;\n    else if (this.alignment === Alignment.TopRight) alignment = rive.Alignment.topRight;\n    else if (this.alignment === Alignment.CenterLeft) alignment = rive.Alignment.centerLeft;\n    else if (this.alignment === Alignment.CenterRight) alignment = rive.Alignment.centerRight;\n    else if (this.alignment === Alignment.BottomLeft) alignment = rive.Alignment.bottomLeft;\n    else if (this.alignment === Alignment.BottomCenter) alignment = rive.Alignment.bottomCenter;\n    else if (this.alignment === Alignment.BottomRight) alignment = rive.Alignment.bottomRight;\n    else alignment = rive.Alignment.center;\n\n    this.cachedRuntimeAlignment = alignment;\n    return alignment;\n  }\n}\n\n// #endregion\n\n// #region runtime\n\n// Callback type when looking for a runtime instance\nexport type RuntimeCallback = (rive: rc.RiveCanvas) => void;\n\n// Runtime singleton; use getInstance to provide a callback that returns the\n// Rive runtime\nexport class RuntimeLoader {\n\n  // Singleton helpers\n  private static runtime: rc.RiveCanvas;\n  // Flag to indicate that loading has started/completed\n  private static isLoading: boolean = false;\n  // List of callbacks for the runtime that come in while loading\n  private static callBackQueue: RuntimeCallback[] = [];\n  // Instance of the Rive runtime\n  private static rive: rc.RiveCanvas;  \n  // Path to the Wasm file; default path works for testing only;\n  // if embedded wasm is used then this is never used.\n  private static wasmURL: string = 'dist/rive.wasm';\n\n  // Class is never instantiated\n  private constructor() { }\n\n  // Loads the runtime\n  private static loadRuntime(): void {\n    rc.default({\n      // Loads Wasm bundle\n      locateFile: (_: string) => RuntimeLoader.wasmURL\n    }).then((rive: rc.RiveCanvas) => {\n      RuntimeLoader.runtime = rive;\n      // Fire all the callbacks\n      while (RuntimeLoader.callBackQueue.length > 0) {\n        RuntimeLoader.callBackQueue.shift()?.(RuntimeLoader.runtime);\n      }\n    });\n  }\n\n  // Provides a runtime instance via a callback\n  public static getInstance(callback: RuntimeCallback): void {\n    // If it's not loading, start loading runtime\n    if (!RuntimeLoader.isLoading) {\n      RuntimeLoader.isLoading = true;\n      RuntimeLoader.loadRuntime();\n    }\n    if (!RuntimeLoader.runtime) {\n      RuntimeLoader.callBackQueue.push(callback);\n    } else {\n      callback(RuntimeLoader.runtime);\n    }\n  }\n\n  // Provides a runtime instance via a promise\n  public static awaitInstance(): Promise<rc.RiveCanvas> {\n    return new Promise<rc.RiveCanvas>((resolve, reject) =>\n      RuntimeLoader.getInstance((rive: rc.RiveCanvas): void => resolve(rive))\n    );\n  }\n\n  // Manually sets the wasm url\n  public static setWasmUrl(url: string): void {\n    RuntimeLoader.wasmURL = url;\n  }\n}\n\n// #endregion\n\n// #region animations\n\n// Wraps animations and instances from the runtime and keeps track of playback\n// state\nclass Animation {\n  public loopCount: number = 0;\n  public readonly instance: rc.LinearAnimationInstance;\n\n  // Time to which the animation should move to on the next render\n  public scrubTo: number | null = null;\n\n  /**\n   * Constructs a new animation\n   * @constructor\n   * @param {any} animation: runtime animation object\n   * @param {any} instance: runtime animation instance object\n   */\n  constructor(private animation: rc.LinearAnimation, runtime: rc.RiveCanvas, public playing: boolean) {\n    this.instance = new runtime.LinearAnimationInstance(animation);\n  }\n\n  // Returns the animation's name\n  public get name(): string {\n    return this.animation.name;\n  }\n\n  // Returns the animation's current time\n  public get time(): number {\n      return this.instance.time;\n  }\n\n  // Sets the animation's current time\n  public set time(value: number) {\n      this.instance.time = value;\n  }\n\n  // Returns the animation's loop type\n  public get loopValue(): number {\n    return this.animation.loopValue;\n  }\n\n  /**\n   * Advances the animation by the give time. If the animation needs scrubbing,\n   * time is ignored and the stored scrub value is used.\n   * @param time the time to advance the animation by if no scrubbing required\n   */\n  public advance(time: number) {\n    if (this.scrubTo === null) {\n      this.instance.advance(time);\n    } else {\n      this.instance.time = 0;\n      this.instance.advance(this.scrubTo);\n      this.scrubTo = null;\n    }\n  }\n\n  public get needsScrub(): boolean {\n    return this.scrubTo !== null;\n  }\n}\n\n// #endregion\n\n// #region state machines\n\nexport enum StateMachineInputType {\n  Number = 56,\n  Trigger = 58,\n  Boolean = 59,\n}\n\n/**\n * An input for a state machine\n */\nexport class StateMachineInput {\n\n  constructor(public readonly type: StateMachineInputType, private runtimeInput: rc.SMIInput) { }\n\n  /**\n   * Returns the name of the input\n   */\n  public get name(): string {\n    return this.runtimeInput.name;\n  }\n\n  /**\n   * Returns the current value of the input\n   */\n  public get value(): number | boolean {\n    return this.runtimeInput.value;\n  }\n\n  /**\n   * Sets the value of the input\n   */\n  public set value(value: number | boolean) {\n    this.runtimeInput.value = value;\n  }\n\n  /**\n   * Fires a trigger; does nothing on Number or Boolean input types\n   */\n  public fire(): void {\n    if (this.type === StateMachineInputType.Trigger) {\n      this.runtimeInput.fire();\n    }\n  }\n}\n\nclass StateMachine {\n\n  /**\n   * Caches the inputs from the runtime\n   */\n  public readonly inputs: StateMachineInput[] = [];\n\n  /**\n   * Runtime state machine instance\n   */\n  public readonly instance: rc.StateMachineInstance;\n\n  /**\n   * @constructor\n   * @param stateMachine runtime state machine object\n   * @param instance runtime state machine instance object\n   */\n  constructor(private stateMachine: rc.StateMachine, runtime: rc.RiveCanvas, public playing: boolean) {\n    this.instance = new runtime.StateMachineInstance(stateMachine);\n    this.initInputs(runtime);\n  }\n\n  public get name(): string {\n    return this.stateMachine.name;\n  }\n\n  /**\n   * Returns a list of state names that have changed on this frame\n   */\n  public get statesChanged(): string[] {\n    const names: string[] = [];\n    for (let i = 0; i < this.instance.stateChangedCount(); i++) {\n      names.push(this.instance.stateChangedNameByIndex(i));\n    }\n    return names;\n  }\n\n  /**\n   * Fetches references to the state machine's inputs and caches them\n   * @param runtime an instance of the runtime; needed for the SMIInput types\n   */\n  private initInputs(runtime: rc.RiveCanvas): void {\n    // Fetch the inputs from the runtime if we don't have them\n    for (let i = 0; i < this.instance.inputCount(); i++) {\n      const input = this.instance.input(i);\n      this.inputs.push(this.mapRuntimeInput(input, runtime));\n    }\n  }\n\n  /**\n   * Maps a runtime input to it's appropriate type\n   * @param input \n   */\n  private mapRuntimeInput(input: rc.SMIInput, runtime: rc.RiveCanvas): StateMachineInput {\n    if (input.type === runtime.SMIInput.bool) {\n      return new StateMachineInput(StateMachineInputType.Boolean, input.asBool());\n    }\n    else if (input.type === runtime.SMIInput.number) {\n      return new StateMachineInput(StateMachineInputType.Number, input.asNumber());\n    }\n    else if (input.type === runtime.SMIInput.trigger) {\n      return new StateMachineInput(StateMachineInputType.Trigger, input.asTrigger());\n    }\n  }\n}\n\n// #endregion\n\n// #region animator\n\n/**\n * Manages animation\n */\nclass Animator {\n\n  /**\n   * Constructs a new animator\n   * @constructor\n   * @param runtime Rive runtime; needed to instance animations & state machines\n   * @param artboard the artboard that holds all animations and state machines\n   * @param animations optional list of animations\n   * @param stateMachines optional list of state machines\n   */\n  constructor(\n    private runtime: rc.RiveCanvas,\n    private artboard: rc.Artboard,\n    private eventManager: EventManager,\n    public readonly animations: Animation[] = [],\n    public readonly stateMachines: StateMachine[] = []) {}\n\n  /**\n   * Adds animations and state machines by their names. If names are shared\n   * between animations & state machines, then the first one found will be\n   * created. Best not to use the same names for these in your Rive file.\n   * @param animatable the name(s) of animations and state machines to add\n   * @returns a list of names of the playing animations and state machines\n   */\n  public add(animatables: string | string[], playing: boolean, fireEvent = true): string[] {\n    animatables = mapToStringArray(animatables);\n    // If animatables is empty, play or pause everything\n    if (animatables.length === 0) {\n      this.animations.forEach(a => a.playing = playing);\n      this.stateMachines.forEach(m => m.playing = playing);\n    } else {\n      // Play/pause already instanced items, or create new instances\n      const instancedAnimationNames = this.animations.map(a => a.name);\n      const instancedMachineNames = this.stateMachines.map(m => m.name);\n      for (const i in animatables) {\n        const aIndex = instancedAnimationNames.indexOf(animatables[i]);\n        const mIndex = instancedMachineNames.indexOf(animatables[i]);\n        if (aIndex >= 0 || mIndex >= 0) {\n          if (aIndex >= 0) {\n            // Animation is instanced, play/pause it\n            this.animations[aIndex].playing = playing;\n          } else {\n            // State machine is instanced, play/pause it\n            this.stateMachines[mIndex].playing = playing;\n          }\n       } else {\n          // Try to create a new animation instance\n          const anim = this.artboard.animationByName(animatables[i]);\n          if(anim) {\n            this.animations.push(new Animation(anim, this.runtime, playing));\n          } else {\n            // Try to create a new state machine instance\n            const sm = this.artboard.stateMachineByName(animatables[i]);\n            if (sm) {\n              this.stateMachines.push(new StateMachine(sm, this.runtime, playing));\n            }\n          }\n        }\n      }\n    }\n    // Fire play/paused events for animations\n    if (fireEvent) {\n      if (playing) {\n        this.eventManager.fire({\n          type: EventType.Play,\n          data: this.playing,\n        });\n      } else {\n        this.eventManager.fire({\n          type: EventType.Pause,\n          data: this.paused,\n        });\n      }\n    }\n\n    return playing ? this.playing : this.paused;\n  }\n\n  /**\n   * Play the named animations/state machines\n   * @param animatables the names of the animations/machines to play; plays all if empty\n   * @returns a list of the playing items\n   */\n  public play(animatables: string | string[]): string[] {\n    return this.add(animatables, true);\n  }\n\n    /**\n   * Pauses named animations and state machines, or everything if nothing is\n   * specified\n   * @param animatables names of the animations and state machines to pause\n   * @returns a list of names of the animations and state machines paused\n   */\n     public pause(animatables: string[]): string[] {\n      return this.add(animatables, false);\n    }\n\n    /**\n     * Set time of named animations\n     * @param animations names of the animations to scrub\n     * @param value time scrub value, a floating point number to which the playhead is jumped\n     * @returns a list of names of the animations that were scrubbed\n     */\n    public scrub(animatables: string[], value: number): string[] {\n      const forScrubbing = this.animations.filter(a => animatables.includes(a.name));\n      forScrubbing.forEach(a => a.scrubTo = value);\n      return forScrubbing.map(a => a.name);\n    }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * playing\n   */\n  public get playing(): string[] {\n    return this.animations.filter(a => a.playing).map(a => a.name).concat(\n           this.stateMachines.filter(m => m.playing).map(m => m.name)\n    );\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * paused\n   */\n     public get paused(): string[] {\n      return this.animations.filter(a => !a.playing).map(a => a.name).concat(\n             this.stateMachines.filter(m => !m.playing).map(m => m.name)\n      );\n    }\n\n  /**\n   * Stops and removes all named animations and state machines\n   * @param animatables animations and state machines to remove\n   * @returns a list of names of removed items\n   */\n  public stop(animatables?: string[] | string): string[] {\n    animatables = mapToStringArray(animatables);\n\n    // If nothing's specified, wipe them out, all of them\n    let removedNames: string[] = [];\n    if (animatables.length === 0) {\n      removedNames = this.animations.map(a => a.name).concat(\n        this.stateMachines.map(m => m.name)\n      );\n      this.animations.splice(0, this.animations.length);\n      this.stateMachines.splice(0, this.stateMachines.length);\n    } else {\n      // Remove only the named animations/state machines\n      const animationsToRemove = this.animations.filter(\n        a => animatables.includes(a.name)\n      );\n      animationsToRemove.forEach(a =>\n        this.animations.splice(this.animations.indexOf(a), 1)\n      );\n      const machinesToRemove = this.stateMachines.filter(\n        m => animatables.includes(m.name)\n      );\n      machinesToRemove.forEach(m =>\n        this.stateMachines.splice(this.stateMachines.indexOf(m), 1)\n      );\n      removedNames = animationsToRemove.map(a => a.name).concat(\n        machinesToRemove.map(m => m.name));\n    }\n\n    this.eventManager.fire({\n      type: EventType.Stop,\n      data: removedNames,\n    });\n\n    // Return the list of animations removed\n    return removedNames;\n  }\n\n  /**\n   * Returns true if at least one animation is active\n   */\n  public get isPlaying(): boolean {\n    return this.animations.reduce((acc, curr) => acc || curr.playing, false)\n        || this.stateMachines.reduce((acc, curr) => acc || curr.playing, false);\n  }\n\n  /**\n   * Returns true if all animations are paused and there's at least one animation\n   */\n  public get isPaused(): boolean {\n    return !this.isPlaying && \n           (this.animations.length > 0 || this.stateMachines.length > 0);  \n  }\n\n  /**\n   * Returns true if there are no playing or paused animations/state machines\n   */\n  public get isStopped(): boolean {\n    return this.animations.length === 0 && this.stateMachines.length === 0;\n  }\n\n  /**\n   * If there are no animations or state machines, add the first one found\n   * @returns the name of the animation or state machine instanced\n   */\n   public atLeastOne(playing: boolean, fireEvent = true): string {\n    let instancedName: string;\n    if (this.animations.length === 0 && this.stateMachines.length === 0) {\n      if(this.artboard.animationCount() > 0) {\n        // Add the first animation\n        this.add([instancedName = this.artboard.animationByIndex(0).name], playing, fireEvent);\n      } else if(this.artboard.stateMachineCount() > 0) {\n        // Add the first state machine\n        this.add([instancedName = this.artboard.stateMachineByIndex(0).name], playing, fireEvent);\n      }\n    }\n    return instancedName;\n  }\n\n  /**\n   * Checks if any animations have looped and if so, fire the appropriate event\n   */\n  public handleLooping() {\n    for (const animation of this.animations.filter(a => a.playing)) {\n      // Emit if the animation looped\n      if (animation.loopValue === 0 && animation.loopCount) {\n        animation.loopCount = 0;\n        // This is a one-shot; if it has ended, delete the instance\n        this.stop(animation.name);\n      }\n      else if (animation.loopValue === 1 && animation.loopCount) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.Loop }\n        });\n        animation.loopCount = 0;\n      }\n      // Wasm indicates a loop at each time the animation\n      // changes direction, so a full loop/lap occurs every\n      // two loop counts\n      else if (animation.loopValue === 2 && animation.loopCount > 1) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.PingPong }\n        });\n        animation.loopCount = 0;\n      }\n    }\n  }\n\n  /**\n   * Checks if states have changed in state machines and fires a statechange\n   * event\n   */\n  public handleStateChanges() {\n    const statesChanged: string[] = [];\n    for (const stateMachine of this.stateMachines.filter(sm => sm.playing)) {\n     statesChanged.push(...stateMachine.statesChanged);\n    }\n    if (statesChanged.length > 0) {\n      this.eventManager.fire({\n        type: EventType.StateChange,\n        data: statesChanged,\n      });\n    }\n  }\n}\n\n// #endregion\n\n// #region events\n\n/**\n * Supported event types triggered in Rive\n */\nexport enum EventType {\n  Load        = 'load',\n  LoadError   = 'loaderror',\n  Play        = 'play',\n  Pause       = 'pause',\n  Stop        = 'stop',\n  Loop        = 'loop',\n  Draw        = 'draw',\n  StateChange = 'statechange',\n}\n\n// Event fired by Rive\nexport interface Event {\n  type: EventType,\n  data?: string | string[] | LoopEvent,\n}\n\n/**\n * Looping types: one-shot, loop, and ping-pong\n */\nexport enum LoopType {\n  OneShot = 'oneshot',  // has value 0 in runtime\n  Loop = 'loop',        // has value 1 in runtime\n  PingPong = 'pingpong' // has value 2 in runtime\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport interface LoopEvent {\n  animation: string;\n  type: LoopType;\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport type EventCallback = (event: Event) => void;\n\n/**\n * Event listeners registered with the event manager\n */\nexport interface EventListener {\n  type: EventType,\n  callback: EventCallback,\n}\n\n// Manages Rive events and listeners\nclass EventManager {\n\n  constructor(private listeners: EventListener[] = []) { }\n\n  // Gets listeners of specified type\n  private getListeners(type: EventType): EventListener[] {\n    return this.listeners.filter(e => e.type === type);\n  }\n\n  // Adds a listener\n  public add(listener: EventListener): void {\n    if (!this.listeners.includes(listener)) {\n      this.listeners.push(listener);\n    }\n  }\n\n  /**\n   * Removes a listener\n   * @param listener the listener with the callback to be removed\n   */\n  public remove(listener: EventListener): void {\n    // We can't simply look for the listener as it'll be a different instance to\n    // one originally subscribed. Find all the listeners of the right type and\n    // then check their callbacks which should match.\n    for (let i = 0; i < this.listeners.length; i++) {\n      const currentListener = this.listeners[i];\n      if (currentListener.type === listener.type) {\n        if (currentListener.callback === listener.callback) {\n          this.listeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Clears all listeners of specified type, or every listener if no type is\n   * specified\n   * @param type the type of listeners to clear, or all listeners if not\n   * specified\n   */\n  public removeAll(type?: EventType) {\n    if (!type) {\n      this.listeners.splice(0, this.listeners.length);\n    } else {\n      this.listeners\n        .filter((l) => l.type === type)\n        .forEach((l) => this.remove(l));\n    }\n  }\n\n  // Fires an event\n  public fire(event: Event): void {\n    const eventListeners = this.getListeners(event.type);\n    eventListeners.forEach(\n      listener => listener.callback(event)\n    );\n  }\n}\n\n// #endregion\n\n// #region Manages a queue of tasks\n\n// A task in the queue; will fire the action when the queue is processed; will\n// also optionally fire an event.\nexport interface Task {\n  action: VoidCallback,\n  event?: Event,\n}\n\n// Manages a queue of tasks\nclass TaskQueueManager {\n  private queue: Task[] = [];\n\n  constructor(private eventManager: EventManager) { }\n\n  // Adds a task top the queue\n  public add(task: Task): void {\n    this.queue.push(task);\n  }\n\n  // Processes all tasks in the queue\n  public process(): void {\n    while (this.queue.length > 0) {\n      const task = this.queue.shift();\n      task?.action();\n      if (task?.event) {\n        this.eventManager.fire(task.event);\n      }\n    }\n  }\n}\n\n// #endregion\n\n// #region Rive\n\n// Interface for the Rive static method contructor\nexport interface RiveParameters {\n  canvas: HTMLCanvasElement | OffscreenCanvas, // canvas is required\n  src?: string, // one of src or buffer is required\n  buffer?: ArrayBuffer, // one of src or buffer is required\n  artboard?: string,\n  animations?: string | string[],\n  stateMachines?: string | string[],\n  layout?: Layout,\n  autoplay?: boolean,\n  onload?: EventCallback,\n  onloaderror?: EventCallback,\n  onplay?: EventCallback,\n  onpause?: EventCallback,\n  onstop?: EventCallback,\n  onloop?: EventCallback,\n  onstatechange?: EventCallback,\n}\n\n// Interface to Rive.load function\nexport interface RiveLoadParameters {\n  src?: string,\n  buffer?: ArrayBuffer,\n  autoplay?: boolean,\n  artboard?: string,\n  animations?: string | string[],\n  stateMachines?: string | string[],\n}\n\nexport class Rive {\n\n  // Canvas in which to render the artboard\n  private readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n\n  // A url to a Rive file; may be undefined if a buffer is specified\n  private src: string;\n\n  // Raw Rive file data; may be undefined if a src is specified\n  private buffer: ArrayBuffer;\n\n  // The layout for rendering in the canvas\n  private _layout: Layout;\n\n  // Flag to indicate if the layout has changed; used by the renderer to know\n  // when to align\n  private _updateLayout: boolean = true;\n\n  // The canvas 2D context\n  private ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D | null;\n\n  // The runtime renderer\n  private renderer: rc.Renderer;\n\n  /**\n   * Flag to active/deactivate renderer\n   */\n  private isRendererActive = true;\n\n  // Tracks if a Rive file is loaded\n  private loaded: boolean = false;\n\n  /**\n   * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n   * commands (e.g. contents) can be called as soon as the file is loaded.\n   * However, playback commands need to be queued and run in order once initial\n   * animations and autoplay has been sorted out. This applies to play, pause,\n   * and start.\n   */\n  private readyForPlaying: boolean = false;\n\n  // Wasm runtime\n  private runtime: rc.RiveCanvas;\n\n  // Runtime artboard\n  private artboard: rc.Artboard | null = null;\n\n  // Runtime file\n  private file: rc.File;\n\n  // Holds event listeners\n  private eventManager: EventManager;\n\n  // Manages the loading task queue\n  private taskQueue: TaskQueueManager;\n\n  // Animator: manages animations and state machines\n  private animator: Animator;\n\n  // Error message for missing source or buffer\n  private static readonly missingErrorMessage: string =\n    'Rive source file or data buffer required';\n\n  constructor(params: RiveParameters) {\n    this.canvas = params.canvas;\n    this.src = params.src;\n    this.buffer = params.buffer;\n    this.layout = params.layout ?? new Layout();\n    this._updateLayout = true;\n\n    // Fetch the 2d context from the canvas\n    this.ctx = this.canvas.getContext('2d');\n\n    // New event management system\n    this.eventManager = new EventManager();\n    if (params.onload) this.on(EventType.Load, params.onload);\n    if (params.onloaderror) this.on(EventType.LoadError, params.onloaderror);\n    if (params.onplay) this.on(EventType.Play, params.onplay);\n    if (params.onpause) this.on(EventType.Pause, params.onpause);\n    if (params.onstop) this.on(EventType.Stop, params.onstop);\n    if (params.onloop) this.on(EventType.Loop, params.onloop);\n    if (params.onstatechange) this.on(EventType.StateChange, params.onstatechange);\n\n    // Hook up the task queue\n    this.taskQueue = new TaskQueueManager(this.eventManager);\n\n    this.init({\n      src: this.src,\n      buffer: this.buffer,\n      autoplay: params.autoplay,\n      animations: params.animations,\n      stateMachines: params.stateMachines,\n      artboard: params.artboard\n    });\n  }\n\n  // Alternative constructor to build a Rive instance from an interface/object\n  public static new(params: RiveParameters): Rive {\n    console.warn('This function is deprecated: please use `new Rive({})` instead');\n    return new Rive(params);\n  }\n\n  // Initializes the Rive object either from constructor or load()\n  private init({ src, buffer, animations, stateMachines, artboard, autoplay = false }: RiveLoadParameters): void {\n    this.src = src;\n    this.buffer = buffer;\n\n    // If no source file url specified, it's a bust\n    if (!this.src && !this.buffer) {\n      throw new Error(Rive.missingErrorMessage);\n    }\n\n    // List of animations that should be initialized.\n    const startingAnimationNames = mapToStringArray(animations);\n\n    // List of state machines that should be initialized\n    const startingStateMachineNames = mapToStringArray(stateMachines);\n\n    // Ensure loaded is marked as false if loading new file\n    this.loaded = false;\n    this.readyForPlaying = false;\n\n    // Ensure the runtime is loaded\n    RuntimeLoader.awaitInstance().then((runtime) => {\n      this.runtime = runtime;\n      // Load Rive data from a source uri or a data buffer\n      this.initData(artboard, startingAnimationNames, startingStateMachineNames, autoplay).catch(e => {\n        console.error(e);\n      });\n    }).catch(e => {\n      console.error(e);\n    });\n  }\n\n  // Initializes runtime with Rive data and preps for playing\n  private async initData(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): Promise<void> {\n    // Load the buffer from the src if provided\n    if (this.src) {\n      this.buffer = await loadRiveFile(this.src);\n    }\n    // Load the Rive file\n    this.file = await this.runtime.load(new Uint8Array(this.buffer));\n    if (this.file) {\n      // Initialize and draw frame\n      this.initArtboard(artboardName, animationNames, stateMachineNames, autoplay);\n\n      // Everything's set up, emit a load event\n      this.loaded = true;\n      this.eventManager.fire({\n        type: EventType.Load,\n        data: this.src ?? 'buffer'\n      });\n\n      // Flag ready for playback commands and clear the task queue; this order\n      // is important or it may infinitely recurse\n      this.readyForPlaying = true;\n      this.taskQueue.process();\n\n      this.drawFrame();\n\n      return Promise.resolve();\n    } else {\n      const msg = 'Problem loading file; may be corrupt!';\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return Promise.reject(msg);\n    }\n  }\n\n  // Initialize for playback\n  private initArtboard(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): void {\n    this.artboard = artboardName ?\n      this.file.artboardByName(artboardName) :\n      this.file.defaultArtboard();\n\n    if (!this.artboard) {\n      const msg = 'Invalid artboard name or no default artboard';\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return;\n    }\n\n    // Check that the artboard has at least 1 animation\n    if (this.artboard.animationCount() < 1) {\n      const msg = 'Artboard has no animations';\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      throw msg;\n    }\n\n    // Initialize the animator\n    this.animator = new Animator(this.runtime, this.artboard, this.eventManager);\n\n    // Get the canvas where you want to render the animation and create a renderer\n    this.renderer = new this.runtime.CanvasRenderer(this.ctx);\n\n\n    // Initialize the animations; as loaded hasn't happened yet, we need to\n    // suppress firing the play/pause events until the load event has fired. To\n    // do this we tell the animator to suppress firing events, and add event\n    // firing to the task queue.\n    let instanceNames: string[];\n    if (animationNames.length > 0 || stateMachineNames.length > 0) {\n      instanceNames = animationNames.concat(stateMachineNames);\n      this.animator.add(instanceNames, autoplay, false);\n    } else {\n      instanceNames = [this.animator.atLeastOne(autoplay, false)];\n    }\n    // Queue up firing the playback events\n    this.taskQueue.add({\n      action: () => {},\n      event: {\n        type: autoplay ? EventType.Play : EventType.Pause,\n        data: instanceNames,\n      }\n    });\n  }\n\n  // Draws the current artboard frame\n  public drawFrame() {\n    this.startRendering();\n  }\n\n  // Tracks the last timestamp at which the animation was rendered. Used only in\n  // draw().\n  private lastRenderTime: number;\n\n  // Tracks the current animation frame request\n  private frameRequestId: number | null;\n\n  /**\n   * Used be draw to track when a second of active rendering time has passed. Used for debugging purposes\n   */\n  private renderSecondTimer: number = 0;\n\n  /**\n   * Draw rendering loop; renders animation frames at the correct time interval.\n   * @param time the time at which to render a frame\n   */\n  private draw(time: number, onSecond?: VoidCallback): void {\n    // Clear the frameRequestId, as we're now rendering a fresh frame\n    this.frameRequestId = null;\n\n    // On the first pass, make sure lastTime has a valid value\n    if (!this.lastRenderTime) {\n      this.lastRenderTime = time;\n    }\n\n    // Handle the onSecond callback\n    this.renderSecondTimer += (time - this.lastRenderTime);\n    if (this.renderSecondTimer > 5000) {\n      this.renderSecondTimer = 0;\n      onSecond?.();\n    }\n\n    // Calculate the elapsed time between frames in seconds\n    const elapsedTime = (time - this.lastRenderTime) / 1000;\n    this.lastRenderTime = time;\n\n    // Advance non-paused animations by the elapsed number of seconds\n    // Also advance any animations that require scrubbing\n    const activeAnimations = this.animator.animations.filter(a => a.playing || a.needsScrub)\n      // The scrubbed animations must be applied first to prevent weird artifacts\n      // if the playing animations conflict with the scrubbed animating attribuates.\n      .sort((first, second) => first.needsScrub ? -1 : 1);\n    for (const animation of activeAnimations) {\n      animation.advance(elapsedTime);\n      if (animation.instance.didLoop) {\n        animation.loopCount += 1;\n      }\n      animation.instance.apply(this.artboard, 1.0);\n    }\n\n    // Advance non-paused state machines by the elapsed number of seconds\n    const activeStateMachines = this.animator.stateMachines.filter(a => a.playing);\n    for (const stateMachine of activeStateMachines) {\n      stateMachine.instance.advance(this.artboard, elapsedTime);\n      // stateMachine.instance.apply(this.artboard);\n    }\n\n    // Once the animations have been applied to the artboard, advance it\n    // by the elapsed time.\n    this.artboard.advance(elapsedTime);\n\n    // Update the renderer alignment if necessary\n    this.alignRenderer();\n\n    const bounds = this.artboard.bounds;\n    this.ctx.clearRect(bounds.minX, bounds.minY, bounds.maxX, bounds.maxY);\n    this.artboard.draw(this.renderer);\n\n    // Check for any animations that looped\n    this.animator.handleLooping();\n\n    // Check for any state machines that had a state change\n    this.animator.handleStateChanges();\n\n    // Calling requestAnimationFrame will rerun draw() at the correct rate:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n    if (this.animator.isPlaying) {\n      // Request a new rendering frame\n      this.startRendering();\n    } else if (this.animator.isPaused) {\n      // Reset the end time so on playback it starts at the correct frame\n      this.lastRenderTime = 0;\n    } else if (this.animator.isStopped) {\n      // Reset animation instances, artboard and time\n      // TODO: implement this properly when we have instancing\n      // this.initArtboard();\n      // this.drawFrame();\n      this.lastRenderTime = 0;\n    }\n  }\n\n  /**\n   * Align the renderer\n   */\n  private alignRenderer(): void {\n    // Update the renderer alignment if necessary\n    if (this._updateLayout) {\n      // Restore from previous save in case a previous align occurred\n      this.ctx.restore();\n      // Canvas must be wiped to prevent artifacts\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      // Now save so that future changes to align can restore\n      this.ctx.save();\n      // Align things up safe in the knowledge we can restore if changed\n      this.renderer.align(\n        this._layout.runtimeFit(this.runtime),\n        this._layout.runtimeAlignment(this.runtime),\n        {\n          minX: this._layout.minX,\n          minY: this._layout.minY,\n          maxX: this._layout.maxX,\n          maxY: this._layout.maxY\n        },\n        this.artboard.bounds\n      );\n      this._updateLayout = false;\n    }\n  }\n\n  // Plays specified animations; if none specified, it unpauses everything.\n  public play(animationNames?: string | string[], autoplay?: true): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, queue up the play\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.play(animationNames, autoplay),\n      });\n      return;\n    }\n    this.animator.play(animationNames);\n    this.startRendering();\n  }\n\n  // Pauses specified animations; if none specified, pauses all.\n  public pause(animationNames?: string | string[]): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.pause(animationNames),\n      });\n      return;\n    }\n    this.animator.pause(animationNames);\n  }\n\n  public scrub(animationNames?: string | string[], value?: number): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n        this.taskQueue.add({\n            action: () => this.scrub(animationNames, value),\n        });\n        return;\n    }\n\n    // Scrub the animation time; we draw a single frame here so that if\n    // nothing's currently playing, the scrubbed animation is still rendered/\n    this.animator.scrub(animationNames, value || 0);\n    this.drawFrame();\n  }\n\n  // Stops specified animations; if none specifies, stops them all.\n  public stop(animationNames?: string | string[] | undefined): void {\n    animationNames = mapToStringArray(animationNames);\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.stop(animationNames),\n      });\n      return;\n    }\n    this.animator.stop(animationNames);\n  }\n\n  // Loads a new Rive file, keeping listeners in place\n  public load(params: RiveLoadParameters): void {\n    // Stop all animations\n    this.stop();\n    // Update the layout to account for new renderer\n    this._updateLayout = true;\n    // Reinitialize\n    this.init(params);\n  }\n\n  // Sets a new layout\n  public set layout(layout: Layout) {\n    this._layout = layout;\n    this._updateLayout = true;\n    // If the maxX or maxY are 0, then set them to the canvas width and height\n    if (!layout.maxX || !layout.maxY) {\n      this.resizeToCanvas();\n    }\n    if (this.loaded && !this.animator.isPlaying) {\n      this.drawFrame();\n    }\n  }\n\n  /**\n   * Returns the current layout. Note that layout should be treated as\n   * immutable. If you want to change the layout, create a new one use the\n   * layout setter\n   */\n  public get layout() {\n    return this._layout;\n  }\n\n  /** \n   * Sets the layout bounds to the current canvas size; this is typically called\n   * when the canvas is resized\n   */\n  public resizeToCanvas() {\n    this._layout = this.layout.copyWith({\n      minX: 0,\n      minY: 0,\n      maxX: this.canvas.width,\n      maxY: this.canvas.height\n    });\n    this._updateLayout = true;\n  }\n\n  // Returns the animation source, which may be undefined\n  public get source(): string {\n    return this.src;\n  }\n\n  // Returns a list of animation names on the chosen artboard\n  public get animationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const animationNames: string[] = [];\n    for (let i = 0; i < this.artboard.animationCount(); i++) {\n      animationNames.push(this.artboard.animationByIndex(i).name);\n    }\n    return animationNames;\n  }\n\n  /**\n   * Returns a list of state machine names from the current artboard\n   */\n  public get stateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const stateMachineNames: string[] = [];\n    for (let i = 0; i < this.artboard.stateMachineCount(); i++) {\n      stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n    }\n    return stateMachineNames;\n  }\n\n  /**\n   * Returns the inputs for the specified instanced state machine, or an empty\n   * list if the name is invalid or the state machine is not instanced\n   * @param name the state machine name\n   * @returns the inputs for the named state machine\n   */\n  public stateMachineInputs(name: string): StateMachineInput[] {\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.loaded) {\n      return;\n    }\n    const stateMachine = this.animator.stateMachines.find(m => m.name === name);\n    return stateMachine?.inputs;\n  }\n\n  // Returns a list of playing machine names\n  public get playingStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter(m => m.playing)\n      .map(m => m.name);\n  }\n\n  // Returns a list of playing animation names\n  public get playingAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter(a => a.playing)\n      .map(a => a.name);\n  }\n\n\n  // Returns a list of paused animation names\n  public get pausedAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter(a => !a.playing)\n      .map(a => a.name);\n  }\n\n  /**\n   *  Returns a list of paused machine names\n   * @returns a list of state machine names that are paused\n   */\n  public get pausedStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter(m => !m.playing)\n      .map(m => m.name);\n  }\n\n  /**\n   * @returns true if any animation is playing\n   */\n  public get isPlaying(): boolean {\n    return this.animator.isPlaying;\n  }\n\n  /**\n   * @returns true if all instanced animations are paused\n   */\n  public get isPaused(): boolean {\n    return this.animator.isPaused;\n  }\n\n  /**\n   * @returns true if no animations are playing or paused\n   */\n  public get isStopped(): boolean {\n    return this.animator.isStopped;\n  }\n\n  /**\n   * @returns the bounds of the current artboard, or undefined if the artboard\n   * isn't loaded yet.\n   */\n  public get bounds(): Bounds {\n    return this.artboard ? this.artboard.bounds : undefined;\n  }\n\n  /**\n   * Subscribe to Rive-generated events\n   * @param type the type of event to subscribe to\n   * @param callback callback to fire when the event occurs\n   */\n  public on(type: EventType, callback: EventCallback) {\n    this.eventManager.add({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes from a Rive-generated event\n   * @param callback the callback to unsubscribe from\n   */\n  public unsubscribe(type: EventType, callback: EventCallback) {\n    this.eventManager.remove({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes all listeners from an event type, or everything if no type is\n   * given\n   * @param type the type of event to unsubscribe from, or all types if\n   * undefined\n   */\n  public unsubscribeAll(type?: EventType) {\n    this.eventManager.removeAll(type);\n  }\n\n  /**\n   * Stops the rendering loop; this is different from pausing in that it doesn't\n   * change the state of any animation. It stops rendering from occurring. This\n   * is designed for situations such as when Rive isn't visible.\n   *\n   * The only way to start rendering again is to call `startRendering`.\n   * Animations that are marked as playing will start from the position that\n   * they would have been at if rendering had not been stopped.\n   */\n  public stopRendering() {\n    if (this.loaded && this.frameRequestId) {\n      cancelAnimationFrame(this.frameRequestId);\n      this.frameRequestId = null;\n    }\n  }\n\n  /**\n   * Starts the rendering loop if it has been previously stopped. If the\n   * renderer is already active, then this will have zero effect.\n   */\n  public startRendering() {\n    if (this.loaded && !this.frameRequestId) {\n      this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n    }\n  }\n\n  /**\n   * Returns the contents of a Rive file: the artboards, animations, and state machines\n   */\n  public get contents(): RiveFileContents {\n    if (!this.loaded) {\n      return undefined;\n    }\n    const riveContents: RiveFileContents = {\n      artboards: [],\n    };\n    for (let i = 0; i < this.file.artboardCount(); i++) {\n      const artboard = this.file.artboardByIndex(i);\n      const artboardContents: ArtboardContents = {\n        name: artboard.name,\n        animations: [],\n        stateMachines: [],\n      };\n      for (let j = 0; j < artboard.animationCount(); j++) {\n        const animation = artboard.animationByIndex(j);\n        artboardContents.animations.push(animation.name);\n      }\n      for (let k = 0; k < artboard.stateMachineCount(); k++) {\n        const stateMachine = artboard.stateMachineByIndex(k);\n        const name = stateMachine.name;\n        const instance = new this.runtime.StateMachineInstance(stateMachine);\n        const inputContents: StateMachineInputContents[] = [];\n        for (let l = 0; l < instance.inputCount(); l++) {\n          const input = instance.input(l);\n          inputContents.push({name: input.name, type: input.type});\n        }\n        artboardContents.stateMachines.push({name: name, inputs: inputContents});\n      }\n      riveContents.artboards.push(artboardContents);\n    }\n    return riveContents;\n  }\n}\n\n/**\n * Contents of a state machine input\n */\ninterface StateMachineInputContents {\n  name: string;\n  type: StateMachineInputType;\n  initialValue?: boolean | number;\n}\n\n/**\n * Contents of a state machine\n */\ninterface StateMachineContents {\n  name: string;\n  inputs: StateMachineInputContents[];\n}\n\n/**\n * Contents of an artboard\n */\ninterface ArtboardContents {\n  animations: string[];\n  stateMachines: StateMachineContents[];\n  name: string;\n}\n\n/**\n * contents of a Rive file\n */\ninterface RiveFileContents {\n  artboards?: ArtboardContents[];\n}\n\n\n// Loads Rive data from a URI via fetch.\nconst loadRiveFile = async (src: string): Promise<ArrayBuffer> => {\n  const req = new Request(src);\n  const res = await fetch(req);\n  const buffer = await res.arrayBuffer();\n  return buffer;\n}\n\n// #endregion\n\n// #region utility functions\n\n/*\n * Utility function to ensure an object is a string array\n */\nlet mapToStringArray = (obj?: string[] | string | undefined): string[] => {\n  if (typeof obj === 'string') {\n    return [obj];\n  } else if (obj instanceof Array) {\n    return obj;\n  }\n  // If obj is undefined, return empty array\n  return [];\n}\n\n// #endregion\n\n// #region testing utilities\n\n// Exports to only be used for tests\nexport const Testing = {\n  EventManager: EventManager,\n  TaskQueueManager: TaskQueueManager,\n}\n\n// #endregion"],"sourceRoot":""}